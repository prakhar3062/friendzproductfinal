{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DesktopNavbar from './Desktop';\nimport MobileNavbar from './Mobile';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    gridGap: '1rem',\n    [theme.breakpoints.down('sm')]: {\n      gridTemplateColumns: '1fr'\n    }\n  },\n  modal: {\n    padding: '0.5rem'\n  }\n}));\n\nfunction Header() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const matches = useMediaQuery(theme => theme.breakpoints.up('md'));\n  const HeaderComponent = matches ? __jsx(DesktopNavbar, {\n    modalOpen: handleClickOpen\n  }) : __jsx(MobileNavbar, {\n    modalOpen: handleClickOpen\n  });\n  const CollegeNames = [{\n    title: 'The Shawshank Redemption'\n  }, {\n    title: 'The Godfather'\n  }, {\n    title: 'The Godfather: Part II'\n  }, {\n    title: 'The Dark Knight'\n  }, {\n    title: '12 Angry Men'\n  }, {\n    title: \"Schindler's List\"\n  }, {\n    title: 'Pulp Fiction'\n  }, {\n    title: 'The Lord of the Rings: The Return of the King'\n  }, {\n    title: 'The Good, the Bad and the Ugly'\n  }];\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, HeaderComponent, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.modal\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"SignUp\"), __jsx(DialogContent, null, __jsx(DialogContentText, null, \"To subscribe to this website, please enter your email address here. We will send updates occasionally.\"), __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"fname\",\n    label: \"First Name\",\n    type: \"text\",\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"lname\",\n    label: \"Last Name\",\n    type: \"text\",\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Phone No\",\n    type: \"text\",\n    fullWidth: true\n  }), __jsx(Autocomplete, {\n    id: \"university\",\n    options: CollegeNames,\n    getOptionLabel: option => option.title,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      label: \"College\",\n      fullWidth: true\n    }))\n  }))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancel\"), __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"SignUp\"))));\n}\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}