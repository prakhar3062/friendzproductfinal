{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../theme';\nimport 'swiper/css/swiper.css';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\nimport NProgress from 'nprogress'; //nprogress module\n\nimport 'nprogress/nprogress.css';\nimport '../styles/global.css';\nimport 'cropperjs/dist/cropper.css'; // import \"~/node_modules/connectycube/dist/connectycube.min.js\";\n\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { CreateVisit, getSeller } from './../apis/global-api';\nimport { VALID_ROUTES } from './../constants';\nimport { firebaseCloudMessaging } from './../../utils/webPush';\nimport firebase from 'firebase/app'; //import { updateDeviceToken } from '../src/apis/auth-api';\n// import OneSignal, { useOneSignalSetup } from 'react-onesignal';\n\nRouter.events.on('routeChangeStart', function () {\n  NProgress.start();\n});\nRouter.events.on('routeChangeComplete', function () {\n  isuserProfileComplete();\n  NProgress.done();\n});\nRouter.events.on('routeChangeError', function () {\n  return NProgress.done();\n});\n\nvar isuserProfileComplete = function isuserProfileComplete() {\n  var userData = window.localStorage.getItem('user');\n  userData = userData ? JSON.parse(userData) : '';\n  var accessTokenData = window.localStorage.getItem('accessToken');\n\n  if (accessTokenData && accessTokenData != 'undefined' && userData) {\n    // setToken(userData);\n    // firebaseCloudMessaging.init(userData)\n    console.log(Router.router.route);\n\n    if (!userData.email_verified_at && Router.router.route != '/verify') {\n      getSeller(userData.id).then(function (user) {\n        if (user.email_verified_at && !user.is_complete && Router.router.asPath != '/profile/edit') {\n          localStorage.setItem('user', JSON.stringify(user));\n          Router.push('/profile/edit');\n        } else if (Router.router.route != '/not-verified-email') {\n          Router.push('/not-verified-email');\n        }\n      });\n      return false;\n    } else if (userData.email_verified_at && !userData.is_complete && Router.router.asPath != '/profile/edit') {\n      Router.push('/profile/edit');\n    } else {\n      setUserVisit(userData);\n    }\n  }\n};\n\nvar setUserVisit = function setUserVisit(userData) {\n  var route = Router.router.route.replace('/', '');\n  if (!route) return;\n\n  if (route == 'products') {\n    var _Router$router$query = Router.router.query,\n        type = _Router$router$query.type,\n        s = _Router$router$query.s;\n\n    if (type == 'buy') {\n      route = 'products-buy';\n    }\n\n    if (type == 'sell') {\n      route = 'products-sell';\n    }\n\n    if (s) {\n      route = 'products-search';\n    }\n  }\n\n  var routeExist = VALID_ROUTES.find(function (obj) {\n    return obj.route === route;\n  });\n  console.log('routetest', Router.router, route, routeExist);\n  if (!routeExist) return;\n  var data = {\n    user_id: userData.id,\n    feature: routeExist.title\n  };\n  CreateVisit(data).then(function (data) {\n    console.log(data);\n  });\n}; // const setToken = async (userData) => {\n//   try {\n//     const token = await firebaseCloudMessaging.init(userData);\n//     if (token) {\n//       getMessage();\n//     }\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n\nvar getMessage = function getMessage() {\n  var messaging = firebase.messaging();\n  messaging.onMessage(function (message) {\n    return console.log('foreground', message);\n  });\n};\n\nexport default function MyApp(props) {\n  var Component = props.Component,\n      pageProps = props.pageProps;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      onesignalinit = _useState[0],\n      setonesignalinit = _useState[1]; // useOneSignalSetup(() => {\n  // let userData = window.localStorage.getItem(\"user\");\n  // userData = userData ? JSON.parse(userData) : \"\";\n  // if (userData) {\n  //   OneSignal.setEmail(userData.email);\n  //   OneSignal.setExternalUserId(userData.id);\n  // }\n  // });\n\n\n  React.useEffect(function () {\n    var userData = window.localStorage.getItem('user');\n    userData = userData ? JSON.parse(userData) : '';\n    var OneSignal = window.OneSignal || [];\n    var initConfig = {\n      appId: process.env.ONESIGNAL_APP_ID,\n      notifyButton: {\n        enable: true\n      }\n    };\n\n    if (userData) {\n      OneSignal.push(function () {\n        OneSignal.SERVICE_WORKER_PARAM = {\n          scope: '/subdirectory/'\n        };\n        OneSignal.SERVICE_WORKER_PATH = 'subdirectory/OneSignalSDKWorker.js';\n        OneSignal.SERVICE_WORKER_UPDATER_PATH = 'subdirectory/OneSignalSDKUpdaterWorker.js';\n\n        if (!onesignalinit) {\n          OneSignal.init(initConfig);\n          setonesignalinit(true);\n        } // if (userData) {\n\n\n        OneSignal.getUserId(function (userId) {\n          if (userId != userData.device_token) {\n            updateDeviceToken(userData.id, userId).then(function (result) {\n              userData.device_token = userId;\n              window.localStorage.setItem('user', JSON.stringify(userData));\n            });\n          }\n\n          console.log(userData, userId);\n        });\n        OneSignal.sendTag('user', userData.id); // }\n      });\n    }\n\n    isuserProfileComplete(); // Remove the server-side injected CSS.\n\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []); // const setToken = async (userData) => {\n  //   // try {\n  //   //   const token = await firebaseCloudMessaging.init(userData);\n  //   //   if (token) {\n  //   //     getMessage();\n  //   //   }\n  //   // } catch (error) {\n  //   //   console.log(error);\n  //   // }\n  // }\n\n  return __jsx(Provider, {\n    store: store\n  }, __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"HomePage\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n  })), __jsx(ThemeProvider, {\n    theme: theme\n  }, __jsx(CssBaseline, null), __jsx(Component, pageProps))));\n}","map":null,"metadata":{},"sourceType":"module"}