{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectedDialog } from '../../redux/actions/selectedDialog'; // import dialogs from '../../redux/reducers/dialogs';\n\nimport ConnectyCube from \"connectycube\";\n\nconst DialogBox = ({\n  dialog,\n  auth,\n  selectDialog,\n  dialogs,\n  unread_messages_count\n}) => {\n  const {\n    0: user,\n    1: setuser\n  } = useState('');\n  const {\n    0: msg,\n    1: setmsg\n  } = useState('');\n  const {\n    0: title,\n    1: settitle\n  } = useState('');\n  const {\n    0: time,\n    1: settime\n  } = useState('');\n  const {\n    0: unread,\n    1: setunread\n  } = useState(0);\n  const selectedDialogVal = useSelector(state => state.selectedDialog);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!dialog) {\n      return;\n    }\n\n    if (dialog.related_data) {\n      settitle(dialog.related_data.title);\n    } // if (unread_messages_count) {\n    //     setunread(unread_messages_count ? unread_messages_count:'')\n    // }\n\n\n    if (dialog.users.length) {\n      let user = dialog.users.filter(item => item.user.id != auth.id);\n      user[0] && setuser(user[0].user);\n    }\n\n    if (dialog.last_message) {\n      setmsg(dialog.last_message);\n    }\n\n    getUnread(dialog.connecty_dialog_id);\n  }, [dialog, unread_messages_count, dialogs]);\n\n  const getUnread = async dialog_id => {\n    const params = {\n      chat_dialog_ids: [dialog_id]\n    };\n    ConnectyCube.chat.message.unreadCount(params).then(result => {\n      setunread(result[dialog_id]);\n      console.log('resultunread', result[dialog_id], params);\n    }).catch(error => {});\n  };\n\n  const gotoChat = () => {\n    if (!dialog) {\n      return;\n    } // dispatch(selectedDialog(dialog))\n\n\n    selectDialog(dialog, dialogs);\n  };\n\n  const isSelected = selectedDialogVal && dialog && selectedDialogVal.id == dialog.id;\n\n  if (!user) {\n    return null;\n  }\n\n  return __jsx(\"li\", {\n    onClick: gotoChat,\n    className: `person ${isSelected ? 'selected' : ''}`\n  }, __jsx(\"img\", {\n    src: user.profile_img ? user.profile_img : '/static/images/user-placeholder.png',\n    alt: \"\"\n  }), __jsx(\"div\", {\n    className: \"imgRight\"\n  }, __jsx(\"span\", {\n    className: \"name\"\n  }, user.first_name), __jsx(\"span\", {\n    className: \"time\"\n  }, msg.created_at ? moment(msg.created_at).fromNow() : ''), __jsx(\"span\", {\n    className: \"preview\"\n  }, title), unread > 0 && __jsx(\"span\", {\n    className: \"unread-box\"\n  }, __jsx(\"span\", {\n    className: \"unread\"\n  }, unread))));\n};\n\nexport default DialogBox;","map":null,"metadata":{},"sourceType":"module"}