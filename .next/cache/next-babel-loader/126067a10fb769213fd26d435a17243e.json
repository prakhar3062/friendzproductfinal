{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useSelector } from \"react-redux\";\nimport NewEvent from \"../../../../src/containers/newEvent\";\nimport { getEvent } from \"../../../../src/apis/global-api\";\n\nvar EditEventPage = function EditEventPage(_ref) {\n  var query = _ref.query;\n  var router = useRouter();\n  var accessToken = useSelector(function (state) {\n    return state.auth_user.accessToken;\n  });\n  var user = useSelector(function (state) {\n    return state.auth_user.user;\n  });\n\n  var _useState = useState(''),\n      event = _useState[0],\n      setevent = _useState[1];\n\n  var event_id = query.event_id;\n  useEffect(function () {\n    if (!accessToken) {\n      router.push(\"/\");\n    }\n\n    event_id && findPost();\n  }, [query]);\n\n  var findPost = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getEvent(event_id).then(function (data) {\n                setevent(data); //    setloading(false);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function findPost() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (!event) return null;\n  return __jsx(NewEvent, {\n    user: user,\n    formtype: \"edit\",\n    event: event\n  });\n};\n\nEditEventPage.getInitialProps = function (_ref3) {\n  var query = _ref3.query;\n  return {\n    query: query\n  };\n};\n\nexport default EditEventPage;","map":null,"metadata":{},"sourceType":"module"}