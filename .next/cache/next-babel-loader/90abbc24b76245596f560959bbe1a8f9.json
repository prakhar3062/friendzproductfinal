{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ChatIcon from \"../../../chat/components/ChatIcon\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport useNavbar from \"../utils/useNavbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport AuthIcon from \"../../../components/Login_Register\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport logo from '../../../public/static/images/logo.png';\nimport Link from 'next/link';\nconst useStyles = makeStyles(theme => _objectSpread(_objectSpread({\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: '#fff',\n    \"&:hover\": {\n      backgroundColor: '#fff'\n    },\n    border: \"solid 1px #ccc\",\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\"\n      }\n    }\n  }\n}, commonStyles), {}, {\n  [theme.breakpoints.up(\"md\")]: desktopStyles,\n  [theme.breakpoints.down(\"md\")]: TabStyles\n}));\nimport { showModal } from \"../../../redux/actions/authModal\";\n\nfunction Header({\n  modalOpen\n}) {\n  const {\n    isScrolled,\n    navBarRef\n  } = useNavbar();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [authModal, setauthModal] = React.useState(false);\n  const [timeout, settimeout] = React.useState(\"\");\n  const anchorRef = React.useRef(null);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const accessToken = useSelector(state => state.auth_user.accessToken);\n\n  const goto_commingSoon = () => {\n    router.push(\"/coming-soon\");\n  };\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleToggleClose = event => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  } // return focus to the button when we transitioned from !open -> open\n\n\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n  const classes = useStyles();\n\n  const handleListProduct = e => {\n    setauthModal(false);\n    e.preventDefault();\n\n    if (accessToken) {\n      router.push(\"/post\");\n    } else {\n      router.push(\"/?signup=open\");\n    }\n  };\n\n  const handleListEvent = e => {\n    setauthModal(false);\n    e.preventDefault();\n\n    if (accessToken) {\n      router.push(\"/post/event\");\n    } else {\n      router.push(\"/?signup=open\");\n    }\n  };\n\n  const handleSearch = e => {\n    let value = e.target.value;\n    if (timeout) clearTimeout(timeout);\n    settimeout(setTimeout(() => {\n      router.push(\"/products?s=\" + value);\n    }, 600));\n  };\n\n  return __jsx(\"nav\", {\n    id: \"navbar\",\n    className: classNames(classes.root, isScrolled && classes.scrolled),\n    ref: navBarRef\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 2\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    className: classNames(classes.logo, isScrolled && classes.logoScrolled),\n    src: logo\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 9\n  }, __jsx(\"ul\", {\n    className: classes.Menu\n  }, __jsx(\"li\", {\n    className: router.pathname == \"/\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"Home\"))), __jsx(\"li\", {\n    className: router.asPath == \"/products?type=buy\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/products?type=buy\"\n  }, \"Buy\")), __jsx(\"li\", {\n    className: router.asPath == \"/products?type=rental\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/products?type=rental\"\n  }, \"Rent\")), __jsx(\"li\", {\n    className: router.pathname == \"/events\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/events\"\n  }, \"Events\")), __jsx(\"li\", {\n    className: router.pathname == \"/buy-request\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/buy-request\"\n  }, \"Requests\")), __jsx(\"li\", {\n    className: router.pathname == \"/post\" ? \"active\" : \"\"\n  }, __jsx(\"a\", null, __jsx(\"span\", {\n    onClick: handleListProduct\n  }, \"Sell\"))), __jsx(\"li\", {\n    className: router.pathname == \"/post/event\" ? \"active\" : \"\"\n  }, __jsx(\"a\", null, __jsx(\"span\", {\n    onClick: handleListEvent\n  }, \"Add Event\"))), __jsx(\"li\", {\n    className: router.pathname == \"/feedback\" ? \"active\" : \"\"\n  }, __jsx(Link, {\n    href: \"/feedback\"\n  }, \"Feedback\")), __jsx(\"li\", null, __jsx(Button, {\n    ref: anchorRef,\n    \"aria-controls\": open ? \"More\" : undefined,\n    \"aria-haspopup\": \"true\",\n    onClick: handleToggle\n  }, \"More\"), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, ({\n    TransitionProps,\n    placement\n  }) => __jsx(Grow, _extends({}, TransitionProps, {\n    style: {\n      transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\n    }\n  }), __jsx(Paper, null, __jsx(ClickAwayListener, {\n    onClickAway: handleToggleClose\n  }, __jsx(MenuList, {\n    autoFocusItem: open,\n    id: \"menu-list-grow\",\n    onKeyDown: handleListKeyDown\n  }, __jsx(MenuItem, null, __jsx(Link, {\n    href: \"/about\"\n  }, \"About\")), __jsx(MenuItem, null, __jsx(Link, {\n    href: \"/privacy-policy\"\n  }, \"Privacy Policy\")), __jsx(MenuItem, null, __jsx(Link, {\n    href: \"/terms-and-conditions\"\n  }, \"Terms & Conditions\")))))))))), __jsx(Grid, {\n    item: true,\n    xs: 1\n  }, __jsx(\"ul\", {\n    className: classes.MenuRight\n  }, __jsx(\"li\", null, __jsx(ChatIcon, null)), __jsx(\"li\", null, __jsx(AuthIcon, {\n    modalOpen: authModal\n  })))))));\n}\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}