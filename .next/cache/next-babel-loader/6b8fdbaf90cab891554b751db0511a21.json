{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { searchUniversities } from '../../apis/global-api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Typography from '@material-ui/core/Typography';\nimport { simpleSignup, login, googleSignup } from '../../apis/auth-api';\nimport { useDispatch } from 'react-redux';\nimport { authenticated } from '../../redux/actions/auth';\nimport { useRouter } from 'next/router';\nimport { GoogleLogin } from 'react-google-login';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    form: _defineProperty({\n      padding: '1.5rem 2.0rem'\n    }, theme.breakpoints.up('sm'), {\n      margin: '2.5rem'\n    }),\n    modal: {\n      padding: '0.5rem'\n    },\n    button: {\n      '&:focus': {\n        background: 'rgb(177, 90, 16)'\n      },\n      '& .MuiCircularProgress-colorPrimary': {\n        marginLeft: '10px',\n        color: '#fff'\n      }\n    }\n  };\n});\nexport var AuthForm = function AuthForm(_ref) {\n  var type = _ref.type;\n\n  var _useState = useState(''),\n      firstname = _useState[0],\n      setfirstname = _useState[1];\n\n  var _useState2 = useState(''),\n      lastname = _useState2[0],\n      setlastname = _useState2[1];\n\n  var _useState3 = useState(''),\n      email = _useState3[0],\n      setemail = _useState3[1];\n\n  var _useState4 = useState({\n    name: ''\n  }),\n      university = _useState4[0],\n      setuniversity = _useState4[1];\n\n  var _useState5 = useState(''),\n      password = _useState5[0],\n      setpassword = _useState5[1];\n\n  var _useState6 = useState(false),\n      showpassword = _useState6[0],\n      setshowpassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      confirm_password = _useState7[0],\n      setconfirm_password = _useState7[1];\n\n  var _useState8 = useState(false),\n      showconfirm_password = _useState8[0],\n      setshowconfirm_password = _useState8[1];\n\n  var _useState9 = useState(''),\n      phone_no = _useState9[0],\n      setphone_no = _useState9[1];\n\n  var _useState10 = useState({}),\n      errs = _useState10[0],\n      seterrs = _useState10[1];\n\n  var _useState11 = useState([]),\n      universities = _useState11[0],\n      setuniversities = _useState11[1];\n\n  var _useState12 = useState(''),\n      branch = _useState12[0],\n      setbranch = _useState12[1];\n\n  var _useState13 = useState(false),\n      loading = _useState13[0],\n      setloading = _useState13[1];\n\n  var _useState14 = useState(false),\n      btnloading = _useState14[0],\n      setbtnloading = _useState14[1];\n\n  var _useState15 = useState(true),\n      backdrop = _useState15[0],\n      setbackdrop = _useState15[1];\n\n  var _useState16 = useState([]),\n      formerrs = _useState16[0],\n      setformerrs = _useState16[1];\n\n  var _useState17 = useState(false),\n      showRedirect = _useState17[0],\n      setshowRedirect = _useState17[1];\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var handleSubmit = function handleSubmit(e) {\n    setformerrs([]);\n    submitSignUp();\n  };\n\n  var submitLogin = function submitLogin() {\n    setshowRedirect(false);\n    setformerrs([]);\n    setbtnloading(true);\n    var data = {\n      email: email,\n      password: password\n    };\n    login(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        setbtnloading(false);\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var submitSignUp = function submitSignUp() {\n    setshowRedirect(false);\n    setbtnloading(true); // let university_id = universities.find(\n    //   (item) => item.name == university.name\n    // );\n\n    var data = {\n      // first_name: firstname,\n      // last_name: lastname,\n      email: email,\n      // university_id: university_id.id,\n      password: password // phone_number: phone_no,\n      // branch: branch,\n\n    };\n    simpleSignup(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        setbtnloading(false);\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var setLogin = function setLogin(user, accessToken, favEvents, favProducts) {\n    console.log(user, accessToken);\n    dispatch(authenticated(user, accessToken, favEvents, favProducts));\n\n    if (user.is_complete) {\n      router.push('/');\n    } else {\n      router.push('/profile/edit');\n    }\n  };\n\n  var responseGoogleSuccess = function responseGoogleSuccess(response) {\n    var data = {\n      email: response.profileObj.email,\n      google_id: response.googleId\n    }; // return\n\n    googleSignup(data).then(function (response) {\n      if (response.error) {\n        setbtnloading(false);\n        setformerrs(response.msg);\n      } else {\n        var user = response.body.user;\n        var accessToken = response.body.user.api_token;\n        setbtnloading(false);\n        var favEvents = response.body.favEvents;\n        var favProducts = response.body.favProducts;\n        setLogin(user, accessToken, favEvents, favProducts);\n        setshowRedirect(true);\n      }\n    });\n  };\n\n  var responseGoogleFailure = function responseGoogleFailure(response) {\n    console.log(response); // alert('Oops!! there was some problem while logging in.')\n  };\n\n  var backdropClose = function backdropClose() {\n    setbackdrop(false);\n  };\n\n  var validateform = function validateform(e) {\n    e.preventDefault();\n\n    if (type == 'login') {\n      submitLogin();\n      return;\n    }\n\n    var err = {};\n\n    if (password != confirm_password) {\n      err.no_same = 'true';\n    }\n\n    if (password.length < 8) {\n      err.pwd_length = 'true';\n    } // if (!university.name) {\n    //   err.university = \"true\";\n    // }\n\n\n    seterrs(err);\n    var has_error = Object.keys(err).length;\n\n    if (!parseInt(has_error)) {\n      handleSubmit();\n    }\n  };\n\n  var updateformData = function updateformData(e, type) {\n    e.preventDefault();\n    eval('set' + type + \"('\" + e.target.value + \"')\");\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e.target.value;\n    if (!value) return;\n    setloading(true);\n    searchUniversities(value).then(function (response) {\n      setloading(false);\n      setuniversities(response);\n    });\n  };\n\n  var gotoForgotPassword = function gotoForgotPassword() {\n    router.push('/forgot-password');\n  };\n\n  return __jsx(\"div\", {\n    className: classes.form\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    className: \"googleBtn\"\n  }, __jsx(GoogleLogin, {\n    clientId: process.env.GOOGLE_CLIENT_ID,\n    buttonText: type == 'login' ? 'Login with Google' : 'SignUp with Google',\n    onSuccess: responseGoogleSuccess,\n    onFailure: responseGoogleFailure,\n    cookiePolicy: 'single_host_origin'\n  })), __jsx(\"br\", null), __jsx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, \"or\"), __jsx(\"br\", null), __jsx(\"form\", {\n    className: classes.container,\n    onSubmit: validateform\n  }, type == 'signup' && __jsx(React.Fragment, null), __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Email Address\",\n    type: \"email\",\n    fullWidth: true,\n    value: email,\n    onChange: function onChange(e) {\n      return updateformData(e, 'email');\n    },\n    name: \"email\"\n  }), type == 'signup' && __jsx(React.Fragment, null, errs['university'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Please select a university.\")), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Password\",\n    type: showpassword ? 'text' : 'password',\n    fullWidth: true,\n    value: password,\n    onChange: function onChange(e) {\n      return updateformData(e, 'password');\n    },\n    name: \"password\"\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setshowpassword(!showpassword);\n    }\n  }, ' ', showpassword ? __jsx(Visibility, null) : __jsx(VisibilityOff, null))), type == 'signup' && __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, __jsx(TextField, {\n    required: true,\n    margin: \"dense\",\n    label: \"Confirm Password\",\n    type: showconfirm_password ? 'text' : 'password',\n    fullWidth: true,\n    value: confirm_password,\n    onChange: function onChange(e) {\n      return updateformData(e, 'confirm_password');\n    },\n    name: \"confirm_password\"\n  }), __jsx(\"span\", {\n    onClick: function onClick() {\n      return setshowconfirm_password(!showconfirm_password);\n    }\n  }, ' ', showconfirm_password ? __jsx(Visibility, null) : __jsx(VisibilityOff, null))), errs['no_same'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Password must match with confirm password\"), errs['pwd_length'] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Password must have 8 characters\"), __jsx(\"div\", null, formerrs.length > 0 && formerrs.map(function (text, index) {\n    return __jsx(Typography, {\n      color: \"error\",\n      key: \"err-\".concat(index)\n    }, text);\n  })), __jsx(Button, {\n    type: \"submit\",\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\"\n  }, type == 'login' ? 'Login' : 'SignUp', btnloading ? __jsx(CircularProgress, {\n    color: \"primary\",\n    size: 20\n  }) : null)), __jsx(\"p\", {\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: gotoForgotPassword\n  }, \"Forgot password ? click \", __jsx(\"span\", null, \"here\")), showRedirect && __jsx(Typography, {\n    color: \"primary\"\n  }, \"Redirecting to profile page!!\", ' ', __jsx(CircularProgress, {\n    color: \"primary\",\n    size: 20\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}