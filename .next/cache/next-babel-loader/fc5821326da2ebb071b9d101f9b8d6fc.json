{"ast":null,"code":"export var fileToBase64 = function fileToBase64(file) {\n  return new Promise(function (resolve) {\n    // var file = new File([filename], filepath);\n    var reader = new FileReader(); // Read file content on file loaded event\n\n    reader.onload = function (event) {\n      resolve(event.target.result);\n    }; // Convert data to base64\n\n\n    reader.readAsDataURL(file);\n  });\n};\nexport var isEmail = function isEmail(val) {\n  var regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regEmail.test(val);\n};\nexport var isPhone = function isPhone(val) {\n  var regEmail = /^\\d{10}$/;\n  return regEmail.test(val);\n};","map":{"version":3,"sources":["E:/jay/frontend/src/Utils/helpers.js"],"names":["fileToBase64","file","Promise","resolve","reader","FileReader","onload","event","target","result","readAsDataURL","isEmail","val","regEmail","test","isPhone"],"mappings":"AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AACpC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9B;AACA,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAF8B,CAG9B;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/BJ,MAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAP;AACD,KAFD,CAJ8B,CAQ9B;;;AACAL,IAAAA,MAAM,CAACM,aAAP,CAAqBT,IAArB;AACD,GAVM,CAAP;AAWD,CAZM;AAcP,OAAO,IAAMU,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AAC9B,MAAIC,QAAQ,GAAG,wJAAf;AACA,SAAOA,QAAQ,CAACC,IAAT,CAAcF,GAAd,CAAP;AACD,CAHM;AAKP,OAAO,IAAMG,OAAO,GAAE,SAATA,OAAS,CAACH,GAAD,EAAS;AAC7B,MAAIC,QAAQ,GAAG,UAAf;AACA,SAAOA,QAAQ,CAACC,IAAT,CAAcF,GAAd,CAAP;AACD,CAHM","sourcesContent":["export const fileToBase64 = (file) => {\n  return new Promise((resolve) => {\n    // var file = new File([filename], filepath);\n    var reader = new FileReader();\n    // Read file content on file loaded event\n    reader.onload = function (event) {\n      resolve(event.target.result);\n    };\n\n    // Convert data to base64\n    reader.readAsDataURL(file);\n  });\n};\n\nexport const isEmail = (val) => {\n  let regEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regEmail.test(val);\n};\n\nexport const isPhone= (val) => {\n  let regEmail = /^\\d{10}$/;\n  return regEmail.test(val);\n};\n"]},"metadata":{},"sourceType":"module"}