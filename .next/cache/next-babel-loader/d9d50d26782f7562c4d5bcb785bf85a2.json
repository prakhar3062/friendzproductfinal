{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../Layout\";\nimport { Box, Card, CardContent, TextField, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { searchUniversities, searchCategories } from \"../apis/global-api\";\nimport { AddProduct, UpdateProduct } from \"../apis/auth-api\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport PhotoCameraOutlinedIcon from \"@material-ui/icons/PhotoCameraOutlined\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useDispatch } from \"react-redux\";\nimport { authenticated } from \"../redux/actions/auth\";\nimport { useRouter } from \"next/router\";\nimport { fileToBase64 } from \"../Utils/helpers\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    section: {\n      padding: \"5rem 0\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    form: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    pdTitle: {\n      marginBottom: \"2rem\"\n    },\n    card: {\n      boxShadow: \"none\",\n      border: \"#ccc solid 1px\",\n      height: \"100%\",\n      background: \"rgba(255, 255, 255, 0.6)\",\n      \"&::before\": {\n        content: '\"\"',\n        background: \"url(/static/images/circleCenter.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        top: \"55%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        height: \"540px\",\n        width: \"540px\",\n        position: \"absolute\",\n        zIndex: \"-1\"\n      },\n      \"&::after\": {\n        content: '\"\"',\n        background: \"url(/static/images/circleCenter.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        bottom: \"-15rem\",\n        left: \"-25rem\",\n        height: \"50rem\",\n        width: \"50rem\",\n        position: \"absolute\",\n        zIndex: \"-1\"\n      }\n    },\n    cardBody: {\n      padding: \"2rem !important\"\n    },\n    formInput: _defineProperty({\n      marginBottom: \"2rem\",\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\",\n      marginBottom: \"1rem\"\n    }),\n    formInputFullWidth: {\n      width: \"100%\"\n    },\n    formInputField: {\n      width: \"80%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      }\n    },\n    formInputFieldFull: _defineProperty({}, theme.breakpoints.up(\"sm\"), {\n      width: \"90%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      },\n      \"& textarea\": {\n        width: \"100%\",\n        border: \"none\",\n        borderBottom: \"solid 1px #ccc\",\n        height: \"100px\"\n      },\n      \"& textarea:focus\": {\n        outline: \"none\",\n        borderBottom: \"solid 1px var(--theme)\"\n      }\n    }),\n    formControl: {\n      width: \"100%\"\n    },\n    Button: {\n      width: \"80%\",\n      height: \"50px\",\n      marginTop: \"1rem\",\n      backgroundColor: \"var(--theme)\",\n      color: \"#fff\",\n      fontSize: \"1rem\",\n      boxShadow: \"none\",\n      maxWidth: \"200px\"\n    },\n    Images: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      \"& img\": {\n        width: \"125px\",\n        height: \"125px\",\n        objectFit: \"contain\",\n        marginRight: \"10px\",\n        marginBottom: \"10px\",\n        border: \"solid 1px #333 \"\n      },\n      \"& video\": {\n        width: \"125px\",\n        height: \"125px\",\n        objectFit: \"contain\",\n        marginRight: \"10px\",\n        marginBottom: \"10px\",\n        border: \"solid 1px #333 \"\n      }\n    },\n    AddBtn: {\n      border: \"solid 1px #333\",\n      width: \"125px\",\n      height: \"125px\",\n      display: \"grid\"\n    },\n    dialogeCustom: {\n      \"& .MuiGrid-spacing-xs-8\": {\n        width: \"100%\",\n        margin: \"0\"\n      }\n    }\n  };\n});\nexport default function Post(_ref) {\n  var user = _ref.user,\n      _ref$formtype = _ref.formtype,\n      formtype = _ref$formtype === void 0 ? \"add\" : _ref$formtype,\n      _ref$product = _ref.product,\n      product = _ref$product === void 0 ? {} : _ref$product;\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState([]),\n      files = _useState2[0],\n      setfiles = _useState2[1];\n\n  var _useState3 = useState([]),\n      filesInfo = _useState3[0],\n      setfilesInfo = _useState3[1];\n\n  var _useState4 = useState(product.title),\n      title = _useState4[0],\n      settitle = _useState4[1];\n\n  var _useState5 = useState(product.type),\n      type = _useState5[0],\n      settype = _useState5[1];\n\n  var _useState6 = useState(product.description),\n      description = _useState6[0],\n      setdescription = _useState6[1];\n\n  var _useState7 = useState(product.price),\n      price = _useState7[0],\n      setprice = _useState7[1];\n\n  var _useState8 = useState({\n    name: product.university ? product.university.name : \"\",\n    id: product.university ? product.university.id : \"\"\n  }),\n      university = _useState8[0],\n      setuniversity = _useState8[1];\n\n  var _useState9 = useState({\n    name: product.category ? product.category.name : \"\",\n    id: product.category ? product.category.id : \"\"\n  }),\n      category = _useState9[0],\n      setcategory = _useState9[1];\n\n  var _useState10 = useState({}),\n      errs = _useState10[0],\n      seterrs = _useState10[1];\n\n  var _useState11 = useState(product.university ? [{\n    name: product.university.name,\n    id: product.university.id\n  }] : []),\n      universities = _useState11[0],\n      setuniversities = _useState11[1];\n\n  var _useState12 = useState(product.category ? [{\n    name: product.category.name,\n    id: product.category.id\n  }] : []),\n      categories = _useState12[0],\n      setcategories = _useState12[1];\n\n  var _useState13 = useState(false),\n      loading = _useState13[0],\n      setloading = _useState13[1];\n\n  var _useState14 = useState(false),\n      loadingUni = _useState14[0],\n      setloadingUni = _useState14[1];\n\n  var _useState15 = useState(false),\n      backdrop = _useState15[0],\n      setbackdrop = _useState15[1];\n\n  var _useState16 = useState(product.time_period),\n      time_period = _useState16[0],\n      settime_period = _useState16[1];\n\n  var _useState17 = useState([]),\n      formerrs = _useState17[0],\n      setformerrs = _useState17[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  useEffect(function () {\n    if (product.images) {\n      var updatedImages = [];\n      var updatedImagesInfo = [];\n      product.images.map(function (fileData, index) {\n        updatedImages = updatedImages.concat(fileData.base64_data);\n        updatedImagesInfo = updatedImagesInfo.concat({\n          type: fileData.type,\n          data: fileData.link\n        });\n\n        if (index + 1 == product.images.length) {\n          setfiles(updatedImages);\n          setfilesInfo(updatedImagesInfo);\n        }\n      });\n    }\n  }, [product]);\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleSave = function handleSave(filesArr) {\n    console.log(filesArr);\n    var count = 0;\n    var testARr = [];\n    filesArr.map(function (file, index) {\n      count++;\n      var reader = new FileReader();\n      var filesArr = files;\n      var filesInfoArr = filesInfo;\n\n      reader.onload = function (event) {\n        console.log(\"testfile\", index, filesArr, filesArr); //store result into your state array.\n\n        filesArr[index] = event.target.result;\n        filesInfoArr[index] = {\n          type: file[\"type\"].split(\"/\")[0],\n          data: event.target.result\n        }; // let updatedImages = ();\n        // let updatedImagesInfo = ();\n\n        setfiles(filesArr);\n        setfilesInfo(filesInfoArr);\n\n        if (count == filesArr.length) {\n          setOpen(false);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var updateformData = function updateformData(e, type) {\n    e.preventDefault();\n    eval(\"set\" + type + \"('\" + e.target.value + \"')\");\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e ? e.target.value : \"\";\n    if (!value) return;\n    setloadingUni(true);\n    searchUniversities(value).then(function (response) {\n      setloadingUni(false);\n      setuniversities(response);\n    });\n  };\n\n  var handleCatSearch = function handleCatSearch(e) {\n    var value = e ? e.target.value : \"\";\n    if (!value) return;\n    setloading(true);\n    searchCategories(value).then(function (response) {\n      setloading(false);\n      setcategories(response.data);\n    });\n  };\n\n  var checkValidation = function checkValidation() {\n    setformerrs(\"\");\n\n    if (!title || !description || !price || !university.name || !category.name || !type) {\n      setformerrs([\"All fields are required\"]);\n      return false;\n    }\n\n    if (!files.length) {\n      setformerrs([\"Images are required\"]);\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleSubmit = function handleSubmit(e, uploaded_files) {\n    e && e.preventDefault(); // console.log(files,filesInfo)\n    // return\n\n    var is_valid = checkValidation();\n\n    if (!is_valid) {\n      return;\n    }\n\n    setbackdrop(true);\n    var university_id = universities.find(function (item) {\n      return item.name == university.name;\n    });\n    var category_id = categories.find(function (item) {\n      return item.name == category.name;\n    });\n    var data = {\n      title: title,\n      description: description,\n      price: price,\n      university_id: university_id.id,\n      category_id: category_id.id,\n      seller_id: user.id,\n      type: type,\n      files: files,\n      active: true,\n      time_period: time_period\n    };\n\n    if (formtype == \"edit\" && product.id) {\n      UpdateProduct(data, product.id).then(function (response) {\n        if (response.error) {\n          setbackdrop(false);\n          setformerrs(response.msg);\n        } else {\n          router.push(\"/profile\");\n        }\n      });\n    } else {\n      AddProduct(data).then(function (response) {\n        if (response.error) {\n          setbackdrop(false);\n          setformerrs(response.msg);\n        } else {\n          router.push(\"/profile\");\n        }\n      });\n    }\n  };\n\n  var removeImage = function removeImage(index) {\n    var filterFiles = files.filter(function (file, i) {\n      return i !== index;\n    });\n    var filterFilesInfo = filesInfo.filter(function (file, i) {\n      return i !== index;\n    });\n    setfilesInfo(filterFilesInfo);\n    setfiles(filterFiles);\n  };\n\n  return __jsx(Layout, null, __jsx(\"section\", {\n    className: classes.section\n  }, backdrop && __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: backdrop // onClick={handleClose}\n\n  }, __jsx(CircularProgress, {\n    color: \"inherit\"\n  })), __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 8,\n    xs: 12,\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginBottom: \"1rem\"\n    }\n  }, formtype == \"add\" ? \"Add\" : \"Edit\", \" Item  Details\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(SubtitlesIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"fname\",\n    label: \"Title\",\n    value: title,\n    onChange: function onChange(e) {\n      return updateformData(e, \"title\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(LocalOfferIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"lname\",\n    label: \"Price\",\n    value: price,\n    type: \"number\",\n    onChange: function onChange(e) {\n      return updateformData(e, \"price\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(CategoryIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(Autocomplete, {\n    required: true,\n    options: categories,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    loading: loading,\n    value: category,\n    onInputChange: handleCatSearch // onChange={(e) => updateformData(e, \"university\")}\n    ,\n    onSelect: function onSelect(e) {\n      return setcategory({\n        name: e.target.value\n      });\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Search Categories\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, null, loading ? __jsx(CircularProgress, {\n            color: \"primary\",\n            size: 20\n          }) : null, params.InputProps.endAdornment)\n        })\n      }));\n    }\n  }), errs[\"category\"] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Please select a category.\")))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(SchoolIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(Autocomplete, {\n    required: true,\n    options: universities,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    loading: loadingUni,\n    value: university,\n    onInputChange: handleUniSearch // onChange={(e) => updateformData(e, \"university\")}\n    ,\n    onSelect: function onSelect(e) {\n      return setuniversity({\n        name: e.target.value\n      });\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Search College\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, null, loadingUni ? __jsx(CircularProgress, {\n            color: \"primary\",\n            size: 20\n          }) : null, params.InputProps.endAdornment)\n        })\n      }));\n    }\n  }), errs[\"university\"] && __jsx(Typography, {\n    color: \"error\"\n  }, \"Please select a university.\")))), __jsx(\"div\", {\n    className: \"\".concat(classes.formInput)\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: \"\".concat(classes.formInputField, \" \")\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\"\n  }, \"type\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: type,\n    onChange: function onChange(e) {\n      return updateformData(e, \"type\");\n    }\n  }, __jsx(MenuItem, {\n    value: \"Buy\"\n  }, \"Buy\"), __jsx(MenuItem, {\n    value: \"Rental\"\n  }, \"Rental\")))))), type == \"Rental\" && __jsx(\"div\", {\n    className: \"\".concat(classes.formInput)\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: \"\".concat(classes.formInputField, \" \")\n  }, __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"demo-simple-select-label\"\n  }, \"Time Period\"), __jsx(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: time_period,\n    onChange: function onChange(e) {\n      return updateformData(e, \"time_period\");\n    }\n  }, __jsx(MenuItem, {\n    value: \"day\"\n  }, \"Day\"), __jsx(MenuItem, {\n    value: \"week\"\n  }, \"Week\"), __jsx(MenuItem, {\n    value: \"month\"\n  }, \"Month\"), __jsx(MenuItem, {\n    value: \"year\"\n  }, \"Year\")))))), __jsx(\"div\", {\n    className: \"\".concat(classes.formInput, \" \").concat(classes.formInputFullWidth)\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: \"\".concat(classes.formInputField, \" \").concat(classes.formInputFieldFull)\n  }, __jsx(\"textarea\", {\n    id: \"about\",\n    label: \"Description\",\n    value: description,\n    placeholder: \"Description\",\n    onChange: function onChange(e) {\n      return updateformData(e, \"description\");\n    }\n  })))), __jsx(\"div\", {\n    className: \"\".concat(classes.formInput, \" \").concat(classes.formInputFullWidth, \" \")\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: \"1rem\"\n    }\n  }, formtype == \"add\" ? \"Add\" : \"Edit\", \" Media\"), __jsx(\"div\", {\n    className: classes.Images\n  }, filesInfo.length > 0 && filesInfo.map(function (file, index) {\n    return __jsx(\"div\", null, file.type == \"image\" && __jsx(\"img\", {\n      src: file.data\n    }), file.type == \"video\" && __jsx(\"video\", {\n      src: file.data,\n      controls: true\n    }), __jsx(DeleteIcon, {\n      onClick: function onClick() {\n        return removeImage(index);\n      }\n    }));\n  } // <ProductMedia\n  //   file={file}\n  //   key={`img${index}`}\n  //   index={index}\n  //   removeFile={() => removeImage(index)}\n  // />\n  // <img src={file.data} key={`img${index}`} />\n  ), __jsx(Button, {\n    onClick: handleOpen.bind(this),\n    className: classes.AddBtn\n  }, __jsx(PhotoCameraOutlinedIcon, null), \"More+\")), __jsx(DropzoneDialog, {\n    filesLimit: 10,\n    open: open,\n    onSave: handleSave.bind(this),\n    acceptedFiles: [\"image/*\", \"video/*\"],\n    showPreviews: true,\n    maxFileSize: 50000000,\n    onClose: handleClose.bind(this),\n    className: \"dialogeCustom\"\n  })), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.Button\n  }, formtype == \"add\" ? \"Add\" : \"Edit\", \" Item\")), formerrs.length > 0 && formerrs.map(function (msg, index) {\n    return __jsx(Typography, {\n      color: \"error\",\n      key: \"error\".concat(index)\n    }, msg);\n  }))))))));\n}","map":null,"metadata":{},"sourceType":"module"}