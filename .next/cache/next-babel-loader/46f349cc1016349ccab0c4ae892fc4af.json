{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, Card, Container, Grid, CardContent, Typography } from \"@material-ui/core\";\nimport ImageGallery from \"react-image-gallery\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ShareOutlinedIcon from \"@material-ui/icons/ShareOutlined\";\nimport { commonStyles, desktopStyles, mobileStyles } from \"./styles\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DeleteEvent, Favourite } from \"../../apis/auth-api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { authenticated } from \"../../redux/actions/auth\";\nimport ShareIcon from \"../ShareIcon\";\nimport { useRouter } from \"next/router\";\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nconst useStyles = makeStyles(theme => _objectSpread(_objectSpread({}, commonStyles), {}, {\n  [theme.breakpoints.up(\"md\")]: desktopStyles,\n  [theme.breakpoints.down(\"sm\")]: mobileStyles\n}));\n\nconst EventDetail = ({\n  data\n}) => {\n  const dispatch = useDispatch();\n  const [isSaved, setisSaved] = React.useState(0);\n  const {\n    0: event,\n    1: setevent\n  } = useState({});\n  const {\n    0: images,\n    1: setimages\n  } = useState([]);\n  const {\n    0: showVideo,\n    1: setshowVideo\n  } = useState(false);\n  const [snackbar, setsnackbar] = React.useState(false);\n  const [snackbarMsg, setsnackbarMsg] = React.useState(\"\");\n  const [snackbarType, setsnackbarType] = React.useState(\"success\");\n  const userFavEvents = useSelector(state => state.auth_user.userFavEvents);\n  const accessToken = useSelector(state => state.auth_user.accessToken);\n  const user = useSelector(state => state.auth_user.user.id);\n  const userdetail = useSelector(state => state.auth_user.user);\n  useEffect(() => {\n    isFavourite();\n  }, [userFavEvents]);\n\n  const isFavourite = () => {\n    if (userFavEvents && userFavEvents.includes(data.id)) {\n      console.log(userFavEvents, userFavEvents.includes(data.id));\n      setisSaved(1);\n    }\n  };\n\n  const changeRating = () => {\n    console.log('clk');\n\n    if (!accessToken || accessToken == '') {\n      window.location.replace(\"/?signup=open\");\n    }\n\n    if (!isSaved) {\n      Favourite({\n        'type_id': data.id,\n        type: 'event',\n        'user_id': user,\n        'action': 'add'\n      }).then(response => {\n        if (response.error) {\n          setsnackbar(true);\n          setsnackbarMsg(\"There is some error.Please try again later\");\n          setsnackbarType(\"error\");\n          dispatch(authenticated(userdetail, accessToken, response.body.favEvents, response.body.favProducts));\n        } else {\n          setsnackbar(true);\n          setsnackbarMsg(\"Added to favourites\");\n          setsnackbarType(\"success\");\n          dispatch(authenticated(userdetail, accessToken, response.body.favEvents, response.body.favProducts));\n        }\n      });\n      setisSaved(!isSaved);\n    } else {\n      Favourite({\n        'type_id': data.id,\n        type: 'event',\n        'user_id': user,\n        'action': 'remove'\n      }).then(response => {\n        if (response.error) {\n          setsnackbar(true);\n          setsnackbarMsg(\"There is some error.Please try again later\");\n          setsnackbarType(\"error\");\n          dispatch(authenticated(userdetail, accessToken, response.body.favEvents, response.body.favProducts));\n        } else {\n          setsnackbar(true);\n          setsnackbarMsg(\"Removed from favourites\");\n          setsnackbarType(\"success\");\n          dispatch(authenticated(userdetail, accessToken, response.body.favEvents, response.body.favProducts));\n        }\n      });\n      setisSaved(!isSaved);\n    }\n  };\n\n  const handlesnackbar = () => {\n    setsnackbar(!snackbar);\n  };\n\n  const router = useRouter();\n\n  function _renderVideo(item) {\n    return __jsx(\"div\", {\n      className: \"video-wrapper\"\n    }, __jsx(\"video\", {\n      width: \"560\",\n      height: \"315\",\n      controls: true\n    }, __jsx(\"source\", {\n      src: item.embedUrl,\n      type: \"video/mp4\"\n    })));\n  }\n\n  const _toggleShowVideo = url => {\n    setshowVideo(!showVideo);\n  }; // function _resetVideo(index) {\n  //   setshowVideo(false)\n  //   console.debug('slid to index', index);\n  // }\n  // function _onSlide() {\n  //   _resetVideo();\n  // }\n\n\n  useEffect(() => {\n    setevent(data);\n\n    if (data && data.images) {\n      let imgArr = [];\n      let self = this;\n      data.images.map(item => {\n        if (item.type == \"video\") {\n          imgArr.push({\n            original: item.thumbnail_link,\n            thumbnail: item.thumbnail_link,\n            embedUrl: item.link,\n            renderItem: _renderVideo.bind(self)\n          });\n        } else {\n          imgArr.push({\n            original: item.link,\n            thumbnail: item.thumbnail_link\n          });\n        }\n      });\n      setimages(imgArr);\n    } // setevents(data);\n\n  }, [data]);\n\n  function renderLeftNav(onClick, disabled) {\n    return __jsx(\"button\", {\n      type: \"button\",\n      className: \"image-gallery-left-nav\",\n      \"aria-label\": \"Prev Slide\",\n      disabled: disabled,\n      onClick: onClick\n    }, __jsx(FaArrowLeft, {\n      size: 30,\n      color: \"#000\"\n    }));\n  }\n\n  function renderRightNav(onClick, disabled) {\n    return __jsx(\"button\", {\n      type: \"button\",\n      className: \"image-gallery-right-nav\",\n      \"aria-label\": \"Next Slide\",\n      disabled: disabled,\n      onClick: onClick\n    }, __jsx(FaArrowRight, {\n      size: 30,\n      color: \"#000\"\n    }));\n  }\n\n  const classes = useStyles();\n  if (!data || !data.active) return __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Box, {\n    className: classes.sectionHeader\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Event not found!!\")), \" \");\n  return __jsx(\"section\", {\n    className: classes.section\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    className: classes.grid\n  }, __jsx(Snackbar, {\n    open: snackbar,\n    autoHideDuration: 6000,\n    onClose: handlesnackbar\n  }, __jsx(Alert, {\n    onClose: handlesnackbar,\n    severity: snackbarType\n  }, snackbarMsg)), __jsx(Card, {\n    className: `${classes.card} ${classes.spanCol4} ${classes.spanRow2}`\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(\"div\", {\n    className: classes.Gallery\n  }, __jsx(ImageGallery, {\n    items: images // onSlide={_onSlide.bind(this)}\n    ,\n    showPlayButton: false,\n    showFullscreenButton: false,\n    showGalleryPlayButton: true\n  })))), __jsx(Card, {\n    className: `${classes.card} ${classes.spanCol2}`\n  }, __jsx(CardContent, {\n    className: classes.cardInnerBody\n  }, __jsx(\"div\", {\n    className: classes.Left\n  }, __jsx(Box, {\n    className: classes.box\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Date\"), __jsx(Typography, {\n    variant: \"h6\"\n  }, data.event_date)), __jsx(Box, {\n    className: classes.box\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Category Type\"), __jsx(Typography, {\n    variant: \"h6\"\n  }, data.category ? data.category.name : \"\")), __jsx(Box, {\n    className: classes.box\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Contact Number\"), __jsx(Typography, {\n    variant: \"h4\",\n    color: \"primary\"\n  }, data.contact_number))), __jsx(\"div\", {\n    className: classes.Right\n  }, isSaved ? __jsx(FavoriteIcon, {\n    style: {\n      color: 'var(--theme)'\n    },\n    onClick: changeRating,\n    id: data.id\n  }) : __jsx(FavoriteBorderIcon, {\n    style: {\n      color: 'var(--theme)'\n    },\n    onClick: changeRating,\n    id: data.id\n  }), __jsx(ShareIcon, {\n    title: data.title,\n    url: `${process.env.APP_URL}${router.asPath}`\n  })))), __jsx(Card, {\n    className: `${classes.card} ${classes.SellerCard} ${classes.spanCol2}`\n  }, __jsx(CardContent, {\n    className: classes.cardInner\n  }, __jsx(\"div\", {\n    className: classes.cardHead\n  }, __jsx(Box, {\n    className: classes.box\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Event Organiser\"), __jsx(Typography, {\n    variant: \"h6\"\n  }, data.university ? data.university.name : \"\")), __jsx(\"div\", {\n    className: \"d-flex\"\n  }, __jsx(Box, {\n    className: classes.Pricebox\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Price\"), __jsx(Typography, {\n    variant: \"h4\",\n    color: \"primary\"\n  }, \"\\u20B9\", data.price)))), __jsx(\"div\", {\n    className: classes.cardAction\n  }, __jsx(\"a\", {\n    target: \"_blank\",\n    href: `${data.book_event_link}`\n  }, __jsx(Button, {\n    className: classes.primaryBtn\n  }, \"Book Event\")), __jsx(\"a\", {\n    target: \"_blank\",\n    href: `${data.visit_website_link}` // as={`/profile/${data.seller.id}`}\n\n  }, __jsx(Button, {\n    className: classes.secondaryBtn\n  }, \"Visit Website\"))))), __jsx(Card, {\n    className: `${classes.card} ${classes.spanCol6}`\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(Typography, {\n    className: classes.heading\n  }, \"Description\"), __jsx(Typography, {\n    className: classes.paragraph\n  }, data.description)))))));\n};\n\nexport default EventDetail;","map":null,"metadata":{},"sourceType":"module"}