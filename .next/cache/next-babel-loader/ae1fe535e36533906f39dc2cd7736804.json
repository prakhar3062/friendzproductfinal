{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport BottomNavigation from \"./Footer/BottomNavigation\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2;\n\n  return _objectSpread(_objectSpread({}, commonStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up(\"md\"), desktopStyles), _defineProperty(_objectSpread2, theme.breakpoints.down(\"sm\"), mobileStyles), _objectSpread2));\n});\nexport default function Layout(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoaded = _React$useState2[0],\n      setisLoaded = _React$useState2[1];\n\n  var matches = useMediaQuery(function (theme) {\n    return theme.breakpoints.down(\"sm\");\n  });\n  var BottomNav = matches ? __jsx(BottomNavigation, null) : null;\n  var router = useRouter();\n  var path = router.pathname;\n  return __jsx(\"div\", {\n    className: classes.Wrapper\n  }, __jsx(Header, null), __jsx(\"div\", {\n    className: classes.Main\n  }, props.children), props.nofooter == true ? \"\" : __jsx(Footer, null), path.includes(\"chat\") ? null : BottomNav, isLoaded && __jsx(\"div\", {\n    className: classes.loader\n  }, __jsx(CircularProgress, null)));\n}","map":null,"metadata":{},"sourceType":"module"}