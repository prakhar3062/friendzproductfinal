{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../Layout\";\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport EventCard from \"../components/EventCard\";\nimport Sidebar from \"../components/Sidebar\";\nimport Advertisement from \"../components/Advertisement\"; // import CardHorizontal from \"../components/CardHorizontal\";\n\nimport Testimonial from \"../components/Testimonial\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { OurConceptData, TestimonialData } from \"../utils\";\nimport StickyBox from \"react-sticky-box\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"../styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst fetch = require(\"node-fetch\");\n\nconst useStyles = makeStyles(theme => _objectSpread(_objectSpread({}, commonStyles), {}, {\n  [theme.breakpoints.up(\"md\")]: desktopStyles,\n  [theme.breakpoints.between(\"sm\", \"md\")]: TabStyles,\n  [theme.breakpoints.down(\"sm\")]: mobileStyles\n}));\nimport { useRouter } from \"next/router\";\nimport { getEvents, getAllFeedback } from \"../apis/global-api\";\nimport { useSelector } from \"react-redux\";\n\nfunction Events({\n  data,\n  url,\n  showState = false,\n  query\n}) {\n  const {\n    0: events,\n    1: setevents\n  } = useState([]);\n  const {\n    0: loadMore,\n    1: setloadMore\n  } = useState(false);\n  const {\n    0: lastPage,\n    1: setlastPage\n  } = useState(false);\n  const {\n    0: page,\n    1: setpage\n  } = useState(0);\n  const {\n    0: list_reviews,\n    1: setlist_reviews\n  } = useState([]);\n  const {\n    0: adslist,\n    1: setadslist\n  } = useState([]);\n  const user = useSelector(state => state.auth_user.user);\n  useEffect(() => {\n    const API_URL = process.env.api_url;\n\n    async function fetchAds() {\n      let adsres = await fetch(API_URL + \"/adverts\");\n      const ads = await adsres.json();\n      setadslist(ads);\n    }\n\n    fetchAds();\n  }, []);\n  useEffect(() => {\n    console.log(\"url\", url);\n    if (url) fetchTypeEvents(url, 0, []);\n    getAllFeedback().then(data => {\n      setlist_reviews(data);\n    }); // setevents(data);\n  }, [data, url]);\n\n  const handleButtonClick = () => {\n    if (!loadMore) {\n      setloadMore(true);\n      fetchTypeEvents(url, page, events); // timer.current = setTimeout(() => {\n      //   setLoading(false);\n      // }, 2000);\n    }\n  };\n\n  const fetchTypeEvents = (url, page, events) => {\n    page = !page ? 1 : page + 1;\n    setpage(page);\n    url = `${url}&page=${page}`;\n    getEvents(url).then(data => {\n      if (events && events.data) {\n        data.data = events.data.concat(data.data);\n      }\n\n      if (data) {\n        setevents(data);\n      }\n\n      if (data && data.current_page == data.last_page) {\n        setlastPage(true);\n      } // console.log(page, url, data);\n\n\n      setloadMore(false);\n    });\n  }; // console.log(events)\n\n\n  const router = useRouter();\n  const classes = useStyles();\n  const matches = useMediaQuery('(max-width:600px)');\n\n  const MobileSidebar = () => {\n    const toggle = () => {\n      setshowsidebar(!showsidebar);\n    };\n\n    const [showsidebar, setshowsidebar] = React.useState(false);\n    return __jsx(React.Fragment, null, __jsx(Button, {\n      className: classes.fliterBtn,\n      onClick: toggle\n    }, __jsx(TuneIcon, null), \"Filter\"), showsidebar && __jsx(Sidebar, {\n      type: \"events\"\n    }));\n  };\n\n  const handleAddProduct = () => {\n    if (user.id) {\n      router.push(\"/post/event\");\n    } else {\n      window.location.replace(\"/?signup=open\");\n    }\n  };\n\n  return __jsx(Layout, null, adslist && adslist.eventHeader && __jsx(Advertisement, {\n    adImg: adslist.eventHeader.link,\n    adlink: adslist.eventHeader.openlink\n  }), __jsx(\"section\", {\n    className: classes.section\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Box, {\n    className: classes.productsHeader\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, \"Events in your College\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleAddProduct\n  }, \"Add Event\"))), __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    sm: 12,\n    xs: 12,\n    className: \"scrollarea\" // style={{ height: \"200px\", overflow: \"scroll\" }}\n\n  }, matches ? __jsx(Sidebar, {\n    showFilterBtn: \"true\",\n    query: query\n  }) : __jsx(StickyBox, {\n    offsetTop: 100,\n    offsetBottom: 20\n  }, __jsx(Sidebar, {\n    type: \"events\",\n    query: query\n  }))), __jsx(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 12,\n    xs: 12\n  }, __jsx(Box, {\n    className: classes.ProductsGridWrapper\n  }, events.data && events.data.length > 0 && events.data.slice(0, 8).map((data, index) => __jsx(React.Fragment, {\n    key: data.id\n  }, __jsx(EventCard, {\n    data: data\n  }), index == 2 && adslist && adslist.event1 && __jsx(Advertisement, {\n    adImg: adslist.event1.link,\n    adlink: adslist.event1.openlink\n  })))), events.data && events.data.length <= 0 && __jsx(Typography, {\n    variant: \"h4\"\n  }, \"Oops!! we we could not find related to your search. Please search something else\"), __jsx(Box, {\n    className: classes.ProductsGridWrapper\n  }, events.data && events.data.length > 0 && events.data.slice(8, events.data.length).map((data, index) => __jsx(React.Fragment, {\n    key: data.id\n  }, __jsx(EventCard, {\n    data: data\n  }), index == 2 && adslist && adslist.event2 && __jsx(Advertisement, {\n    adImg: adslist.event2.link,\n    adlink: adslist.event2.openlink\n  })))), events.data && events.data.length > 0 && !lastPage && __jsx(\"div\", {\n    className: classes.loadMorewrapper\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.loadMore,\n    disabled: loadMore,\n    onClick: handleButtonClick\n  }, \"Load More\"), loadMore && __jsx(CircularProgress, {\n    size: 24,\n    className: classes.buttonProgress\n  })))))), __jsx(\"section\", {\n    className: classes.section,\n    style: {\n      background: 'var(--theme-light)'\n    }\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Box, {\n    className: classes.sectionHeader\n  }, __jsx(Typography, {\n    variant: \"h2\"\n  }, \"REVIEW\")), list_reviews && list_reviews.length > 0 && __jsx(Testimonial, {\n    data: list_reviews\n  }))));\n}\n\nexport default Events;","map":null,"metadata":{},"sourceType":"module"}