{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { searchCategories, searchUniversities, searchCities, searchEventCategories, getCities, getCategories, getEventCategories } from \"../../apis/global-api\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport { useRouter } from \"next/router\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport { SELECTED_FILTER_UNIVERSITY, PAGE_PRODUCTS, SELECTED_FILTER_RESET } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addVisited } from \"../../redux/actions/PageVisited\";\nconst useStyles = makeStyles(theme => _objectSpread(_objectSpread({}, commonStyles), {}, {\n  [theme.breakpoints.up(\"sm\")]: desktopStyles,\n  [theme.breakpoints.between(\"xs\", \"sm\")]: TabStyles,\n  [theme.breakpoints.down(\"xs\")]: mobileStyles\n}));\n\nfunction Sidebar({\n  type = \"\",\n  showFilterBtn = false,\n  m_uni,\n  query\n}) {\n  const {\n    0: categories,\n    1: setcategories\n  } = useState([]);\n  const {\n    0: selectedCategories,\n    1: setselectedCategories\n  } = useState([]);\n  const {\n    0: universities,\n    1: setuniversities\n  } = useState([]);\n  const {\n    0: selecteduniversities,\n    1: setselecteduniversities\n  } = useState([]);\n  const {\n    0: Cities,\n    1: setCities\n  } = useState([]);\n  const {\n    0: selectedCities,\n    1: setselectedCities\n  } = useState([]);\n  const {\n    0: producttype,\n    1: setproducttype\n  } = useState([]);\n  const {\n    0: uniMsg,\n    1: setUniMsg\n  } = useState(\"\");\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const pageVisited = useSelector(state => state.pageVisited);\n\n  const handleTypeChange = x => {\n    setproducttype(producttype.includes(x) ? producttype.filter(c => c !== x) : [...producttype, x]);\n  };\n\n  useEffect(() => {\n    if (type == \"events\") {\n      getEventCategories().then(response => {\n        setcategories(response.categories.data);\n      });\n    } else {\n      getCategories().then(response => {\n        setcategories(response.categories.data);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"query\", query);\n    setshowsidebar(!showFilterBtn); // console.log('pageVisited',pageVisited.includes(PAGE_PRODUCTS))\n\n    let {\n      m_city,\n      m_cat,\n      type\n    } = query;\n\n    if (m_uni) {\n      if (!selecteduniversities.length && m_uni) {\n        const now = new Date();\n        searchUniversities(m_uni).then(response => {\n          setselecteduniversities(response);\n          setExpanded(\"panel3\");\n          let data = {\n            response: response,\n            expiry: now.getTime()\n          };\n          localStorage.setItem(SELECTED_FILTER_UNIVERSITY, JSON.stringify(data));\n        });\n      }\n    }\n\n    if (!selectedCities.length && m_city) {\n      searchCities(m_city).then(response => {\n        setselectedCities(response.data);\n        setExpanded(\"panel2\");\n      });\n    }\n\n    if (!selectedCategories.length && m_cat) {\n      searchCategories(m_cat).then(response => {\n        setselectedCategories(response.data);\n        setExpanded(\"panel1\");\n      });\n    }\n\n    if (!producttype.length && type) {\n      handleTypeChange(type);\n    }\n  }, [m_uni]);\n\n  const handleCatSearch = e => {\n    console.log(type);\n    let value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setcategories([]);\n      return;\n    }\n\n    if (type == \"events\") {\n      searchEventCategories(value).then(response => {\n        setcategories(response.data);\n      });\n    } else {\n      searchCategories(value).then(response => {\n        setcategories(response.data);\n      });\n    }\n  };\n\n  const handleUniSearch = e => {\n    let value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setuniversities([]);\n      return;\n    }\n\n    searchUniversities(value).then(response => {\n      setuniversities(response);\n    });\n  };\n\n  const handleCitySearch = e => {\n    let value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setCities([]);\n      return;\n    }\n\n    searchCities(value).then(response => {\n      console.log(\"college\", response);\n      setCities(response.data);\n    });\n  };\n\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n\n  const handleChange = (event, type, val) => {\n    console.log(event.target.checked);\n    console.log(type);\n    console.log(val);\n\n    if (type == \"category\") {\n      if (selectedCategories.some(item => item.id === val.id)) {\n        setselectedCategories(selectedCategories.filter(c => c.id !== val.id));\n      } else {\n        setselectedCategories([...selectedCategories, val]);\n      }\n\n      console.log(selectedCategories);\n    }\n\n    if (type == \"cities\") {\n      if (selectedCities.some(item => item.id === val.id)) {\n        setselectedCities(selectedCities.filter(c => c.id !== val.id));\n      } else {\n        setselectedCities([...selectedCities, val]);\n      }\n    }\n\n    if (type == \"university\") {\n      if (selecteduniversities.some(item => item.id === val.id)) {\n        setselecteduniversities(selecteduniversities.filter(c => c.id !== val.id));\n      } else {\n        setselecteduniversities([...selecteduniversities, val]);\n      }\n    } // setState({ ...state, [event.target.name]: event.target.checked });\n\n  };\n\n  const [expanded, setExpanded] = React.useState(\"panel1\");\n\n  const handlePanelChange = panel => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  const {\n    mobile,\n    sports,\n    cars\n  } = state;\n  const classes = useStyles();\n\n  const filterSearch = () => {\n    let cities = selectedCities.map(v => v.name).join(\",\");\n    let categories = selectedCategories.map(v => v.name).join(\",\");\n    let universities = selecteduniversities.map(v => v.name).join(\",\");\n    console.log(cities, categories, universities);\n\n    if (!universities.length) {\n      localStorage.setItem(SELECTED_FILTER_RESET, true);\n    }\n\n    let p_type = producttype.length == 1 ? producttype[0] : \"\";\n    let query = \"?m_city=\" + cities + \"&m_cat=\" + categories + \"&m_uni=\" + universities + \"&type=\" + p_type;\n    let reqquery = \"?m_uni=\" + universities;\n\n    if (type == \"events\") {\n      window.location.replace(\"/events\" + query); // router.push(\"/events\" + query);\n    } else if (type == \"requests\") {\n      window.location.replace(\"/buy-request\" + reqquery); // router.push(\"/events\" + query);\n    } else {\n      window.location.replace(\"/products\" + query); // router.push(\"/products\" + query);\n    }\n  };\n\n  const toggle = () => {\n    setshowsidebar(!showsidebar);\n  };\n\n  const [showsidebar, setshowsidebar] = React.useState(false); // const [showsidebar, setshowsidebar] = React.useState(!showFilterBtn);\n\n  return __jsx(React.Fragment, null, showFilterBtn && __jsx(Button, {\n    className: classes.fliterBtn,\n    onClick: toggle\n  }, __jsx(TuneIcon, null), \"Filter\"), showsidebar && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.heading\n  }, \"FILTER\"), type != \"events\" && type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel0\",\n    onChange: handlePanelChange(\"panel0\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel0a-content\",\n    id: \"panel0a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Type\")), __jsx(Checkbox, {\n    value: \"buy\",\n    checked: producttype.includes(\"buy\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: () => handleTypeChange(\"buy\")\n  }), \" \", \"Buy\", __jsx(Checkbox, {\n    value: \"rental\",\n    checked: producttype.includes(\"rental\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: () => handleTypeChange(\"rental\")\n  }), \"Rent\"), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel1\",\n    onChange: handlePanelChange(\"panel1\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Category\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search Categoty\",\n    onKeyUp: handleCatSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, categories && categories.map(cat => __jsx(FormControlLabel, {\n    key: cat.id,\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"category\", cat),\n      color: \"primary\"\n    }),\n    label: cat.name,\n    checked: selectedCategories.filter(item => item.id == cat.id).length > 0\n  })))), categories && categories.length < 1 && selectedCategories.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCategories && selectedCategories.map(cat => __jsx(FormControlLabel, {\n    key: cat.id,\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"category\", cat),\n      color: \"primary\"\n    }),\n    checked: true,\n    label: cat.name\n  })))))), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel2\",\n    onChange: handlePanelChange(\"panel2\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"City\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search City\",\n    onKeyUp: handleCitySearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, Cities && Cities.map(cat => __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"cities\", cat),\n      color: \"primary\",\n      name: \"mobile\"\n    }),\n    label: cat.name,\n    checked: selectedCities.filter(item => item.id == cat.id).length > 0\n  })))), Cities.length < 1 && selectedCities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCities && selectedCities.map(cat => __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"cities\", cat),\n      color: \"primary\"\n    }),\n    checked: true,\n    label: cat.name\n  })))))), __jsx(Accordion, {\n    expanded: expanded === \"panel3\",\n    onChange: handlePanelChange(\"panel3\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"College\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search College\",\n    onKeyUp: handleUniSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, universities && universities.map(cat => __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"university\", cat),\n      color: \"primary\",\n      name: \"mobile\"\n    }),\n    label: cat.name\n  })))), universities.length < 1 && selecteduniversities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selecteduniversities && selecteduniversities.map(cat => __jsx(FormControlLabel, {\n    control: __jsx(Checkbox, {\n      onChange: e => handleChange(e, \"university\", cat),\n      color: \"primary\"\n    }),\n    checked: true,\n    label: cat.name\n  }))))))), __jsx(Button, {\n    className: classes.filterBtn,\n    onClick: filterSearch\n  }, \"Filter\")));\n}\n\nexport default Sidebar;","map":{"version":3,"sources":["E:/jay/frontend/src/components/Sidebar/index.js"],"names":["React","useState","useEffect","makeStyles","Card","CardContent","Typography","Button","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","searchCategories","searchUniversities","searchCities","searchEventCategories","getCities","getCategories","getEventCategories","commonStyles","desktopStyles","mobileStyles","TabStyles","useRouter","TuneIcon","SELECTED_FILTER_UNIVERSITY","PAGE_PRODUCTS","SELECTED_FILTER_RESET","useDispatch","useSelector","addVisited","useStyles","theme","breakpoints","up","between","down","Sidebar","type","showFilterBtn","m_uni","query","categories","setcategories","selectedCategories","setselectedCategories","universities","setuniversities","selecteduniversities","setselecteduniversities","Cities","setCities","selectedCities","setselectedCities","producttype","setproducttype","uniMsg","setUniMsg","router","dispatch","pageVisited","state","handleTypeChange","x","includes","filter","c","then","response","data","console","log","setshowsidebar","m_city","m_cat","length","now","Date","setExpanded","expiry","getTime","localStorage","setItem","JSON","stringify","handleCatSearch","e","value","target","handleUniSearch","handleCitySearch","setState","handleChange","event","val","checked","some","item","id","expanded","handlePanelChange","panel","newExpanded","mobile","sports","cars","classes","filterSearch","cities","map","v","name","join","p_type","reqquery","window","location","replace","toggle","showsidebar","fliterBtn","root","heading","title","searchField","formControl","cat","filterBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  searchCategories,\r\n  searchUniversities,\r\n  searchCities,\r\n  searchEventCategories,\r\n  getCities,\r\n  getCategories,\r\n  getEventCategories\r\n} from \"../../apis/global-api\";\r\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\r\nimport { useRouter } from \"next/router\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport {\r\n  SELECTED_FILTER_UNIVERSITY,\r\n  PAGE_PRODUCTS,\r\n  SELECTED_FILTER_RESET,\r\n} from \"../../constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addVisited } from \"../../redux/actions/PageVisited\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ...commonStyles,\r\n  [theme.breakpoints.up(\"sm\")]: desktopStyles,\r\n  [theme.breakpoints.between(\"xs\", \"sm\")]: TabStyles,\r\n  [theme.breakpoints.down(\"xs\")]: mobileStyles,\r\n}));\r\n\r\nfunction Sidebar({ type = \"\", showFilterBtn = false, m_uni, query }) {\r\n  const [categories, setcategories] = useState([]);\r\n  const [selectedCategories, setselectedCategories] = useState([]);\r\n  const [universities, setuniversities] = useState([]);\r\n  const [selecteduniversities, setselecteduniversities] = useState([]);\r\n  const [Cities, setCities] = useState([]);\r\n  const [selectedCities, setselectedCities] = useState([]);\r\n  const [producttype, setproducttype] = useState([]);\r\n  const [uniMsg, setUniMsg] = useState(\"\");\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const pageVisited = useSelector((state) => state.pageVisited);\r\n\r\n  const handleTypeChange = (x) => {\r\n    setproducttype(\r\n      producttype.includes(x)\r\n        ? producttype.filter((c) => c !== x)\r\n        : [...producttype, x]\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (type == \"events\") {\r\n      getEventCategories().then((response) => {\r\n        setcategories(response.categories.data);\r\n      });\r\n    } else {\r\n      getCategories().then((response) => {\r\n        setcategories(response.categories.data);\r\n      });\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(\"query\", query);\r\n    setshowsidebar(!showFilterBtn);\r\n\r\n    // console.log('pageVisited',pageVisited.includes(PAGE_PRODUCTS))\r\n    let { m_city, m_cat, type } = query;\r\n    if (m_uni) {\r\n      if (!selecteduniversities.length && m_uni) {\r\n        const now = new Date();\r\n\r\n        searchUniversities(m_uni).then((response) => {\r\n          setselecteduniversities(response);\r\n          setExpanded(\"panel3\");\r\n          let data = {\r\n            response: response,\r\n            expiry: now.getTime(),\r\n          };\r\n\r\n          localStorage.setItem(\r\n            SELECTED_FILTER_UNIVERSITY,\r\n            JSON.stringify(data)\r\n          );\r\n        });\r\n      }\r\n    }\r\n    if (!selectedCities.length && m_city) {\r\n      searchCities(m_city).then((response) => {\r\n        setselectedCities(response.data);\r\n        setExpanded(\"panel2\");\r\n      });\r\n    }\r\n    if (!selectedCategories.length && m_cat) {\r\n      searchCategories(m_cat).then((response) => {\r\n        setselectedCategories(response.data);\r\n        setExpanded(\"panel1\");\r\n      });\r\n    }\r\n    if (!producttype.length && type) {\r\n      handleTypeChange(type);\r\n    }\r\n  }, [m_uni]);\r\n\r\n  const handleCatSearch = (e) => {\r\n    console.log(type);\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setcategories([]);\r\n      return;\r\n    }\r\n    if (type == \"events\") {\r\n      searchEventCategories(value).then((response) => {\r\n        setcategories(response.data);\r\n      });\r\n    } else {\r\n      searchCategories(value).then((response) => {\r\n        setcategories(response.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUniSearch = (e) => {\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setuniversities([]);\r\n      return;\r\n    }\r\n    searchUniversities(value).then((response) => {\r\n      setuniversities(response);\r\n    });\r\n  };\r\n\r\n  const handleCitySearch = (e) => {\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setCities([]);\r\n      return;\r\n    }\r\n    searchCities(value).then((response) => {\r\n      console.log(\"college\", response);\r\n      setCities(response.data);\r\n    });\r\n  };\r\n\r\n  const [state, setState] = useState([]);\r\n\r\n  const handleChange = (event, type, val) => {\r\n    console.log(event.target.checked);\r\n    console.log(type);\r\n    console.log(val);\r\n    if (type == \"category\") {\r\n      if (selectedCategories.some((item) => item.id === val.id)) {\r\n        setselectedCategories(\r\n          selectedCategories.filter((c) => c.id !== val.id)\r\n        );\r\n      } else {\r\n        setselectedCategories([...selectedCategories, val]);\r\n      }\r\n      console.log(selectedCategories);\r\n    }\r\n    if (type == \"cities\") {\r\n      if (selectedCities.some((item) => item.id === val.id)) {\r\n        setselectedCities(selectedCities.filter((c) => c.id !== val.id));\r\n      } else {\r\n        setselectedCities([...selectedCities, val]);\r\n      }\r\n    }\r\n    if (type == \"university\") {\r\n      if (selecteduniversities.some((item) => item.id === val.id)) {\r\n        setselecteduniversities(\r\n          selecteduniversities.filter((c) => c.id !== val.id)\r\n        );\r\n      } else {\r\n        setselecteduniversities([...selecteduniversities, val]);\r\n      }\r\n    }\r\n\r\n    // setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n  const handlePanelChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const { mobile, sports, cars } = state;\r\n  const classes = useStyles();\r\n\r\n  const filterSearch = () => {\r\n    let cities = selectedCities.map((v) => v.name).join(\",\");\r\n\r\n    let categories = selectedCategories.map((v) => v.name).join(\",\");\r\n    let universities = selecteduniversities.map((v) => v.name).join(\",\");\r\n    console.log(cities, categories, universities);\r\n    if (!universities.length) {\r\n      localStorage.setItem(SELECTED_FILTER_RESET, true);\r\n    }\r\n    let p_type = producttype.length == 1 ? producttype[0] : \"\";\r\n    let query =\r\n      \"?m_city=\" +\r\n      cities +\r\n      \"&m_cat=\" +\r\n      categories +\r\n      \"&m_uni=\" +\r\n      universities +\r\n      \"&type=\" +\r\n      p_type;\r\n    let reqquery = \"?m_uni=\" + universities;\r\n    if (type == \"events\") {\r\n      window.location.replace(\"/events\" + query);\r\n\r\n      // router.push(\"/events\" + query);\r\n    } else if (type == \"requests\") {\r\n      window.location.replace(\"/buy-request\" + reqquery);\r\n\r\n      // router.push(\"/events\" + query);\r\n    } else {\r\n      window.location.replace(\"/products\" + query);\r\n\r\n      // router.push(\"/products\" + query);\r\n    }\r\n  };\r\n    \r\n  const toggle = () => {\r\n    setshowsidebar(!showsidebar);\r\n  };\r\n\r\n  const [showsidebar, setshowsidebar] = React.useState(false);\r\n  // const [showsidebar, setshowsidebar] = React.useState(!showFilterBtn);\r\n\r\n  return (\r\n    <>\r\n      {showFilterBtn && (\r\n        <Button className={classes.fliterBtn} onClick={toggle}>\r\n          <TuneIcon />\r\n          Filter\r\n        </Button>\r\n      )}\r\n      {showsidebar && (\r\n        <>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h6\" className={classes.heading}>\r\n              FILTER\r\n            </Typography>\r\n            {type != \"events\" && type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel0\"}\r\n                onChange={handlePanelChange(\"panel0\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel0a-content\"\r\n                  id=\"panel0a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Type\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <Checkbox\r\n                  value=\"buy\"\r\n                  checked={producttype.includes(\"buy\")}\r\n                  inputProps={{ \"aria-label\": \"Checkbox A\" }}\r\n                  onChange={() => handleTypeChange(\"buy\")}\r\n                />{\" \"}\r\n                Buy\r\n                <Checkbox\r\n                  value=\"rental\"\r\n                  checked={producttype.includes(\"rental\")}\r\n                  inputProps={{ \"aria-label\": \"Checkbox A\" }}\r\n                  onChange={() => handleTypeChange(\"rental\")}\r\n                />\r\n                Rent\r\n              </Accordion>\r\n            )}\r\n            {type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel1\"}\r\n                onChange={handlePanelChange(\"panel1\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Category\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <input\r\n                  className={classes.searchField}\r\n                  type=\"text\"\r\n                  placeholder=\"search Categoty\"\r\n                  onKeyUp={handleCatSearch}\r\n                />\r\n                <AccordionDetails>\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {categories &&\r\n                        categories.map((cat) => (\r\n                          <FormControlLabel\r\n                            key={cat.id}\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) =>\r\n                                  handleChange(e, \"category\", cat)\r\n                                }\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={cat.name}\r\n                            checked={\r\n                              selectedCategories.filter(\r\n                                (item) => item.id == cat.id\r\n                              ).length > 0\r\n                            }\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n\r\n                  {categories && categories.length < 1 && selectedCategories.length > 0 && (\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormGroup>\r\n                        {selectedCategories &&\r\n                          selectedCategories.map((cat) => (\r\n                            <FormControlLabel\r\n                              key={cat.id}\r\n                              control={\r\n                                <Checkbox\r\n                                  onChange={(e) =>\r\n                                    handleChange(e, \"category\", cat)\r\n                                  }\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              checked={true}\r\n                              label={cat.name}\r\n                            />\r\n                          ))}\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            )}\r\n            {type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel2\"}\r\n                onChange={handlePanelChange(\"panel2\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    City\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <input\r\n                  className={classes.searchField}\r\n                  type=\"text\"\r\n                  placeholder=\"search City\"\r\n                  onKeyUp={handleCitySearch}\r\n                />\r\n                <AccordionDetails>\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {Cities &&\r\n                        Cities.map((cat) => (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) => handleChange(e, \"cities\", cat)}\r\n                                color=\"primary\"\r\n                                name=\"mobile\"\r\n                              />\r\n                            }\r\n                            label={cat.name}\r\n                            checked={\r\n                              selectedCities.filter((item) => item.id == cat.id)\r\n                                .length > 0\r\n                            }\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  {Cities.length < 1 && selectedCities.length > 0 && (\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormGroup>\r\n                        {selectedCities &&\r\n                          selectedCities.map((cat) => (\r\n                            <FormControlLabel\r\n                              control={\r\n                                <Checkbox\r\n                                  onChange={(e) =>\r\n                                    handleChange(e, \"cities\", cat)\r\n                                  }\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              checked={true}\r\n                              label={cat.name}\r\n                            />\r\n                          ))}\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            )}\r\n            <Accordion\r\n              expanded={expanded === \"panel3\"}\r\n              onChange={handlePanelChange(\"panel3\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  College\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <input\r\n                className={classes.searchField}\r\n                type=\"text\"\r\n                placeholder=\"search College\"\r\n                onKeyUp={handleUniSearch}\r\n              />\r\n              <AccordionDetails>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className={classes.formControl}\r\n                >\r\n                  <FormGroup>\r\n                    {universities &&\r\n                      universities.map((cat) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              onChange={(e) =>\r\n                                handleChange(e, \"university\", cat)\r\n                              }\r\n                              color=\"primary\"\r\n                              name=\"mobile\"\r\n                            />\r\n                          }\r\n                          label={cat.name}\r\n                        />\r\n                      ))}\r\n                  </FormGroup>\r\n                </FormControl>\r\n\r\n                {universities.length < 1 && selecteduniversities.length > 0 && (\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {selecteduniversities &&\r\n                        selecteduniversities.map((cat) => (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) =>\r\n                                  handleChange(e, \"university\", cat)\r\n                                }\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            checked={true}\r\n                            label={cat.name}\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n          <Button className={classes.filterBtn} onClick={filterSearch}>\r\n            Filter\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}