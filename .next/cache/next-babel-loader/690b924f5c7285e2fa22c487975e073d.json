{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { AuthForm } from \"./AuthForm\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport AccountBox from \"@material-ui/icons/AccountBox\";\nimport { unauthenticated } from \"../../redux/actions/auth\";\nimport Link from \"@material-ui/core/Link\";\nimport logo from './../../public/static/images/logo.png';\nimport circlecenter from './../../public/static/images/circleCenter.svg';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTab-textColorPrimary.Mui-selected\": {\n      color: \"#ffffff\",\n      background: \"var(--theme)\"\n    },\n    \"& .MuiTabs-indicator\": {\n      display: \"none\"\n    },\n    \"& .MuiTab-textColorPrimary\": {\n      background: \"#dfdfdf\"\n    },\n    \"& .MuiButton-containedPrimary\": {\n      marginTop: \"1rem\"\n    }\n  },\n  Login: {\n    position: \"relative\",\n    marginTop: \"5rem\",\n    \"&::before\": {\n      top: \"0\",\n      left: \"0\",\n      width: \"440px\",\n      height: \"440px\",\n      content: '\"\"',\n      zIndex: \"-1\",\n      position: \"absolute\",\n      transform: \"translate(-50%, -50%)\",\n      background: circlecenter,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: '1.5rem'\n    }\n  },\n  Img: {\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      '& img': {\n        height: '65px'\n      }\n    }\n  },\n  orange: {\n    color: \"#fff\",\n    backgroundColor: \"var(--theme)\",\n    width: \"30px\",\n    height: \"30px\",\n    fontSize: \"1rem\"\n  },\n  transparent: {\n    color: \"#000\",\n    width: \"30px\",\n    height: \"25px\",\n    backgroundColor: \"transparent\"\n  },\n  desktopMenu: {\n    '& .MuiPopover-paper': {\n      minWidth: '200px',\n      textAlign: 'right'\n    },\n    '& li': {\n      justifyContent: 'space-between'\n    }\n  }\n}));\n\nconst Login_Register = ({\n  isMobile = false,\n  modalOpen = false\n}) => {\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const [value, setValue] = React.useState(0);\n  const router = useRouter();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    0: openAMenu,\n    1: setopenAMenu\n  } = useState(false);\n  const {\n    0: openBMenu,\n    1: setopenBMenu\n  } = useState(false);\n  const {\n    0: openCMenu,\n    1: setopenCMenu\n  } = useState(false);\n  const {\n    0: openDMenu,\n    1: setopenDMenu\n  } = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    if (location.search.indexOf(\"signup=open\") != -1) {\n      setOpen(true);\n    } else if (modalOpen != open) {\n      setOpen(modalOpen);\n    }\n  };\n\n  useEffect(() => {\n    toggleModal();\n  }, [modalOpen]);\n  router.events.on('routeChangeComplete', toggleModal);\n  const accessToken = useSelector(state => state.auth_user.accessToken);\n  const user = useSelector(state => state.auth_user.user); // console.log(\"User\", user);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  const openModal = event => {\n    if (!accessToken) {\n      setOpen(true);\n    } else {\n      if (isMobile) {\n        gotoProfile();\n      } else {\n        setAnchorEl(event.currentTarget);\n      }\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const gotoProfile = () => {\n    router.push(\"/profile\");\n  };\n\n  const gotoProfileEdit = () => {\n    router.push(\"/profile/edit\");\n  };\n\n  const gotoEvents = () => {\n    router.push(\"/profile/events\");\n  };\n\n  const gotoRequeste = () => {\n    router.push(\"/profile/requests\");\n  };\n\n  const gotoFavEvents = () => {\n    router.push(\"/profile/favourite-events\");\n  };\n\n  const gotoFavProducts = () => {\n    router.push(\"/profile/favourite-products\");\n  };\n\n  const gotoAddRequest = () => {\n    router.push(\"/post/request\");\n  };\n\n  const gotoResetPassword = () => {\n    router.push(\"/profile/reset-password\");\n  };\n\n  const logout = () => {\n    setAnchorEl(null);\n    router.push(\"/\");\n    dispatch(unauthenticated());\n  };\n\n  const toggleASubmenu = () => {\n    setopenAMenu(!openAMenu);\n  };\n\n  const toggleBSubmenu = () => {\n    setopenBMenu(!openBMenu);\n  };\n\n  const toggleCSubmenu = () => {\n    setopenCMenu(!openCMenu);\n  };\n\n  const toggleDSubmenu = () => {\n    setopenDMenu(!openDMenu);\n  };\n\n  const classes = useStyles();\n  return __jsx(\"div\", null, __jsx(Avatar, {\n    onClick: openModal,\n    \"aria-controls\": \"auth-menu\",\n    \"aria-haspopup\": \"true\",\n    className: user.first_name ? classes.orange : classes.transparent\n  }, user.first_name ? user.first_name.charAt(0) : __jsx(AccountCircleIcon, null)), __jsx(Menu, {\n    id: \"auth-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose // open={!!menuPosition}\n    // onClose={() => setMenuPosition({}) || handleClose}\n    // anchorReference=\"anchorPosition\"\n    // anchorPosition={menuPosition}\n    ,\n    className: classes.desktopMenu\n  }, __jsx(MenuItem, {\n    button: true,\n    onClick: toggleASubmenu\n  }, \"Profile\", openAMenu ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    in: openAMenu,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(MenuItem, {\n    onClick: gotoProfile\n  }, \"View Profile\"), __jsx(MenuItem, {\n    onClick: gotoResetPassword\n  }, \"Reset Password\")), __jsx(MenuItem, {\n    button: true,\n    onClick: toggleBSubmenu\n  }, \"Ads\", openBMenu ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    in: openBMenu,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(MenuItem, {\n    onClick: gotoProfile\n  }, \"Published Ads\"), __jsx(MenuItem, {\n    onClick: gotoFavProducts\n  }, \"Favourite Products\")), __jsx(MenuItem, {\n    button: true,\n    onClick: toggleCSubmenu\n  }, \"Events\", openCMenu ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    in: openCMenu,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(MenuItem, {\n    onClick: gotoEvents\n  }, \"Published Events\"), __jsx(MenuItem, {\n    onClick: gotoFavEvents\n  }, \"Favourite Events\")), __jsx(MenuItem, {\n    button: true,\n    onClick: toggleDSubmenu\n  }, \"Requests\", openDMenu ? __jsx(ExpandLess, null) : __jsx(ExpandMore, null)), __jsx(Collapse, {\n    in: openDMenu,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, __jsx(MenuItem, {\n    onClick: gotoRequeste\n  }, \"Published Requests\"), __jsx(MenuItem, {\n    onClick: gotoAddRequest\n  }, \"Add Product Request\")), __jsx(MenuItem, {\n    onClick: logout\n  }, \"Logout\")), __jsx(Dialog, {\n    open: open,\n    onClose: closeModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.modal\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Tabs, {\n    value: value,\n    onChange: handleChange,\n    variant: \"fullWidth\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\"\n  }, __jsx(Tab, {\n    label: \"Login\"\n  }), __jsx(Tab, {\n    label: \"SignUp\"\n  })), __jsx(SwipeableViews, {\n    index: value,\n    onChangeIndex: handleChangeIndex\n  }, __jsx(\"div\", {\n    className: classes.Login\n  }, __jsx(\"div\", {\n    className: classes.Img\n  }, __jsx(\"img\", {\n    src: logo,\n    width: \"100\"\n  })), __jsx(AuthForm, {\n    type: \"login\"\n  })), __jsx(\"div\", null, __jsx(AuthForm, {\n    type: \"signup\"\n  }))))));\n};\n\nexport default Login_Register;","map":null,"metadata":{},"sourceType":"module"}