{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState, useEffect } from \"react\";\nimport Products from \"./../containers/products\";\nimport fetch from \"node-fetch\";\nimport { useSelector } from \"react-redux\";\nimport Modal from \"./../components/Modal\";\nimport { SELECTED_FILTER_RESET, SELECTED_FILTER_UNIVERSITY } from \"./../constants\";\n\nfunction ProductsPage({\n  query\n}) {\n  const user = useSelector(state => state.auth_user.user);\n  const {\n    0: open,\n    1: setopen\n  } = useState(false);\n  const {\n    0: url,\n    1: seturl\n  } = useState(\"\");\n  const {\n    0: m_uni,\n    1: setm_uni\n  } = useState(\"\");\n  useEffect(() => {\n    setQuery(query); // setModalStatus(query)\n  }, [query]); // const setModalStatus = (query) => {\n  //   const { m_uni } = query;\n  //   console.log('testttt', !m_uni)\n  //   console.log('testttt', !user, user)\n  // }\n\n  const setQuery = query => {\n    let {\n      s,\n      m_city,\n      m_cat,\n      m_uni,\n      type\n    } = query;\n    let url = s ? `?s=${s}&paginate=12` : \"?paginate=12\";\n    let data = localStorage.getItem(SELECTED_FILTER_UNIVERSITY);\n    let selection_reset = localStorage.getItem(SELECTED_FILTER_RESET);\n    data = data && JSON.parse(data) ? JSON.parse(data).response : \"\";\n\n    if (!m_uni && data && data.length) {\n      m_uni = !selection_reset ? data[0].name : m_uni;\n    } else if (!m_uni && !user.id) {\n      setopen(true);\n    } else if (!m_uni && user.university && user.university.name) {\n      m_uni = !selection_reset ? user.university.name : m_uni;\n    }\n\n    setm_uni(m_uni);\n\n    if (m_city) {\n      url = url + \"&m_city=\" + m_city;\n    }\n\n    if (m_cat) {\n      url = url + \"&m_cat=\" + m_cat;\n    }\n\n    if (m_uni) {\n      url = url + \"&m_uni=\" + m_uni;\n    } //  else if (user && user.university) {\n    //   url = url + '&m_uni=' + user.university.name\n    // }\n\n\n    if (type) {\n      url = url + \"&type=\" + type;\n    }\n\n    seturl(url);\n  };\n\n  return __jsx(\"div\", null, open && __jsx(Modal, {\n    openStatus: open\n  }), __jsx(Products, {\n    url: url,\n    m_uni: m_uni,\n    query: query\n  }));\n}\n\nProductsPage.getInitialProps = ({\n  query\n}) => {\n  return {\n    query\n  };\n};\n\nexport default ProductsPage;","map":null,"metadata":{},"sourceType":"module"}