{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Card, CardContent, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from './styles';\nimport styled from \"styled-components\";\nimport { searchUniversities } from \"../../apis/global-api\";\nimport logo from './../../public/static/images/logo.png';\nimport { useRouter } from \"next/router\";\nvar StyledDialog = styled(Dialog)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  .MuiBackdrop-root {\\n    background-color: rgba(0, 0, 0, 0.7);\\n  }\\n\"])));\n_c = StyledDialog;\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2;\n\n  return _objectSpread(_objectSpread({}, commonStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up('sm'), desktopStyles), _defineProperty(_objectSpread2, theme.breakpoints.between('xs', 'sm'), TabStyles), _defineProperty(_objectSpread2, theme.breakpoints.down('xs'), mobileStyles), _objectSpread2));\n});\n\nvar Modal = function Modal(_ref) {\n  _s();\n\n  var openStatus = _ref.openStatus;\n  useEffect(function () {\n    console.log('openStatus', openStatus);\n    setopen(openStatus);\n  }, [openStatus]);\n\n  var _useState = useState(openStatus),\n      open = _useState[0],\n      setopen = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setloading = _useState2[1];\n\n  var _useState3 = useState([{\n    name: \"\",\n    id: \"\"\n  }]),\n      universities = _useState3[0],\n      setuniversities = _useState3[1];\n\n  var _useState4 = useState({\n    name: \"\",\n    id: \"\"\n  }),\n      university = _useState4[0],\n      setuniversity = _useState4[1];\n\n  var openModal = function openModal() {\n    setopen(true);\n  };\n\n  var closeModal = function closeModal() {\n    setopen(false);\n  };\n\n  var router = useRouter();\n  var top100Films = [{\n    title: 'The Shawshank Redemption',\n    year: 1994\n  }, {\n    title: 'The Godfather',\n    year: 1972\n  }, {\n    title: 'The Godfather: Part II',\n    year: 1974\n  }, {\n    title: 'The Dark Knight',\n    year: 2008\n  }, {\n    title: '12 Angry Men',\n    year: 1957\n  }, {\n    title: \"Schindler's List\",\n    year: 1993\n  }, {\n    title: 'Pulp Fiction',\n    year: 1994\n  }, {\n    title: 'The Lord of the Rings: The Return of the King',\n    year: 2003\n  }, {\n    title: 'The Good, the Bad and the Ugly',\n    year: 1966\n  }];\n  var defaultProps = {\n    options: top100Films,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.title;\n    }\n  };\n  var flatProps = {\n    options: top100Films.map(function (option) {\n      return option.title;\n    })\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e.target.value;\n    if (!value) return;\n    setloading(true);\n    searchUniversities(value).then(function (response) {\n      setloading(false);\n      setuniversities(response);\n    });\n  };\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleFormSubmit = function handleFormSubmit() {\n    // let uni = universities.find(\n    //   (item) => item.name == university.name\n    // );\n    closeModal();\n    router.push(\"/products?m_uni=\" + university.name); // console.log(uni)\n  };\n\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(StyledDialog, {\n    open: open,\n    onClose: closeModal,\n    \"aria-labelledby\": \"form-dialog-title\",\n    className: classes.modal\n  }, __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(CloseIcon, {\n    onClick: closeModal,\n    className: classes.closeIcon\n  }), __jsx(\"img\", {\n    src: logo,\n    alt: \"\",\n    className: classes.image\n  }), __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.title\n  }, \"Fill Important Details\"), __jsx(Typography, null, \"To make Your Search Easy Kindly Please Select Your College Name or Location\"), __jsx(\"form\", {\n    className: classes.container\n  }, __jsx(Autocomplete, {\n    className: classes.Autocomplete,\n    required: true,\n    options: universities,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    loading: loading // value={university}\n    ,\n    onInputChange: function onInputChange(e) {\n      return e && handleUniSearch(e);\n    } // onChange={(e) => updateformData(e, \"university\")}\n    ,\n    onSelect: function onSelect(e) {\n      return e.target.value && setuniversity({\n        name: e.target.value\n      });\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Type Your College Name\",\n        margin: \"normal\"\n      }));\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.Button,\n    onClick: handleFormSubmit\n  }, \"Done\"))))));\n};\n\n_s(Modal, \"eTbHUzz9ETG4tJMMTAzkr8YO/YU=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c2 = Modal;\nexport default Modal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledDialog\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["E:/jay/frontend/src/components/Modal/index.js"],"names":["React","useState","useEffect","Autocomplete","Dialog","TextField","Button","Card","CardContent","Typography","CloseIcon","makeStyles","useTheme","commonStyles","desktopStyles","mobileStyles","TabStyles","styled","searchUniversities","logo","useRouter","StyledDialog","useStyles","theme","breakpoints","up","between","down","Modal","openStatus","console","log","setopen","open","loading","setloading","name","id","universities","setuniversities","university","setuniversity","openModal","closeModal","router","top100Films","title","year","defaultProps","options","getOptionLabel","option","flatProps","map","handleUniSearch","e","value","target","then","response","setValue","handleFormSubmit","push","classes","modal","card","cardBody","closeIcon","image","container","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Card, CardContent, Typography } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from './styles'\nimport styled from \"styled-components\";\nimport { searchUniversities } from \"../../apis/global-api\";\nimport logo from './../../public/static/images/logo.png'\nimport { useRouter } from \"next/router\";\n\nconst StyledDialog = styled(Dialog)`\n  .MuiBackdrop-root {\n    background-color: rgba(0, 0, 0, 0.7);\n  }\n`;\n\n\nconst useStyles = makeStyles(theme => ({\n  ...commonStyles,\n  [theme.breakpoints.up('sm')]: desktopStyles,\n  [theme.breakpoints.between('xs', 'sm')]: TabStyles,\n  [theme.breakpoints.down('xs')]: mobileStyles\n}))\n\nconst Modal = ({ openStatus }) => {\n\n  useEffect(() => {\n    console.log('openStatus', openStatus)\n    setopen(openStatus)\n\n  }, [openStatus])\n\n  const [open, setopen] = useState(openStatus);\n  const [loading, setloading] = useState(false);\n  const [universities, setuniversities] = useState([\n    {\n      name: \"\",\n      id: \"\",\n    },\n  ]);\n\n  const [university, setuniversity] = useState({\n    name: \"\",\n    id: \"\",\n  });\n  const openModal = () => {\n    setopen(true);\n  };\n\n  const closeModal = () => {\n    setopen(false);\n  };\n  const router = useRouter();\n\n  const top100Films = [\n    { title: 'The Shawshank Redemption', year: 1994 },\n    { title: 'The Godfather', year: 1972 },\n    { title: 'The Godfather: Part II', year: 1974 },\n    { title: 'The Dark Knight', year: 2008 },\n    { title: '12 Angry Men', year: 1957 },\n    { title: \"Schindler's List\", year: 1993 },\n    { title: 'Pulp Fiction', year: 1994 },\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\n    { title: 'The Good, the Bad and the Ugly', year: 1966 }\n  ]\n\n  const defaultProps = {\n    options: top100Films,\n    getOptionLabel: (option) => option.title,\n  };\n\n  const flatProps = {\n    options: top100Films.map((option) => option.title),\n  };\n\n  const handleUniSearch = (e) => {\n    let value = e.target.value;\n    if (!value) return;\n    setloading(true);\n    searchUniversities(value).then((response) => {\n      setloading(false);\n      setuniversities(response);\n    });\n  };\n\n  const [value, setValue] = React.useState(null);\n\n  const handleFormSubmit=()=>{\n    // let uni = universities.find(\n    //   (item) => item.name == university.name\n    // );\n    closeModal()\n    router.push(\"/products?m_uni=\" + university.name);\n    // console.log(uni)\n  }\n\n  const classes = useStyles()\n\n  return (\n    <>\n      {/* <button onClick={openModal} style={{ margin: '1rem auto' }}>Open Modal</button> */}\n      <StyledDialog\n        open={open}\n        onClose={closeModal}\n        aria-labelledby=\"form-dialog-title\"\n        className={classes.modal}\n      >\n        <Card className={classes.card}>\n          <CardContent className={classes.cardBody}>\n            <CloseIcon onClick={closeModal} className={classes.closeIcon} />\n            <img src={logo} alt=\"\" className={classes.image} />\n            <Typography variant=\"h5\" className={classes.title}>Fill Important Details</Typography>\n            <Typography >To make Your Search Easy Kindly Please Select Your College Name or Location</Typography>\n            <form className={classes.container}>\n              {/* <Autocomplete\n                {...defaultProps}\n                id=\"debug\"\n                className={classes.Autocomplete}\n                debug\n                renderInput={(params) => <TextField {...params} label=\"Type Your College Name\" margin=\"normal\" />}\n              /> */}\n\n              <Autocomplete\n                className={classes.Autocomplete}\n                required\n                options={universities}\n                getOptionLabel={(option) => {\n                  return option.name;\n                }}\n                getOptionSelected={(option, value) =>\n                  option.name === value.name\n                }\n                loading={loading}\n                // value={university}\n                onInputChange={(e) => e && handleUniSearch(e)}\n                // onChange={(e) => updateformData(e, \"university\")}\n                onSelect={(e) =>\n                  e.target.value && setuniversity({ name: e.target.value })\n                }\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Type Your College Name\" margin=\"normal\" />\n                )}\n              />\n\n              <Button variant=\"contained\" className={classes.Button} onClick={handleFormSubmit}>\n                Done\n              </Button>\n            </form>\n          </CardContent>\n        </Card>\n      </StyledDialog>\n    </>\n  );\n}\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}