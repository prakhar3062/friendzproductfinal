{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { UNAUTHENTICATED, AUTHENTICATED, UPDATE_DEVICE_TOKEN } from \"../actionTypes/auth\";\nimport localforage from 'localforage';\nimport { SELECTED_FILTER_RESET, SELECTED_FILTER_UNIVERSITY } from \"../../constants\";\nconst initialState = {\n  user: {},\n  accessToken: \"\"\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case AUTHENTICATED:\n      const {\n        user,\n        accessToken,\n        userFavEvents,\n        userFavProducts\n      } = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"accessToken\", accessToken);\n      localStorage.setItem(\"userFavEvents\", userFavEvents);\n      localStorage.setItem(\"userFavProducts\", userFavProducts);\n      localStorage.setItem(SELECTED_FILTER_RESET, false);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: user,\n        accessToken: accessToken\n      });\n\n    case UPDATE_DEVICE_TOKEN:\n      let {\n        token\n      } = action.payload;\n      let u = state.user;\n      u.device_token = token;\n      localStorage.setItem(\"user\", JSON.stringify(u));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: u\n      });\n\n    case UNAUTHENTICATED:\n      localStorage.setItem(\"user\", \"\");\n      localStorage.setItem(\"accessToken\", \"\");\n      localStorage.setItem(\"userFavEvents\", \"\");\n      localStorage.setItem(\"userFavProducts\", \"\");\n      localforage.removeItem('fcm_token');\n      localforage.removeItem('fcm_token_user');\n      localStorage.setItem(SELECTED_FILTER_UNIVERSITY, '');\n      localStorage.setItem(SELECTED_FILTER_RESET, false);\n      return initialState;\n\n    default:\n      let data = \"\";\n\n      if (false) {\n        let userData = window.localStorage.getItem(\"user\");\n        userData = userData ? JSON.parse(userData) : \"\";\n        let accessTokenData = window.localStorage.getItem(\"accessToken\");\n        let userFavEvents = window.localStorage.getItem(\"userFavEvents\");\n        let userFavProducts = window.localStorage.getItem(\"userFavProducts\");\n        accessTokenData = accessTokenData && accessTokenData != \"undefined\" ? accessTokenData : \"\";\n\n        if (userData && accessTokenData) {\n          data = {\n            user: userData,\n            accessToken: accessTokenData,\n            userFavEvents: userFavEvents,\n            userFavProducts: userFavProducts\n          };\n        }\n      }\n\n      return data ? data : initialState;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}