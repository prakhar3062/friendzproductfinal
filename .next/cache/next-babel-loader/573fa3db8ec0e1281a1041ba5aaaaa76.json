{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { searchCategories, searchUniversities, searchCities, searchEventCategories, getCities, getCategories, getEventCategories } from \"../../apis/global-api\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport { useRouter } from \"next/router\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport { SELECTED_FILTER_UNIVERSITY, PAGE_PRODUCTS, SELECTED_FILTER_RESET } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addVisited } from \"../../redux/actions/PageVisited\";\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2;\n\n  return _objectSpread(_objectSpread({}, commonStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up(\"sm\"), desktopStyles), _defineProperty(_objectSpread2, theme.breakpoints.between(\"xs\", \"sm\"), TabStyles), _defineProperty(_objectSpread2, theme.breakpoints.down(\"xs\"), mobileStyles), _objectSpread2));\n});\n\nfunction Sidebar(_ref) {\n  _s();\n\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"\" : _ref$type,\n      _ref$showFilterBtn = _ref.showFilterBtn,\n      showFilterBtn = _ref$showFilterBtn === void 0 ? false : _ref$showFilterBtn,\n      m_uni = _ref.m_uni,\n      query = _ref.query;\n\n  var _useState = useState([]),\n      categories = _useState[0],\n      setcategories = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedCategories = _useState2[0],\n      setselectedCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      universities = _useState3[0],\n      setuniversities = _useState3[1];\n\n  var _useState4 = useState([]),\n      selecteduniversities = _useState4[0],\n      setselecteduniversities = _useState4[1];\n\n  var _useState5 = useState([]),\n      Cities = _useState5[0],\n      setCities = _useState5[1];\n\n  var _useState6 = useState([]),\n      selectedCities = _useState6[0],\n      setselectedCities = _useState6[1];\n\n  var _useState7 = useState([]),\n      producttype = _useState7[0],\n      setproducttype = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      uniMsg = _useState8[0],\n      setUniMsg = _useState8[1];\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var pageVisited = useSelector(function (state) {\n    return state.pageVisited;\n  });\n\n  var handleTypeChange = function handleTypeChange(x) {\n    setproducttype(producttype.includes(x) ? producttype.filter(function (c) {\n      return c !== x;\n    }) : [].concat(_toConsumableArray(producttype), [x]));\n  };\n\n  useEffect(function () {\n    if (type == \"events\") {\n      getEventCategories().then(function (response) {\n        setcategories(response.categories.data);\n      });\n    } else {\n      getCategories().then(function (response) {\n        setcategories(response.categories.data);\n      });\n    }\n  }, []);\n  useEffect(function () {\n    console.log(\"query\", query);\n    setshowsidebar(!showFilterBtn); // console.log('pageVisited',pageVisited.includes(PAGE_PRODUCTS))\n\n    var m_city = query.m_city,\n        m_cat = query.m_cat,\n        type = query.type;\n\n    if (m_uni) {\n      if (!selecteduniversities.length && m_uni) {\n        var now = new Date();\n        searchUniversities(m_uni).then(function (response) {\n          setselecteduniversities(response);\n          setExpanded(\"panel3\");\n          var data = {\n            response: response,\n            expiry: now.getTime()\n          };\n          localStorage.setItem(SELECTED_FILTER_UNIVERSITY, JSON.stringify(data));\n        });\n      }\n    }\n\n    if (!selectedCities.length && m_city) {\n      searchCities(m_city).then(function (response) {\n        setselectedCities(response.data);\n        setExpanded(\"panel2\");\n      });\n    }\n\n    if (!selectedCategories.length && m_cat) {\n      searchCategories(m_cat).then(function (response) {\n        setselectedCategories(response.data);\n        setExpanded(\"panel1\");\n      });\n    }\n\n    if (!producttype.length && type) {\n      handleTypeChange(type);\n    }\n  }, [m_uni]);\n\n  var handleCatSearch = function handleCatSearch(e) {\n    console.log(type);\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setcategories([]);\n      return;\n    }\n\n    if (type == \"events\") {\n      searchEventCategories(value).then(function (response) {\n        setcategories(response.data);\n      });\n    } else {\n      searchCategories(value).then(function (response) {\n        setcategories(response.data);\n      });\n    }\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setuniversities([]);\n      return;\n    }\n\n    searchUniversities(value).then(function (response) {\n      setuniversities(response);\n    });\n  };\n\n  var handleCitySearch = function handleCitySearch(e) {\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setCities([]);\n      return;\n    }\n\n    searchCities(value).then(function (response) {\n      console.log(\"college\", response);\n      setCities(response.data);\n    });\n  };\n\n  var _useState9 = useState([]),\n      state = _useState9[0],\n      setState = _useState9[1];\n\n  var handleChange = function handleChange(event, type, val) {\n    console.log(event.target.checked);\n    console.log(type);\n    console.log(val);\n\n    if (type == \"category\") {\n      if (selectedCategories.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselectedCategories(selectedCategories.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselectedCategories([].concat(_toConsumableArray(selectedCategories), [val]));\n      }\n\n      console.log(selectedCategories);\n    }\n\n    if (type == \"cities\") {\n      if (selectedCities.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselectedCities(selectedCities.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselectedCities([].concat(_toConsumableArray(selectedCities), [val]));\n      }\n    }\n\n    if (type == \"university\") {\n      if (selecteduniversities.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselecteduniversities(selecteduniversities.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselecteduniversities([].concat(_toConsumableArray(selecteduniversities), [val]));\n      }\n    } // setState({ ...state, [event.target.name]: event.target.checked });\n\n  };\n\n  var _React$useState = React.useState(\"panel1\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var handlePanelChange = function handlePanelChange(panel) {\n    return function (event, newExpanded) {\n      setExpanded(newExpanded ? panel : false);\n    };\n  };\n\n  var mobile = state.mobile,\n      sports = state.sports,\n      cars = state.cars;\n  var classes = useStyles();\n\n  var filterSearch = function filterSearch() {\n    var cities = selectedCities.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    var categories = selectedCategories.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    var universities = selecteduniversities.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    console.log(cities, categories, universities);\n\n    if (!universities.length) {\n      localStorage.setItem(SELECTED_FILTER_RESET, true);\n    }\n\n    var p_type = producttype.length == 1 ? producttype[0] : \"\";\n    var query = \"?m_city=\" + cities + \"&m_cat=\" + categories + \"&m_uni=\" + universities + \"&type=\" + p_type;\n    var reqquery = \"?m_uni=\" + universities;\n\n    if (type == \"events\") {\n      window.location.replace(\"/events\" + query); // router.push(\"/events\" + query);\n    } else if (type == \"requests\") {\n      window.location.replace(\"/buy-request\" + reqquery); // router.push(\"/events\" + query);\n    } else {\n      window.location.replace(\"/products\" + query); // router.push(\"/products\" + query);\n    }\n  };\n\n  var toggle = function toggle() {\n    setshowsidebar(!showsidebar);\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showsidebar = _React$useState4[0],\n      setshowsidebar = _React$useState4[1]; // const [showsidebar, setshowsidebar] = React.useState(!showFilterBtn);\n\n\n  return __jsx(React.Fragment, null, showFilterBtn && __jsx(Button, {\n    className: classes.fliterBtn,\n    onClick: toggle\n  }, __jsx(TuneIcon, null), \"Filter\"), showsidebar && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.heading\n  }, \"FILTER\"), type != \"events\" && type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel0\",\n    onChange: handlePanelChange(\"panel0\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel0a-content\",\n    id: \"panel0a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Type\")), __jsx(Checkbox, {\n    value: \"buy\",\n    checked: producttype.includes(\"buy\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: function onChange() {\n      return handleTypeChange(\"buy\");\n    }\n  }), \" \", \"Buy\", __jsx(Checkbox, {\n    value: \"rental\",\n    checked: producttype.includes(\"rental\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: function onChange() {\n      return handleTypeChange(\"rental\");\n    }\n  }), \"Rent\"), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel1\",\n    onChange: handlePanelChange(\"panel1\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Category\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search Categoty\",\n    onKeyUp: handleCatSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, categories && categories.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      key: cat.id,\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"category\", cat);\n        },\n        color: \"primary\"\n      }),\n      label: cat.name,\n      checked: selectedCategories.filter(function (item) {\n        return item.id == cat.id;\n      }).length > 0\n    });\n  }))), categories && categories.length < 1 && selectedCategories.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCategories && selectedCategories.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      key: cat.id,\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"category\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  }))))), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel2\",\n    onChange: handlePanelChange(\"panel2\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"City\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search City\",\n    onKeyUp: handleCitySearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, Cities && Cities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"cities\", cat);\n        },\n        color: \"primary\",\n        name: \"mobile\"\n      }),\n      label: cat.name,\n      checked: selectedCities.filter(function (item) {\n        return item.id == cat.id;\n      }).length > 0\n    });\n  }))), Cities.length < 1 && selectedCities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCities && selectedCities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"cities\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  }))))), __jsx(Accordion, {\n    expanded: expanded === \"panel3\",\n    onChange: handlePanelChange(\"panel3\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"College\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search College\",\n    onKeyUp: handleUniSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, universities && universities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"university\", cat);\n        },\n        color: \"primary\",\n        name: \"mobile\"\n      }),\n      label: cat.name\n    });\n  }))), universities.length < 1 && selecteduniversities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selecteduniversities && selecteduniversities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"university\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  })))))), __jsx(Button, {\n    className: classes.filterBtn,\n    onClick: filterSearch\n  }, \"Filter\")));\n}\n\n_s(Sidebar, \"2qe02gmNJqZ0vBnjbpxXG9i8ubo=\", false, function () {\n  return [useRouter, useDispatch, useSelector, useStyles];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["E:/jay/frontend/src/components/Sidebar/index.js"],"names":["React","useState","useEffect","makeStyles","Card","CardContent","Typography","Button","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","searchCategories","searchUniversities","searchCities","searchEventCategories","getCities","getCategories","getEventCategories","commonStyles","desktopStyles","mobileStyles","TabStyles","useRouter","TuneIcon","SELECTED_FILTER_UNIVERSITY","PAGE_PRODUCTS","SELECTED_FILTER_RESET","useDispatch","useSelector","addVisited","useStyles","theme","breakpoints","up","between","down","Sidebar","type","showFilterBtn","m_uni","query","categories","setcategories","selectedCategories","setselectedCategories","universities","setuniversities","selecteduniversities","setselecteduniversities","Cities","setCities","selectedCities","setselectedCities","producttype","setproducttype","uniMsg","setUniMsg","router","dispatch","pageVisited","state","handleTypeChange","x","includes","filter","c","then","response","data","console","log","setshowsidebar","m_city","m_cat","length","now","Date","setExpanded","expiry","getTime","localStorage","setItem","JSON","stringify","handleCatSearch","e","value","target","handleUniSearch","handleCitySearch","setState","handleChange","event","val","checked","some","item","id","expanded","handlePanelChange","panel","newExpanded","mobile","sports","cars","classes","filterSearch","cities","map","v","name","join","p_type","reqquery","window","location","replace","toggle","showsidebar","fliterBtn","root","heading","title","searchField","formControl","cat","filterBtn"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,MAAxC,QAAsD,mBAAtD;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,YAHF,EAIEC,qBAJF,EAKEC,SALF,EAMEC,aANF,EAOEC,kBAPF,QAQO,uBARP;AASA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,EAAoDC,SAApD,QAAqE,UAArE;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SACEC,0BADF,EAEEC,aAFF,EAGEC,qBAHF,QAIO,iBAJP;AAKA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,iCAA3B;AAEA,IAAMC,SAAS,GAAGlC,UAAU,CAAC,UAACmC,KAAD;AAAA;;AAAA,yCACxBb,YADwB,6DAE1Ba,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAF0B,EAEGd,aAFH,mCAG1BY,KAAK,CAACC,WAAN,CAAkBE,OAAlB,CAA0B,IAA1B,EAAgC,IAAhC,CAH0B,EAGcb,SAHd,mCAI1BU,KAAK,CAACC,WAAN,CAAkBG,IAAlB,CAAuB,IAAvB,CAJ0B,EAIKf,YAJL;AAAA,CAAD,CAA5B;;AAOA,SAASgB,OAAT,OAAqE;AAAA;;AAAA,uBAAlDC,IAAkD;AAAA,MAAlDA,IAAkD,0BAA3C,EAA2C;AAAA,gCAAvCC,aAAuC;AAAA,MAAvCA,aAAuC,mCAAvB,KAAuB;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBAC/B9C,QAAQ,CAAC,EAAD,CADuB;AAAA,MAC5D+C,UAD4D;AAAA,MAChDC,aADgD;;AAAA,mBAEfhD,QAAQ,CAAC,EAAD,CAFO;AAAA,MAE5DiD,kBAF4D;AAAA,MAExCC,qBAFwC;;AAAA,mBAG3BlD,QAAQ,CAAC,EAAD,CAHmB;AAAA,MAG5DmD,YAH4D;AAAA,MAG9CC,eAH8C;;AAAA,mBAIXpD,QAAQ,CAAC,EAAD,CAJG;AAAA,MAI5DqD,oBAJ4D;AAAA,MAItCC,uBAJsC;;AAAA,mBAKvCtD,QAAQ,CAAC,EAAD,CAL+B;AAAA,MAK5DuD,MAL4D;AAAA,MAKpDC,SALoD;;AAAA,mBAMvBxD,QAAQ,CAAC,EAAD,CANe;AAAA,MAM5DyD,cAN4D;AAAA,MAM5CC,iBAN4C;;AAAA,mBAO7B1D,QAAQ,CAAC,EAAD,CAPqB;AAAA,MAO5D2D,WAP4D;AAAA,MAO/CC,cAP+C;;AAAA,mBAQvC5D,QAAQ,CAAC,EAAD,CAR+B;AAAA,MAQ5D6D,MAR4D;AAAA,MAQpDC,SARoD;;AASnE,MAAMC,MAAM,GAAGnC,SAAS,EAAxB;AACA,MAAMoC,QAAQ,GAAG/B,WAAW,EAA5B;AACA,MAAMgC,WAAW,GAAG/B,WAAW,CAAC,UAACgC,KAAD;AAAA,WAAWA,KAAK,CAACD,WAAjB;AAAA,GAAD,CAA/B;;AAEA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC9BR,IAAAA,cAAc,CACZD,WAAW,CAACU,QAAZ,CAAqBD,CAArB,IACIT,WAAW,CAACW,MAAZ,CAAmB,UAACC,CAAD;AAAA,aAAOA,CAAC,KAAKH,CAAb;AAAA,KAAnB,CADJ,gCAEQT,WAFR,IAEqBS,CAFrB,EADY,CAAd;AAKD,GAND;;AAQAnE,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0C,IAAI,IAAI,QAAZ,EAAsB;AACpBpB,MAAAA,kBAAkB,GAAGiD,IAArB,CAA0B,UAACC,QAAD,EAAc;AACtCzB,QAAAA,aAAa,CAACyB,QAAQ,CAAC1B,UAAT,CAAoB2B,IAArB,CAAb;AACD,OAFD;AAGD,KAJD,MAIO;AACLpD,MAAAA,aAAa,GAAGkD,IAAhB,CAAqB,UAACC,QAAD,EAAc;AACjCzB,QAAAA,aAAa,CAACyB,QAAQ,CAAC1B,UAAT,CAAoB2B,IAArB,CAAb;AACD,OAFD;AAGD;AACF,GAVQ,EAUN,EAVM,CAAT;AAYAzE,EAAAA,SAAS,CAAC,YAAM;AACd0E,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB9B,KAArB;AACA+B,IAAAA,cAAc,CAAC,CAACjC,aAAF,CAAd,CAFc,CAId;;AAJc,QAKRkC,MALQ,GAKgBhC,KALhB,CAKRgC,MALQ;AAAA,QAKAC,KALA,GAKgBjC,KALhB,CAKAiC,KALA;AAAA,QAKOpC,IALP,GAKgBG,KALhB,CAKOH,IALP;;AAMd,QAAIE,KAAJ,EAAW;AACT,UAAI,CAACQ,oBAAoB,CAAC2B,MAAtB,IAAgCnC,KAApC,EAA2C;AACzC,YAAMoC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEAhE,QAAAA,kBAAkB,CAAC2B,KAAD,CAAlB,CAA0B2B,IAA1B,CAA+B,UAACC,QAAD,EAAc;AAC3CnB,UAAAA,uBAAuB,CAACmB,QAAD,CAAvB;AACAU,UAAAA,WAAW,CAAC,QAAD,CAAX;AACA,cAAIT,IAAI,GAAG;AACTD,YAAAA,QAAQ,EAAEA,QADD;AAETW,YAAAA,MAAM,EAAEH,GAAG,CAACI,OAAJ;AAFC,WAAX;AAKAC,UAAAA,YAAY,CAACC,OAAb,CACEzD,0BADF,EAEE0D,IAAI,CAACC,SAAL,CAAef,IAAf,CAFF;AAID,SAZD;AAaD;AACF;;AACD,QAAI,CAACjB,cAAc,CAACuB,MAAhB,IAA0BF,MAA9B,EAAsC;AACpC3D,MAAAA,YAAY,CAAC2D,MAAD,CAAZ,CAAqBN,IAArB,CAA0B,UAACC,QAAD,EAAc;AACtCf,QAAAA,iBAAiB,CAACe,QAAQ,CAACC,IAAV,CAAjB;AACAS,QAAAA,WAAW,CAAC,QAAD,CAAX;AACD,OAHD;AAID;;AACD,QAAI,CAAClC,kBAAkB,CAAC+B,MAApB,IAA8BD,KAAlC,EAAyC;AACvC9D,MAAAA,gBAAgB,CAAC8D,KAAD,CAAhB,CAAwBP,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACzCvB,QAAAA,qBAAqB,CAACuB,QAAQ,CAACC,IAAV,CAArB;AACAS,QAAAA,WAAW,CAAC,QAAD,CAAX;AACD,OAHD;AAID;;AACD,QAAI,CAACxB,WAAW,CAACqB,MAAb,IAAuBrC,IAA3B,EAAiC;AAC/BwB,MAAAA,gBAAgB,CAACxB,IAAD,CAAhB;AACD;AACF,GAxCQ,EAwCN,CAACE,KAAD,CAxCM,CAAT;;AA0CA,MAAM6C,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;AAC7BhB,IAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAZ;AACA,QAAIiD,KAAK,GAAGD,CAAC,GAAGA,CAAC,CAACE,MAAF,CAASD,KAAZ,GAAoB,EAAjC;;AACA,QAAI,CAACA,KAAL,EAAY;AACV5C,MAAAA,aAAa,CAAC,EAAD,CAAb;AACA;AACD;;AACD,QAAIL,IAAI,IAAI,QAAZ,EAAsB;AACpBvB,MAAAA,qBAAqB,CAACwE,KAAD,CAArB,CAA6BpB,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC9CzB,QAAAA,aAAa,CAACyB,QAAQ,CAACC,IAAV,CAAb;AACD,OAFD;AAGD,KAJD,MAIO;AACLzD,MAAAA,gBAAgB,CAAC2E,KAAD,CAAhB,CAAwBpB,IAAxB,CAA6B,UAACC,QAAD,EAAc;AACzCzB,QAAAA,aAAa,CAACyB,QAAQ,CAACC,IAAV,CAAb;AACD,OAFD;AAGD;AACF,GAhBD;;AAkBA,MAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACH,CAAD,EAAO;AAC7B,QAAIC,KAAK,GAAGD,CAAC,GAAGA,CAAC,CAACE,MAAF,CAASD,KAAZ,GAAoB,EAAjC;;AACA,QAAI,CAACA,KAAL,EAAY;AACVxC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACA;AACD;;AACDlC,IAAAA,kBAAkB,CAAC0E,KAAD,CAAlB,CAA0BpB,IAA1B,CAA+B,UAACC,QAAD,EAAc;AAC3CrB,MAAAA,eAAe,CAACqB,QAAD,CAAf;AACD,KAFD;AAGD,GATD;;AAWA,MAAMsB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,CAAD,EAAO;AAC9B,QAAIC,KAAK,GAAGD,CAAC,GAAGA,CAAC,CAACE,MAAF,CAASD,KAAZ,GAAoB,EAAjC;;AACA,QAAI,CAACA,KAAL,EAAY;AACVpC,MAAAA,SAAS,CAAC,EAAD,CAAT;AACA;AACD;;AACDrC,IAAAA,YAAY,CAACyE,KAAD,CAAZ,CAAoBpB,IAApB,CAAyB,UAACC,QAAD,EAAc;AACrCE,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,QAAvB;AACAjB,MAAAA,SAAS,CAACiB,QAAQ,CAACC,IAAV,CAAT;AACD,KAHD;AAID,GAVD;;AAxGmE,mBAoHzC1E,QAAQ,CAAC,EAAD,CApHiC;AAAA,MAoH5DkE,KApH4D;AAAA,MAoHrD8B,QApHqD;;AAsHnE,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQvD,IAAR,EAAcwD,GAAd,EAAsB;AACzCxB,IAAAA,OAAO,CAACC,GAAR,CAAYsB,KAAK,CAACL,MAAN,CAAaO,OAAzB;AACAzB,IAAAA,OAAO,CAACC,GAAR,CAAYjC,IAAZ;AACAgC,IAAAA,OAAO,CAACC,GAAR,CAAYuB,GAAZ;;AACA,QAAIxD,IAAI,IAAI,UAAZ,EAAwB;AACtB,UAAIM,kBAAkB,CAACoD,IAAnB,CAAwB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYJ,GAAG,CAACI,EAA1B;AAAA,OAAxB,CAAJ,EAA2D;AACzDrD,QAAAA,qBAAqB,CACnBD,kBAAkB,CAACqB,MAAnB,CAA0B,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACgC,EAAF,KAASJ,GAAG,CAACI,EAApB;AAAA,SAA1B,CADmB,CAArB;AAGD,OAJD,MAIO;AACLrD,QAAAA,qBAAqB,8BAAKD,kBAAL,IAAyBkD,GAAzB,GAArB;AACD;;AACDxB,MAAAA,OAAO,CAACC,GAAR,CAAY3B,kBAAZ;AACD;;AACD,QAAIN,IAAI,IAAI,QAAZ,EAAsB;AACpB,UAAIc,cAAc,CAAC4C,IAAf,CAAoB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYJ,GAAG,CAACI,EAA1B;AAAA,OAApB,CAAJ,EAAuD;AACrD7C,QAAAA,iBAAiB,CAACD,cAAc,CAACa,MAAf,CAAsB,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACgC,EAAF,KAASJ,GAAG,CAACI,EAApB;AAAA,SAAtB,CAAD,CAAjB;AACD,OAFD,MAEO;AACL7C,QAAAA,iBAAiB,8BAAKD,cAAL,IAAqB0C,GAArB,GAAjB;AACD;AACF;;AACD,QAAIxD,IAAI,IAAI,YAAZ,EAA0B;AACxB,UAAIU,oBAAoB,CAACgD,IAArB,CAA0B,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,KAAYJ,GAAG,CAACI,EAA1B;AAAA,OAA1B,CAAJ,EAA6D;AAC3DjD,QAAAA,uBAAuB,CACrBD,oBAAoB,CAACiB,MAArB,CAA4B,UAACC,CAAD;AAAA,iBAAOA,CAAC,CAACgC,EAAF,KAASJ,GAAG,CAACI,EAApB;AAAA,SAA5B,CADqB,CAAvB;AAGD,OAJD,MAIO;AACLjD,QAAAA,uBAAuB,8BAAKD,oBAAL,IAA2B8C,GAA3B,GAAvB;AACD;AACF,KA7BwC,CA+BzC;;AACD,GAhCD;;AAtHmE,wBAwJnCpG,KAAK,CAACC,QAAN,CAAe,QAAf,CAxJmC;AAAA;AAAA,MAwJ5DwG,QAxJ4D;AAAA,MAwJlDrB,WAxJkD;;AAyJnE,MAAMsB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,WAAW,UAACR,KAAD,EAAQS,WAAR,EAAwB;AAC3DxB,MAAAA,WAAW,CAACwB,WAAW,GAAGD,KAAH,GAAW,KAAvB,CAAX;AACD,KAFyB;AAAA,GAA1B;;AAzJmE,MA6J3DE,MA7J2D,GA6JlC1C,KA7JkC,CA6J3D0C,MA7J2D;AAAA,MA6JnDC,MA7JmD,GA6JlC3C,KA7JkC,CA6JnD2C,MA7JmD;AAAA,MA6J3CC,IA7J2C,GA6JlC5C,KA7JkC,CA6J3C4C,IA7J2C;AA8JnE,MAAMC,OAAO,GAAG3E,SAAS,EAAzB;;AAEA,MAAM4E,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIC,MAAM,GAAGxD,cAAc,CAACyD,GAAf,CAAmB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAT;AAAA,KAAnB,EAAkCC,IAAlC,CAAuC,GAAvC,CAAb;AAEA,QAAItE,UAAU,GAAGE,kBAAkB,CAACiE,GAAnB,CAAuB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAT;AAAA,KAAvB,EAAsCC,IAAtC,CAA2C,GAA3C,CAAjB;AACA,QAAIlE,YAAY,GAAGE,oBAAoB,CAAC6D,GAArB,CAAyB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,IAAT;AAAA,KAAzB,EAAwCC,IAAxC,CAA6C,GAA7C,CAAnB;AACA1C,IAAAA,OAAO,CAACC,GAAR,CAAYqC,MAAZ,EAAoBlE,UAApB,EAAgCI,YAAhC;;AACA,QAAI,CAACA,YAAY,CAAC6B,MAAlB,EAA0B;AACxBM,MAAAA,YAAY,CAACC,OAAb,CAAqBvD,qBAArB,EAA4C,IAA5C;AACD;;AACD,QAAIsF,MAAM,GAAG3D,WAAW,CAACqB,MAAZ,IAAsB,CAAtB,GAA0BrB,WAAW,CAAC,CAAD,CAArC,GAA2C,EAAxD;AACA,QAAIb,KAAK,GACP,aACAmE,MADA,GAEA,SAFA,GAGAlE,UAHA,GAIA,SAJA,GAKAI,YALA,GAMA,QANA,GAOAmE,MARF;AASA,QAAIC,QAAQ,GAAG,YAAYpE,YAA3B;;AACA,QAAIR,IAAI,IAAI,QAAZ,EAAsB;AACpB6E,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAY5E,KAApC,EADoB,CAGpB;AACD,KAJD,MAIO,IAAIH,IAAI,IAAI,UAAZ,EAAwB;AAC7B6E,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,iBAAiBH,QAAzC,EAD6B,CAG7B;AACD,KAJM,MAIA;AACLC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,cAAc5E,KAAtC,EADK,CAGL;AACD;AACF,GAjCD;;AAmCA,MAAM6E,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB9C,IAAAA,cAAc,CAAC,CAAC+C,WAAF,CAAd;AACD,GAFD;;AAnMmE,yBAuM7B7H,KAAK,CAACC,QAAN,CAAe,KAAf,CAvM6B;AAAA;AAAA,MAuM5D4H,WAvM4D;AAAA,MAuM/C/C,cAvM+C,wBAwMnE;;;AAEA,SACE,4BACGjC,aAAa,IACZ,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmE,OAAO,CAACc,SAA3B;AAAsC,IAAA,OAAO,EAAEF;AAA/C,KACE,MAAC,QAAD,OADF,WAFJ,EAOGC,WAAW,IACV,4BACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACe;AAAxB,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEf,OAAO,CAACgB;AAA5C,cADF,EAIGpF,IAAI,IAAI,QAAR,IAAoBA,IAAI,IAAI,UAA5B,IACC,MAAC,SAAD;AACE,IAAA,QAAQ,EAAE6D,QAAQ,KAAK,QADzB;AAEE,IAAA,QAAQ,EAAEC,iBAAiB,CAAC,QAAD;AAF7B,KAIE,MAAC,gBAAD;AACE,IAAA,UAAU,EAAE,MAAC,cAAD,OADd;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC;AAHL,KAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEM,OAAO,CAACiB;AAA5C,YALF,CAJF,EAaE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,OAAO,EAAErE,WAAW,CAACU,QAAZ,CAAqB,KAArB,CAFX;AAGE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHd;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMF,gBAAgB,CAAC,KAAD,CAAtB;AAAA;AAJZ,IAbF,EAkBK,GAlBL,SAoBE,MAAC,QAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,OAAO,EAAER,WAAW,CAACU,QAAZ,CAAqB,QAArB,CAFX;AAGE,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAHd;AAIE,IAAA,QAAQ,EAAE;AAAA,aAAMF,gBAAgB,CAAC,QAAD,CAAtB;AAAA;AAJZ,IApBF,SALJ,EAkCGxB,IAAI,IAAI,UAAR,IACC,MAAC,SAAD;AACE,IAAA,QAAQ,EAAE6D,QAAQ,KAAK,QADzB;AAEE,IAAA,QAAQ,EAAEC,iBAAiB,CAAC,QAAD;AAF7B,KAIE,MAAC,gBAAD;AACE,IAAA,UAAU,EAAE,MAAC,cAAD,OADd;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC;AAHL,KAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEM,OAAO,CAACiB;AAA5C,gBALF,CAJF,EAaE;AACE,IAAA,SAAS,EAAEjB,OAAO,CAACkB,WADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,OAAO,EAAEvC;AAJX,IAbF,EAmBE,MAAC,gBAAD,QACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAEqB,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACGnF,UAAU,IACTA,UAAU,CAACmE,GAAX,CAAe,UAACiB,GAAD;AAAA,WACb,MAAC,gBAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAAC5B,EADX;AAEE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACZ,CAAD;AAAA,iBACRM,YAAY,CAACN,CAAD,EAAI,UAAJ,EAAgBwC,GAAhB,CADJ;AAAA,SADZ;AAIE,QAAA,KAAK,EAAC;AAJR,QAHJ;AAUE,MAAA,KAAK,EAAEA,GAAG,CAACf,IAVb;AAWE,MAAA,OAAO,EACLnE,kBAAkB,CAACqB,MAAnB,CACE,UAACgC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,IAAW4B,GAAG,CAAC5B,EAAzB;AAAA,OADF,EAEEvB,MAFF,GAEW;AAdf,MADa;AAAA,GAAf,CAFJ,CAJF,CADF,EA6BGjC,UAAU,IAAIA,UAAU,CAACiC,MAAX,GAAoB,CAAlC,IAAuC/B,kBAAkB,CAAC+B,MAAnB,GAA4B,CAAnE,IACC,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAE+B,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACGjF,kBAAkB,IACjBA,kBAAkB,CAACiE,GAAnB,CAAuB,UAACiB,GAAD;AAAA,WACrB,MAAC,gBAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAAC5B,EADX;AAEE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACZ,CAAD;AAAA,iBACRM,YAAY,CAACN,CAAD,EAAI,UAAJ,EAAgBwC,GAAhB,CADJ;AAAA,SADZ;AAIE,QAAA,KAAK,EAAC;AAJR,QAHJ;AAUE,MAAA,OAAO,EAAE,IAVX;AAWE,MAAA,KAAK,EAAEA,GAAG,CAACf;AAXb,MADqB;AAAA,GAAvB,CAFJ,CAJF,CA9BJ,CAnBF,CAnCJ,EA+GGzE,IAAI,IAAI,UAAR,IACC,MAAC,SAAD;AACE,IAAA,QAAQ,EAAE6D,QAAQ,KAAK,QADzB;AAEE,IAAA,QAAQ,EAAEC,iBAAiB,CAAC,QAAD;AAF7B,KAIE,MAAC,gBAAD;AACE,IAAA,UAAU,EAAE,MAAC,cAAD,OADd;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC;AAHL,KAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEM,OAAO,CAACiB;AAA5C,YALF,CAJF,EAaE;AACE,IAAA,SAAS,EAAEjB,OAAO,CAACkB,WADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,OAAO,EAAElC;AAJX,IAbF,EAmBE,MAAC,gBAAD,QACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAEgB,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACG3E,MAAM,IACLA,MAAM,CAAC2D,GAAP,CAAW,UAACiB,GAAD;AAAA,WACT,MAAC,gBAAD;AACE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACxC,CAAD;AAAA,iBAAOM,YAAY,CAACN,CAAD,EAAI,QAAJ,EAAcwC,GAAd,CAAnB;AAAA,SADZ;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,IAAI,EAAC;AAHP,QAFJ;AAQE,MAAA,KAAK,EAAEA,GAAG,CAACf,IARb;AASE,MAAA,OAAO,EACL3D,cAAc,CAACa,MAAf,CAAsB,UAACgC,IAAD;AAAA,eAAUA,IAAI,CAACC,EAAL,IAAW4B,GAAG,CAAC5B,EAAzB;AAAA,OAAtB,EACGvB,MADH,GACY;AAXhB,MADS;AAAA,GAAX,CAFJ,CAJF,CADF,EAyBGzB,MAAM,CAACyB,MAAP,GAAgB,CAAhB,IAAqBvB,cAAc,CAACuB,MAAf,GAAwB,CAA7C,IACC,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAE+B,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACGzE,cAAc,IACbA,cAAc,CAACyD,GAAf,CAAmB,UAACiB,GAAD;AAAA,WACjB,MAAC,gBAAD;AACE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACxC,CAAD;AAAA,iBACRM,YAAY,CAACN,CAAD,EAAI,QAAJ,EAAcwC,GAAd,CADJ;AAAA,SADZ;AAIE,QAAA,KAAK,EAAC;AAJR,QAFJ;AASE,MAAA,OAAO,EAAE,IATX;AAUE,MAAA,KAAK,EAAEA,GAAG,CAACf;AAVb,MADiB;AAAA,GAAnB,CAFJ,CAJF,CA1BJ,CAnBF,CAhHJ,EAuLE,MAAC,SAAD;AACE,IAAA,QAAQ,EAAEZ,QAAQ,KAAK,QADzB;AAEE,IAAA,QAAQ,EAAEC,iBAAiB,CAAC,QAAD;AAF7B,KAIE,MAAC,gBAAD;AACE,IAAA,UAAU,EAAE,MAAC,cAAD,OADd;AAEE,qBAAc,iBAFhB;AAGE,IAAA,EAAE,EAAC;AAHL,KAKE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEM,OAAO,CAACiB;AAA5C,eALF,CAJF,EAaE;AACE,IAAA,SAAS,EAAEjB,OAAO,CAACkB,WADrB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,OAAO,EAAEnC;AAJX,IAbF,EAmBE,MAAC,gBAAD,QACE,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAEiB,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACG/E,YAAY,IACXA,YAAY,CAAC+D,GAAb,CAAiB,UAACiB,GAAD;AAAA,WACf,MAAC,gBAAD;AACE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACxC,CAAD;AAAA,iBACRM,YAAY,CAACN,CAAD,EAAI,YAAJ,EAAkBwC,GAAlB,CADJ;AAAA,SADZ;AAIE,QAAA,KAAK,EAAC,SAJR;AAKE,QAAA,IAAI,EAAC;AALP,QAFJ;AAUE,MAAA,KAAK,EAAEA,GAAG,CAACf;AAVb,MADe;AAAA,GAAjB,CAFJ,CAJF,CADF,EAwBGjE,YAAY,CAAC6B,MAAb,GAAsB,CAAtB,IAA2B3B,oBAAoB,CAAC2B,MAArB,GAA8B,CAAzD,IACC,MAAC,WAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,SAAS,EAAE+B,OAAO,CAACmB;AAFrB,KAIE,MAAC,SAAD,QACG7E,oBAAoB,IACnBA,oBAAoB,CAAC6D,GAArB,CAAyB,UAACiB,GAAD;AAAA,WACvB,MAAC,gBAAD;AACE,MAAA,OAAO,EACL,MAAC,QAAD;AACE,QAAA,QAAQ,EAAE,kBAACxC,CAAD;AAAA,iBACRM,YAAY,CAACN,CAAD,EAAI,YAAJ,EAAkBwC,GAAlB,CADJ;AAAA,SADZ;AAIE,QAAA,KAAK,EAAC;AAJR,QAFJ;AASE,MAAA,OAAO,EAAE,IATX;AAUE,MAAA,KAAK,EAAEA,GAAG,CAACf;AAVb,MADuB;AAAA,GAAzB,CAFJ,CAJF,CAzBJ,CAnBF,CAvLF,CADF,EA8PE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL,OAAO,CAACqB,SAA3B;AAAsC,IAAA,OAAO,EAAEpB;AAA/C,cA9PF,CARJ,CADF;AA8QD;;GAxdQtE,O;UASQd,S,EACEK,W,EACGC,W,EAmJJE,S;;;KA9JTM,O;AA0dT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport {\r\n  searchCategories,\r\n  searchUniversities,\r\n  searchCities,\r\n  searchEventCategories,\r\n  getCities,\r\n  getCategories,\r\n  getEventCategories\r\n} from \"../../apis/global-api\";\r\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\r\nimport { useRouter } from \"next/router\";\r\nimport TuneIcon from \"@material-ui/icons/Tune\";\r\nimport {\r\n  SELECTED_FILTER_UNIVERSITY,\r\n  PAGE_PRODUCTS,\r\n  SELECTED_FILTER_RESET,\r\n} from \"../../constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addVisited } from \"../../redux/actions/PageVisited\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ...commonStyles,\r\n  [theme.breakpoints.up(\"sm\")]: desktopStyles,\r\n  [theme.breakpoints.between(\"xs\", \"sm\")]: TabStyles,\r\n  [theme.breakpoints.down(\"xs\")]: mobileStyles,\r\n}));\r\n\r\nfunction Sidebar({ type = \"\", showFilterBtn = false, m_uni, query }) {\r\n  const [categories, setcategories] = useState([]);\r\n  const [selectedCategories, setselectedCategories] = useState([]);\r\n  const [universities, setuniversities] = useState([]);\r\n  const [selecteduniversities, setselecteduniversities] = useState([]);\r\n  const [Cities, setCities] = useState([]);\r\n  const [selectedCities, setselectedCities] = useState([]);\r\n  const [producttype, setproducttype] = useState([]);\r\n  const [uniMsg, setUniMsg] = useState(\"\");\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const pageVisited = useSelector((state) => state.pageVisited);\r\n\r\n  const handleTypeChange = (x) => {\r\n    setproducttype(\r\n      producttype.includes(x)\r\n        ? producttype.filter((c) => c !== x)\r\n        : [...producttype, x]\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (type == \"events\") {\r\n      getEventCategories().then((response) => {\r\n        setcategories(response.categories.data);\r\n      });\r\n    } else {\r\n      getCategories().then((response) => {\r\n        setcategories(response.categories.data);\r\n      });\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log(\"query\", query);\r\n    setshowsidebar(!showFilterBtn);\r\n\r\n    // console.log('pageVisited',pageVisited.includes(PAGE_PRODUCTS))\r\n    let { m_city, m_cat, type } = query;\r\n    if (m_uni) {\r\n      if (!selecteduniversities.length && m_uni) {\r\n        const now = new Date();\r\n\r\n        searchUniversities(m_uni).then((response) => {\r\n          setselecteduniversities(response);\r\n          setExpanded(\"panel3\");\r\n          let data = {\r\n            response: response,\r\n            expiry: now.getTime(),\r\n          };\r\n\r\n          localStorage.setItem(\r\n            SELECTED_FILTER_UNIVERSITY,\r\n            JSON.stringify(data)\r\n          );\r\n        });\r\n      }\r\n    }\r\n    if (!selectedCities.length && m_city) {\r\n      searchCities(m_city).then((response) => {\r\n        setselectedCities(response.data);\r\n        setExpanded(\"panel2\");\r\n      });\r\n    }\r\n    if (!selectedCategories.length && m_cat) {\r\n      searchCategories(m_cat).then((response) => {\r\n        setselectedCategories(response.data);\r\n        setExpanded(\"panel1\");\r\n      });\r\n    }\r\n    if (!producttype.length && type) {\r\n      handleTypeChange(type);\r\n    }\r\n  }, [m_uni]);\r\n\r\n  const handleCatSearch = (e) => {\r\n    console.log(type);\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setcategories([]);\r\n      return;\r\n    }\r\n    if (type == \"events\") {\r\n      searchEventCategories(value).then((response) => {\r\n        setcategories(response.data);\r\n      });\r\n    } else {\r\n      searchCategories(value).then((response) => {\r\n        setcategories(response.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUniSearch = (e) => {\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setuniversities([]);\r\n      return;\r\n    }\r\n    searchUniversities(value).then((response) => {\r\n      setuniversities(response);\r\n    });\r\n  };\r\n\r\n  const handleCitySearch = (e) => {\r\n    let value = e ? e.target.value : \"\";\r\n    if (!value) {\r\n      setCities([]);\r\n      return;\r\n    }\r\n    searchCities(value).then((response) => {\r\n      console.log(\"college\", response);\r\n      setCities(response.data);\r\n    });\r\n  };\r\n\r\n  const [state, setState] = useState([]);\r\n\r\n  const handleChange = (event, type, val) => {\r\n    console.log(event.target.checked);\r\n    console.log(type);\r\n    console.log(val);\r\n    if (type == \"category\") {\r\n      if (selectedCategories.some((item) => item.id === val.id)) {\r\n        setselectedCategories(\r\n          selectedCategories.filter((c) => c.id !== val.id)\r\n        );\r\n      } else {\r\n        setselectedCategories([...selectedCategories, val]);\r\n      }\r\n      console.log(selectedCategories);\r\n    }\r\n    if (type == \"cities\") {\r\n      if (selectedCities.some((item) => item.id === val.id)) {\r\n        setselectedCities(selectedCities.filter((c) => c.id !== val.id));\r\n      } else {\r\n        setselectedCities([...selectedCities, val]);\r\n      }\r\n    }\r\n    if (type == \"university\") {\r\n      if (selecteduniversities.some((item) => item.id === val.id)) {\r\n        setselecteduniversities(\r\n          selecteduniversities.filter((c) => c.id !== val.id)\r\n        );\r\n      } else {\r\n        setselecteduniversities([...selecteduniversities, val]);\r\n      }\r\n    }\r\n\r\n    // setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  const [expanded, setExpanded] = React.useState(\"panel1\");\r\n  const handlePanelChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  const { mobile, sports, cars } = state;\r\n  const classes = useStyles();\r\n\r\n  const filterSearch = () => {\r\n    let cities = selectedCities.map((v) => v.name).join(\",\");\r\n\r\n    let categories = selectedCategories.map((v) => v.name).join(\",\");\r\n    let universities = selecteduniversities.map((v) => v.name).join(\",\");\r\n    console.log(cities, categories, universities);\r\n    if (!universities.length) {\r\n      localStorage.setItem(SELECTED_FILTER_RESET, true);\r\n    }\r\n    let p_type = producttype.length == 1 ? producttype[0] : \"\";\r\n    let query =\r\n      \"?m_city=\" +\r\n      cities +\r\n      \"&m_cat=\" +\r\n      categories +\r\n      \"&m_uni=\" +\r\n      universities +\r\n      \"&type=\" +\r\n      p_type;\r\n    let reqquery = \"?m_uni=\" + universities;\r\n    if (type == \"events\") {\r\n      window.location.replace(\"/events\" + query);\r\n\r\n      // router.push(\"/events\" + query);\r\n    } else if (type == \"requests\") {\r\n      window.location.replace(\"/buy-request\" + reqquery);\r\n\r\n      // router.push(\"/events\" + query);\r\n    } else {\r\n      window.location.replace(\"/products\" + query);\r\n\r\n      // router.push(\"/products\" + query);\r\n    }\r\n  };\r\n    \r\n  const toggle = () => {\r\n    setshowsidebar(!showsidebar);\r\n  };\r\n\r\n  const [showsidebar, setshowsidebar] = React.useState(false);\r\n  // const [showsidebar, setshowsidebar] = React.useState(!showFilterBtn);\r\n\r\n  return (\r\n    <>\r\n      {showFilterBtn && (\r\n        <Button className={classes.fliterBtn} onClick={toggle}>\r\n          <TuneIcon />\r\n          Filter\r\n        </Button>\r\n      )}\r\n      {showsidebar && (\r\n        <>\r\n          <div className={classes.root}>\r\n            <Typography variant=\"h6\" className={classes.heading}>\r\n              FILTER\r\n            </Typography>\r\n            {type != \"events\" && type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel0\"}\r\n                onChange={handlePanelChange(\"panel0\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel0a-content\"\r\n                  id=\"panel0a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Type\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <Checkbox\r\n                  value=\"buy\"\r\n                  checked={producttype.includes(\"buy\")}\r\n                  inputProps={{ \"aria-label\": \"Checkbox A\" }}\r\n                  onChange={() => handleTypeChange(\"buy\")}\r\n                />{\" \"}\r\n                Buy\r\n                <Checkbox\r\n                  value=\"rental\"\r\n                  checked={producttype.includes(\"rental\")}\r\n                  inputProps={{ \"aria-label\": \"Checkbox A\" }}\r\n                  onChange={() => handleTypeChange(\"rental\")}\r\n                />\r\n                Rent\r\n              </Accordion>\r\n            )}\r\n            {type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel1\"}\r\n                onChange={handlePanelChange(\"panel1\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    Category\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <input\r\n                  className={classes.searchField}\r\n                  type=\"text\"\r\n                  placeholder=\"search Categoty\"\r\n                  onKeyUp={handleCatSearch}\r\n                />\r\n                <AccordionDetails>\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {categories &&\r\n                        categories.map((cat) => (\r\n                          <FormControlLabel\r\n                            key={cat.id}\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) =>\r\n                                  handleChange(e, \"category\", cat)\r\n                                }\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            label={cat.name}\r\n                            checked={\r\n                              selectedCategories.filter(\r\n                                (item) => item.id == cat.id\r\n                              ).length > 0\r\n                            }\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n\r\n                  {categories && categories.length < 1 && selectedCategories.length > 0 && (\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormGroup>\r\n                        {selectedCategories &&\r\n                          selectedCategories.map((cat) => (\r\n                            <FormControlLabel\r\n                              key={cat.id}\r\n                              control={\r\n                                <Checkbox\r\n                                  onChange={(e) =>\r\n                                    handleChange(e, \"category\", cat)\r\n                                  }\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              checked={true}\r\n                              label={cat.name}\r\n                            />\r\n                          ))}\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            )}\r\n            {type != \"requests\" && (\r\n              <Accordion\r\n                expanded={expanded === \"panel2\"}\r\n                onChange={handlePanelChange(\"panel2\")}\r\n              >\r\n                <AccordionSummary\r\n                  expandIcon={<ExpandMoreIcon />}\r\n                  aria-controls=\"panel1a-content\"\r\n                  id=\"panel1a-header\"\r\n                >\r\n                  <Typography variant=\"h6\" className={classes.title}>\r\n                    City\r\n                  </Typography>\r\n                </AccordionSummary>\r\n                <input\r\n                  className={classes.searchField}\r\n                  type=\"text\"\r\n                  placeholder=\"search City\"\r\n                  onKeyUp={handleCitySearch}\r\n                />\r\n                <AccordionDetails>\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {Cities &&\r\n                        Cities.map((cat) => (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) => handleChange(e, \"cities\", cat)}\r\n                                color=\"primary\"\r\n                                name=\"mobile\"\r\n                              />\r\n                            }\r\n                            label={cat.name}\r\n                            checked={\r\n                              selectedCities.filter((item) => item.id == cat.id)\r\n                                .length > 0\r\n                            }\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                  {Cities.length < 1 && selectedCities.length > 0 && (\r\n                    <FormControl\r\n                      component=\"fieldset\"\r\n                      className={classes.formControl}\r\n                    >\r\n                      <FormGroup>\r\n                        {selectedCities &&\r\n                          selectedCities.map((cat) => (\r\n                            <FormControlLabel\r\n                              control={\r\n                                <Checkbox\r\n                                  onChange={(e) =>\r\n                                    handleChange(e, \"cities\", cat)\r\n                                  }\r\n                                  color=\"primary\"\r\n                                />\r\n                              }\r\n                              checked={true}\r\n                              label={cat.name}\r\n                            />\r\n                          ))}\r\n                      </FormGroup>\r\n                    </FormControl>\r\n                  )}\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            )}\r\n            <Accordion\r\n              expanded={expanded === \"panel3\"}\r\n              onChange={handlePanelChange(\"panel3\")}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n              >\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                  College\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <input\r\n                className={classes.searchField}\r\n                type=\"text\"\r\n                placeholder=\"search College\"\r\n                onKeyUp={handleUniSearch}\r\n              />\r\n              <AccordionDetails>\r\n                <FormControl\r\n                  component=\"fieldset\"\r\n                  className={classes.formControl}\r\n                >\r\n                  <FormGroup>\r\n                    {universities &&\r\n                      universities.map((cat) => (\r\n                        <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              onChange={(e) =>\r\n                                handleChange(e, \"university\", cat)\r\n                              }\r\n                              color=\"primary\"\r\n                              name=\"mobile\"\r\n                            />\r\n                          }\r\n                          label={cat.name}\r\n                        />\r\n                      ))}\r\n                  </FormGroup>\r\n                </FormControl>\r\n\r\n                {universities.length < 1 && selecteduniversities.length > 0 && (\r\n                  <FormControl\r\n                    component=\"fieldset\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <FormGroup>\r\n                      {selecteduniversities &&\r\n                        selecteduniversities.map((cat) => (\r\n                          <FormControlLabel\r\n                            control={\r\n                              <Checkbox\r\n                                onChange={(e) =>\r\n                                  handleChange(e, \"university\", cat)\r\n                                }\r\n                                color=\"primary\"\r\n                              />\r\n                            }\r\n                            checked={true}\r\n                            label={cat.name}\r\n                          />\r\n                        ))}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </div>\r\n          <Button className={classes.filterBtn} onClick={filterSearch}>\r\n            Filter\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}