{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport ImageEditorRc from \"react-cropper-image-editor\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  Modal: {\n    '& .MuiDialog-paperWidthSm': {\n      height: '610px',\n      [theme.breakpoints.down('sm')]: {\n        height: '400px'\n      }\n    },\n    '& .cropper': {\n      width: '100%',\n      height: '400px',\n      [theme.breakpoints.down('sm')]: {\n        height: '200px'\n      }\n    },\n    '& .cropper ul': {\n      display: 'flex',\n      padding: '0',\n      listStyle: 'none'\n    },\n    '& .cropper ul li': {\n      marginRight: '1rem'\n    },\n    '& .cropper ul button': {\n      background: '#000000',\n      border: 'none',\n      borderRadius: '4px',\n      color: '#fff',\n      padding: '10px 15px',\n      height: '100%',\n      fontSize: '1rem'\n    }\n  }\n}));\nexport const ImageCropper = ({\n  open,\n  handleClose,\n  handleSave,\n  image\n}) => {\n  const classes = useStyles();\n\n  if (!image) {\n    return null;\n  }\n\n  return __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    className: classes.Modal,\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    id: \"alert-dialog-title\",\n    onClose: handleClose\n  }, \"Crop Profile Picture\"), __jsx(DialogContent, null, __jsx(ImageEditorRc // ref=\"cropper\"\n  , {\n    crossOrigin: \"true\" // boolean, set it to true if your image is cors protected or it is hosted on cloud like aws s3 image server\n    ,\n    src: image,\n    aspectRatio: 1 / 1,\n    className: \"cropper\",\n    guides: true,\n    rotatable: true,\n    saveImage: e => handleSave(e) // it has to catch the returned data and do it whatever you want\n    ,\n    responseType: \"blob/base64\"\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Close\")));\n};\nexport default ImageCropper;","map":null,"metadata":{},"sourceType":"module"}