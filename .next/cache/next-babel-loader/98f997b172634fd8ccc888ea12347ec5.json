{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\nimport EventNoteRoundedIcon from \"@material-ui/icons/EventNoteRounded\";\nimport LocalMallRoundedIcon from \"@material-ui/icons/LocalMallRounded\";\nimport LiveTvRoundedIcon from \"@material-ui/icons/LiveTvRounded\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport AuthIcon from \"../../components/Login_Register\";\nimport { Link } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    position: \"fixed\",\n    bottom: 0,\n    width: \"100%\",\n    height: '45px',\n    zIndex: 2,\n    background: \"#fdfdfd\",\n    boxShadow: \"0px -3px 20px rgba(0,0,0,0.1)\",\n    \"& button\": {\n      minWidth: \"60px\",\n      padding: \"3px 10px 3px\"\n    },\n    \"& a\": {\n      color: \"#908e8e\",\n      paddingTop: '5px',\n      paddingBottom: '5px'\n    },\n    \"& a.active\": {\n      color: \"var(--theme)\"\n    }\n  }\n});\nexport default function SimpleBottomNavigation() {\n  const router = useRouter();\n  const classes = useStyles();\n  const {\n    0: value,\n    1: setValue\n  } = useState('0');\n  useEffect(() => {\n    setValue(localStorage.getItem(\"botMenu\"));\n  });\n  const accessToken = useSelector(state => state.auth_user.accessToken);\n  const user = useSelector(state => state.auth_user.user);\n\n  const handleAddProduct = () => {\n    if (user.id) {\n      router.push(\"/profile\");\n    } else {\n      window.location.replace(\"/?signup=open\");\n    }\n  };\n\n  return __jsx(BottomNavigation, {\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n      localStorage.setItem(\"botMenu\", newValue);\n    },\n    showLabels: true,\n    className: classes.root\n  }, __jsx(BottomNavigationAction, {\n    component: Link,\n    href: \"/\",\n    label: \"Home\",\n    className: router.pathname == \"/\" ? \"active\" : \"\",\n    icon: __jsx(HomeRoundedIcon, null)\n  }), __jsx(BottomNavigationAction, {\n    component: Link,\n    href: \"/products?type=buy\",\n    label: \"Buy\",\n    className: router.pathname == \"/products\" ? \"active\" : \"\",\n    icon: __jsx(LocalMallRoundedIcon, null)\n  }), __jsx(BottomNavigationAction, {\n    component: Link,\n    href: \"/events\",\n    label: \"Events\",\n    className: router.pathname == \"/events\" ? \"active\" : \"\",\n    icon: __jsx(EventNoteRoundedIcon, null)\n  }), __jsx(BottomNavigationAction, {\n    component: Link,\n    href: \"/buy-request\",\n    label: \"Requests\",\n    className: router.pathname == \"/buy-request\" ? \"active\" : \"\",\n    icon: __jsx(FormatListBulletedIcon, null)\n  }), accessToken && __jsx(BottomNavigationAction, {\n    component: Link // href=\"/profile\"\n    ,\n    onClick: handleAddProduct,\n    label: \"My ads\",\n    className: router.pathname == \"/profile\" ? \"active\" : \"\",\n    icon: __jsx(LiveTvRoundedIcon, null)\n  }), !accessToken && __jsx(BottomNavigationAction, {\n    label: \"Login\",\n    icon: __jsx(AuthIcon, {\n      isMobile: true\n    })\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}