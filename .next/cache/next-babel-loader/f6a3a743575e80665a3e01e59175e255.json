{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, Container, Grid, Card, CardContent, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport SchoolIcon from \"@material-ui/icons/School\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport AttachmentOutlinedIcon from \"@material-ui/icons/AttachmentOutlined\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport Link from \"next/link\";\nimport PageLoader from \"../PageLoader\";\nimport { editProfile, updateProfileImg } from \"../../apis/auth-api\";\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2;\n\n  return _objectSpread(_objectSpread({}, commonStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up(\"sm\"), desktopStyles), _defineProperty(_objectSpread2, theme.breakpoints.between(\"xs\", \"sm\"), TabStyles), _defineProperty(_objectSpread2, theme.breakpoints.down(\"xs\"), mobileStyles), _objectSpread2));\n});\nimport { useDispatch } from \"react-redux\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { searchUniversities } from \"../../apis/global-api\";\nimport { authenticated } from \"../../redux/actions/auth\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport ImageCropper from \"../ImageCropper\";\nimport Router from \"next/router\";\nimport { isPhone } from \"../../Utils/helpers\";\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nvar EditProfile = function EditProfile(_ref) {\n  var user = _ref.user;\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setloading = _useState[1];\n\n  var _useState2 = useState(false),\n      searchloading = _useState2[0],\n      setsearchloading = _useState2[1];\n\n  var _useState3 = useState([]),\n      error = _useState3[0],\n      seterror = _useState3[1];\n\n  var _useState4 = useState(user.first_name),\n      firstname = _useState4[0],\n      setfirstname = _useState4[1];\n\n  var _useState5 = useState(user.last_name),\n      lastname = _useState5[0],\n      setlastname = _useState5[1];\n\n  var _useState6 = useState({\n    name: user.university ? user.university.name : \"\"\n  }),\n      university = _useState6[0],\n      setuniversity = _useState6[1];\n\n  var _useState7 = useState(user.phone_number),\n      phone_no = _useState7[0],\n      setphone_no = _useState7[1];\n\n  var _useState8 = useState([{\n    name: user.university ? user.university.name : \"\",\n    id: user.university ? user.university.id : \"\"\n  }]),\n      universities = _useState8[0],\n      setuniversities = _useState8[1];\n\n  var _useState9 = useState(user.branch),\n      branch = _useState9[0],\n      setbranch = _useState9[1];\n\n  var _useState10 = useState(false),\n      snackbar = _useState10[0],\n      setsnackbar = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      snackbarMsg = _useState11[0],\n      setsnackbarMsg = _useState11[1];\n\n  var _useState12 = useState(\"success\"),\n      snackbarType = _useState12[0],\n      setsnackbarType = _useState12[1];\n\n  var _useState13 = useState(false),\n      imageCrop = _useState13[0],\n      setimageCrop = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      imgFile = _useState14[0],\n      setimgFile = _useState14[1];\n\n  var dispatch = useDispatch();\n  var classes = useStyles();\n  useEffect(function () {\n    if (!user.is_complete) {\n      setsnackbar(true);\n      setsnackbarMsg(\"Please complete your profile before proceeding\");\n      setsnackbarType(\"error\");\n    }\n  }, []);\n\n  var updateProfile = function updateProfile() {\n    var university_id = universities.find(function (item) {\n      return item.name == university.name;\n    });\n    var data = {\n      first_name: firstname,\n      last_name: lastname,\n      university_id: university_id.id,\n      phone_number: phone_no,\n      branch: branch,\n      email: user.email\n    };\n\n    if (phone_no && !isPhone(phone_no)) {\n      seterror(['Phone number is not valid']);\n      return;\n    }\n\n    setloading(true);\n    editProfile(data, user.id).then(function (data) {\n      setloading(false);\n\n      if (data && data.error) {\n        seterror(data.msg);\n      } else if (data && data.body && data.body.user) {\n        dispatch(authenticated(data.body.user, data.body.user.api_token));\n        setsnackbar(true);\n        setsnackbarMsg(\"Updated successfully.\");\n        setsnackbarType(\"success\");\n        Router.push(\"/\");\n      } else {\n        setsnackbar(true);\n        setsnackbarMsg(\"There is some error.Please try again later\");\n        setsnackbarType(\"error\");\n      }\n    });\n  };\n\n  var updateformData = function updateformData(e, type) {\n    e.preventDefault();\n    eval(\"set\" + type + \"('\" + e.target.value + \"')\");\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e.target.value;\n    if (!value) return;\n    setsearchloading(true);\n    searchUniversities(value).then(function (response) {\n      setsearchloading(false);\n      setuniversities(response);\n    });\n  };\n\n  var handlesnackbar = function handlesnackbar() {\n    setsnackbar(!snackbar);\n  };\n\n  var handleProfileChange = function handleProfileChange(e) {\n    var files = e.target.files;\n\n    if (files.length) {\n      var tmppath = URL.createObjectURL(event.target.files[0]);\n      setimgFile(tmppath);\n      setimageCrop(true);\n    }\n  };\n\n  var saveProfileImage = function saveProfileImage(data) {\n    var formData = {\n      img: data,\n      api_token: user.api_token\n    };\n    updateProfileImg(formData).then(function (data) {\n      setimageCrop(false);\n      setimgFile(\"\");\n\n      if (data && data.error) {\n        seterror(data.msg);\n      } else if (data && data.body && data.body.user) {\n        dispatch(authenticated(data.body.user, data.body.user.api_token));\n        setsnackbar(true);\n        setsnackbarMsg(\"Updated successfully.\");\n        setsnackbarType(\"success\");\n      } else {\n        setsnackbar(true);\n        setsnackbarMsg(\"There is some error.Please try again later\");\n        setsnackbarType(\"error\");\n      }\n    });\n  };\n\n  return __jsx(\"section\", {\n    className: classes.section\n  }, __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(PageLoader, {\n    loading: loading\n  }), __jsx(ImageCropper, {\n    open: imageCrop,\n    handleSave: saveProfileImage,\n    handleClose: function handleClose() {\n      return setimageCrop(!imageCrop);\n    },\n    image: imgFile\n  }), __jsx(Snackbar, {\n    open: snackbar,\n    autoHideDuration: 6000,\n    onClose: handlesnackbar\n  }, __jsx(Alert, {\n    onClose: handlesnackbar,\n    severity: snackbarType\n  }, snackbarMsg)), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(Typography, {\n    className: classes.editTitle,\n    variant: \"h3\"\n  }, \"Edit Profile Details\")), __jsx(Grid, {\n    item: true,\n    lg: 3,\n    md: 3,\n    sm: 4,\n    xs: 12\n  }, __jsx(Box, {\n    className: classes.ProfileContainer\n  }, __jsx(Typography, {\n    variant: \"h5\"\n  }, \"Add image\"), __jsx(\"div\", {\n    className: classes.ProfileImage\n  }, __jsx(\"img\", {\n    src: user.profile_img ? user.profile_img : \"/static/images/placeholder.jpg\"\n  }), __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"file\",\n    className: classes.vHide,\n    onChange: handleProfileChange,\n    accept: \"image/*\"\n  }), __jsx(\"label\", {\n    htmlFor: \"file\"\n  }, __jsx(AttachmentOutlinedIcon, {\n    className: classes.uploadIcon\n  }))), __jsx(\"a\", {\n    href: \"/profile\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    className: classes.Button\n  }, \"View Profile\")))), __jsx(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 8,\n    xs: 12\n  }, __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(PersonIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"fname\",\n    label: \"First Name\",\n    value: firstname,\n    onChange: function onChange(e) {\n      return updateformData(e, \"firstname\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(PersonIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"lname\",\n    label: \"Last Name\",\n    value: lastname,\n    onChange: function onChange(e) {\n      return updateformData(e, \"lastname\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(MailOutlineIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"email\",\n    label: \"Email\",\n    value: user.email,\n    disabled: true\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(PhoneIphoneIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"number\",\n    label: \"Phone Number\",\n    value: phone_no,\n    onChange: function onChange(e) {\n      return updateformData(e, \"phone_no\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(SchoolIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(Autocomplete, {\n    required: true,\n    options: universities,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    getOptionSelected: function getOptionSelected(option, value) {\n      return option.name === value.name;\n    },\n    loading: searchloading,\n    value: university,\n    onInputChange: function onInputChange(e) {\n      return e && handleUniSearch(e);\n    } // onChange={(e) => updateformData(e, \"university\")}\n    ,\n    onSelect: function onSelect(e) {\n      return setuniversity({\n        name: e.target.value\n      });\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        label: \"Search College\",\n        InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n          endAdornment: __jsx(React.Fragment, null, searchloading ? __jsx(CircularProgress, {\n            color: \"primary\",\n            size: 20\n          }) : null, params.InputProps.endAdornment)\n        })\n      }));\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"branch\",\n    label: \"Course\",\n    value: branch,\n    onChange: function onChange(e) {\n      return updateformData(e, \"branch\");\n    }\n  })))), __jsx(Button, {\n    variant: \"contained\",\n    className: classes.Button,\n    onClick: updateProfile\n  }, \"Update\")), __jsx(\"div\", null, error.length > 0 && error.map(function (text, index) {\n    return __jsx(Typography, {\n      color: \"error\",\n      key: \"err-\".concat(index)\n    }, text);\n  }))))))));\n};\n\nexport default EditProfile;","map":null,"metadata":{},"sourceType":"module"}