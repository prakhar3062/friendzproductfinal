{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectedDialog } from '../../redux/actions/selectedDialog'; // import dialogs from '../../redux/reducers/dialogs';\n\nimport ConnectyCube from \"connectycube\";\n\nvar DialogBox = function DialogBox(_ref) {\n  var dialog = _ref.dialog,\n      auth = _ref.auth,\n      selectDialog = _ref.selectDialog,\n      dialogs = _ref.dialogs,\n      unread_messages_count = _ref.unread_messages_count;\n\n  var _useState = useState(''),\n      user = _useState[0],\n      setuser = _useState[1];\n\n  var _useState2 = useState(''),\n      msg = _useState2[0],\n      setmsg = _useState2[1];\n\n  var _useState3 = useState(''),\n      title = _useState3[0],\n      settitle = _useState3[1];\n\n  var _useState4 = useState(''),\n      time = _useState4[0],\n      settime = _useState4[1];\n\n  var _useState5 = useState(0),\n      unread = _useState5[0],\n      setunread = _useState5[1];\n\n  var selectedDialogVal = useSelector(function (state) {\n    return state.selectedDialog;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!dialog) {\n      return;\n    }\n\n    if (dialog.related_data) {\n      settitle(dialog.related_data.title);\n    } // if (unread_messages_count) {\n    //     setunread(unread_messages_count ? unread_messages_count:'')\n    // }\n\n\n    if (dialog.users.length) {\n      var _user = dialog.users.filter(function (item) {\n        return item.user.id != auth.id;\n      });\n\n      _user[0] && setuser(_user[0].user);\n    }\n\n    if (dialog.last_message) {\n      setmsg(dialog.last_message);\n    }\n\n    getUnread(dialog.connecty_dialog_id);\n  }, [dialog, unread_messages_count, dialogs]);\n\n  var getUnread = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dialog_id) {\n      var params;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              params = {\n                chat_dialog_ids: [dialog_id]\n              };\n              ConnectyCube.chat.message.unreadCount(params).then(function (result) {\n                setunread(result[dialog_id]);\n                console.log('resultunread', result[dialog_id], params);\n              })[\"catch\"](function (error) {});\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUnread(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var gotoChat = function gotoChat() {\n    if (!dialog) {\n      return;\n    } // dispatch(selectedDialog(dialog))\n\n\n    selectDialog(dialog, dialogs);\n  };\n\n  var isSelected = selectedDialogVal && dialog && selectedDialogVal.id == dialog.id;\n\n  if (!user) {\n    return null;\n  }\n\n  return __jsx(\"li\", {\n    onClick: gotoChat,\n    className: \"person \".concat(isSelected ? 'selected' : '')\n  }, __jsx(\"img\", {\n    src: user.profile_img ? user.profile_img : '/static/images/user-placeholder.png',\n    alt: \"\"\n  }), __jsx(\"div\", {\n    className: \"imgRight\"\n  }, __jsx(\"span\", {\n    className: \"name\"\n  }, user.first_name), __jsx(\"span\", {\n    className: \"time\"\n  }, msg.created_at ? moment(msg.created_at).fromNow() : ''), __jsx(\"span\", {\n    className: \"preview\"\n  }, title), unread > 0 && __jsx(\"span\", {\n    className: \"unread-box\"\n  }, __jsx(\"span\", {\n    className: \"unread\"\n  }, unread))));\n};\n\nexport default DialogBox;","map":null,"metadata":{},"sourceType":"module"}