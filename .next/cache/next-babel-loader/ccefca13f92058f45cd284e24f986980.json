{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, Typography, Button } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { searchCategories, searchUniversities, searchCities, searchEventCategories, getCities, getCategories, getEventCategories } from \"../../apis/global-api\";\nimport { commonStyles, desktopStyles, mobileStyles, TabStyles } from \"./styles\";\nimport { useRouter } from \"next/router\";\nimport TuneIcon from \"@material-ui/icons/Tune\";\nimport { SELECTED_FILTER_UNIVERSITY, PAGE_PRODUCTS, SELECTED_FILTER_RESET } from \"../../constants\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addVisited } from \"../../redux/actions/PageVisited\";\nvar useStyles = makeStyles(function (theme) {\n  var _objectSpread2;\n\n  return _objectSpread(_objectSpread({}, commonStyles), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, theme.breakpoints.up(\"sm\"), desktopStyles), _defineProperty(_objectSpread2, theme.breakpoints.between(\"xs\", \"sm\"), TabStyles), _defineProperty(_objectSpread2, theme.breakpoints.down(\"xs\"), mobileStyles), _objectSpread2));\n});\n\nfunction Sidebar(_ref) {\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"\" : _ref$type,\n      _ref$showFilterBtn = _ref.showFilterBtn,\n      showFilterBtn = _ref$showFilterBtn === void 0 ? false : _ref$showFilterBtn,\n      m_uni = _ref.m_uni,\n      query = _ref.query;\n\n  var _useState = useState([]),\n      categories = _useState[0],\n      setcategories = _useState[1];\n\n  var _useState2 = useState([]),\n      selectedCategories = _useState2[0],\n      setselectedCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      universities = _useState3[0],\n      setuniversities = _useState3[1];\n\n  var _useState4 = useState([]),\n      selecteduniversities = _useState4[0],\n      setselecteduniversities = _useState4[1];\n\n  var _useState5 = useState([]),\n      Cities = _useState5[0],\n      setCities = _useState5[1];\n\n  var _useState6 = useState([]),\n      selectedCities = _useState6[0],\n      setselectedCities = _useState6[1];\n\n  var _useState7 = useState([]),\n      producttype = _useState7[0],\n      setproducttype = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      uniMsg = _useState8[0],\n      setUniMsg = _useState8[1];\n\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var pageVisited = useSelector(function (state) {\n    return state.pageVisited;\n  });\n\n  var handleTypeChange = function handleTypeChange(x) {\n    setproducttype(producttype.includes(x) ? producttype.filter(function (c) {\n      return c !== x;\n    }) : [].concat(_toConsumableArray(producttype), [x]));\n  };\n\n  useEffect(function () {\n    if (type == \"events\") {\n      getEventCategories().then(function (response) {\n        setcategories(response.categories.data);\n      });\n    } else {\n      getCategories().then(function (response) {\n        setcategories(response.categories.data);\n      });\n    }\n  }, []);\n  useEffect(function () {\n    console.log(\"query\", query);\n    setshowsidebar(!showFilterBtn); // console.log('pageVisited',pageVisited.includes(PAGE_PRODUCTS))\n\n    var m_city = query.m_city,\n        m_cat = query.m_cat,\n        type = query.type;\n\n    if (m_uni) {\n      if (!selecteduniversities.length && m_uni) {\n        var now = new Date();\n        searchUniversities(m_uni).then(function (response) {\n          setselecteduniversities(response);\n          setExpanded(\"panel3\");\n          var data = {\n            response: response,\n            expiry: now.getTime()\n          };\n          localStorage.setItem(SELECTED_FILTER_UNIVERSITY, JSON.stringify(data));\n        });\n      }\n    }\n\n    if (!selectedCities.length && m_city) {\n      searchCities(m_city).then(function (response) {\n        setselectedCities(response.data);\n        setExpanded(\"panel2\");\n      });\n    }\n\n    if (!selectedCategories.length && m_cat) {\n      searchCategories(m_cat).then(function (response) {\n        setselectedCategories(response.data);\n        setExpanded(\"panel1\");\n      });\n    }\n\n    if (!producttype.length && type) {\n      handleTypeChange(type);\n    }\n  }, [m_uni]);\n\n  var handleCatSearch = function handleCatSearch(e) {\n    console.log(type);\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setcategories([]);\n      return;\n    }\n\n    if (type == \"events\") {\n      searchEventCategories(value).then(function (response) {\n        setcategories(response.data);\n      });\n    } else {\n      searchCategories(value).then(function (response) {\n        setcategories(response.data);\n      });\n    }\n  };\n\n  var handleUniSearch = function handleUniSearch(e) {\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setuniversities([]);\n      return;\n    }\n\n    searchUniversities(value).then(function (response) {\n      setuniversities(response);\n    });\n  };\n\n  var handleCitySearch = function handleCitySearch(e) {\n    var value = e ? e.target.value : \"\";\n\n    if (!value) {\n      setCities([]);\n      return;\n    }\n\n    searchCities(value).then(function (response) {\n      console.log(\"college\", response);\n      setCities(response.data);\n    });\n  };\n\n  var _useState9 = useState([]),\n      state = _useState9[0],\n      setState = _useState9[1];\n\n  var handleChange = function handleChange(event, type, val) {\n    console.log(event.target.checked);\n    console.log(type);\n    console.log(val);\n\n    if (type == \"category\") {\n      if (selectedCategories.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselectedCategories(selectedCategories.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselectedCategories([].concat(_toConsumableArray(selectedCategories), [val]));\n      }\n\n      console.log(selectedCategories);\n    }\n\n    if (type == \"cities\") {\n      if (selectedCities.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselectedCities(selectedCities.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselectedCities([].concat(_toConsumableArray(selectedCities), [val]));\n      }\n    }\n\n    if (type == \"university\") {\n      if (selecteduniversities.some(function (item) {\n        return item.id === val.id;\n      })) {\n        setselecteduniversities(selecteduniversities.filter(function (c) {\n          return c.id !== val.id;\n        }));\n      } else {\n        setselecteduniversities([].concat(_toConsumableArray(selecteduniversities), [val]));\n      }\n    } // setState({ ...state, [event.target.name]: event.target.checked });\n\n  };\n\n  var _React$useState = React.useState(\"panel1\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var handlePanelChange = function handlePanelChange(panel) {\n    return function (event, newExpanded) {\n      setExpanded(newExpanded ? panel : false);\n    };\n  };\n\n  var mobile = state.mobile,\n      sports = state.sports,\n      cars = state.cars;\n  var classes = useStyles();\n\n  var filterSearch = function filterSearch() {\n    var cities = selectedCities.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    var categories = selectedCategories.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    var universities = selecteduniversities.map(function (v) {\n      return v.name;\n    }).join(\",\");\n    console.log(cities, categories, universities);\n\n    if (!universities.length) {\n      localStorage.setItem(SELECTED_FILTER_RESET, true);\n    }\n\n    var p_type = producttype.length == 1 ? producttype[0] : \"\";\n    var query = \"?m_city=\" + cities + \"&m_cat=\" + categories + \"&m_uni=\" + universities + \"&type=\" + p_type;\n    var reqquery = \"?m_uni=\" + universities;\n\n    if (type == \"events\") {\n      window.location.replace(\"/events\" + query); // router.push(\"/events\" + query);\n    } else if (type == \"requests\") {\n      window.location.replace(\"/buy-request\" + reqquery); // router.push(\"/events\" + query);\n    } else {\n      window.location.replace(\"/products\" + query); // router.push(\"/products\" + query);\n    }\n  };\n\n  var toggle = function toggle() {\n    setshowsidebar(!showsidebar);\n  };\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showsidebar = _React$useState4[0],\n      setshowsidebar = _React$useState4[1]; // const [showsidebar, setshowsidebar] = React.useState(!showFilterBtn);\n\n\n  return __jsx(React.Fragment, null, showFilterBtn && __jsx(Button, {\n    className: classes.fliterBtn,\n    onClick: toggle\n  }, __jsx(TuneIcon, null), \"Filter\"), showsidebar && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.heading\n  }, \"FILTER\"), type != \"events\" && type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel0\",\n    onChange: handlePanelChange(\"panel0\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel0a-content\",\n    id: \"panel0a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Type\")), __jsx(Checkbox, {\n    value: \"buy\",\n    checked: producttype.includes(\"buy\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: function onChange() {\n      return handleTypeChange(\"buy\");\n    }\n  }), \" \", \"Buy\", __jsx(Checkbox, {\n    value: \"rental\",\n    checked: producttype.includes(\"rental\"),\n    inputProps: {\n      \"aria-label\": \"Checkbox A\"\n    },\n    onChange: function onChange() {\n      return handleTypeChange(\"rental\");\n    }\n  }), \"Rent\"), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel1\",\n    onChange: handlePanelChange(\"panel1\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"Category\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search Categoty\",\n    onKeyUp: handleCatSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, categories && categories.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      key: cat.id,\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"category\", cat);\n        },\n        color: \"primary\"\n      }),\n      label: cat.name,\n      checked: selectedCategories.filter(function (item) {\n        return item.id == cat.id;\n      }).length > 0\n    });\n  }))), categories && categories.length < 1 && selectedCategories.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCategories && selectedCategories.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      key: cat.id,\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"category\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  }))))), type != \"requests\" && __jsx(Accordion, {\n    expanded: expanded === \"panel2\",\n    onChange: handlePanelChange(\"panel2\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"City\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search City\",\n    onKeyUp: handleCitySearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, Cities && Cities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"cities\", cat);\n        },\n        color: \"primary\",\n        name: \"mobile\"\n      }),\n      label: cat.name,\n      checked: selectedCities.filter(function (item) {\n        return item.id == cat.id;\n      }).length > 0\n    });\n  }))), Cities.length < 1 && selectedCities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selectedCities && selectedCities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"cities\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  }))))), __jsx(Accordion, {\n    expanded: expanded === \"panel3\",\n    onChange: handlePanelChange(\"panel3\")\n  }, __jsx(AccordionSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null),\n    \"aria-controls\": \"panel1a-content\",\n    id: \"panel1a-header\"\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }, \"College\")), __jsx(\"input\", {\n    className: classes.searchField,\n    type: \"text\",\n    placeholder: \"search College\",\n    onKeyUp: handleUniSearch\n  }), __jsx(AccordionDetails, null, __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, universities && universities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"university\", cat);\n        },\n        color: \"primary\",\n        name: \"mobile\"\n      }),\n      label: cat.name\n    });\n  }))), universities.length < 1 && selecteduniversities.length > 0 && __jsx(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl\n  }, __jsx(FormGroup, null, selecteduniversities && selecteduniversities.map(function (cat) {\n    return __jsx(FormControlLabel, {\n      control: __jsx(Checkbox, {\n        onChange: function onChange(e) {\n          return handleChange(e, \"university\", cat);\n        },\n        color: \"primary\"\n      }),\n      checked: true,\n      label: cat.name\n    });\n  })))))), __jsx(Button, {\n    className: classes.filterBtn,\n    onClick: filterSearch\n  }, \"Filter\")));\n}\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}