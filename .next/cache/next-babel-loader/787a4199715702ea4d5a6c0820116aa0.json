{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ImageEditorRc from \"react-cropper-image-editor\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    Modal: {\n      '& .MuiDialog-paperWidthSm': _defineProperty({\n        height: '610px'\n      }, theme.breakpoints.down('sm'), {\n        height: '400px'\n      }),\n      '& .cropper': _defineProperty({\n        width: '100%',\n        height: '400px'\n      }, theme.breakpoints.down('sm'), {\n        height: '200px'\n      }),\n      '& .cropper ul': {\n        display: 'flex',\n        padding: '0',\n        listStyle: 'none'\n      },\n      '& .cropper ul li': {\n        marginRight: '1rem'\n      },\n      '& .cropper ul button': {\n        background: '#000000',\n        border: 'none',\n        borderRadius: '4px',\n        color: '#fff',\n        padding: '10px 15px',\n        height: '100%',\n        fontSize: '1rem'\n      }\n    }\n  };\n});\nexport var ImageCropper = function ImageCropper(_ref) {\n  var open = _ref.open,\n      handleClose = _ref.handleClose,\n      handleSave = _ref.handleSave,\n      image = _ref.image;\n  var classes = useStyles();\n\n  if (!image) {\n    return null;\n  }\n\n  return __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    className: classes.Modal,\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    id: \"alert-dialog-title\",\n    onClose: handleClose\n  }, \"Crop Profile Picture\"), __jsx(DialogContent, null, __jsx(ImageEditorRc // ref=\"cropper\"\n  , {\n    crossOrigin: \"true\" // boolean, set it to true if your image is cors protected or it is hosted on cloud like aws s3 image server\n    ,\n    src: image,\n    aspectRatio: 1 / 1,\n    className: \"cropper\",\n    guides: true,\n    rotatable: true,\n    saveImage: function saveImage(e) {\n      return handleSave(e);\n    } // it has to catch the returned data and do it whatever you want\n    ,\n    responseType: \"blob/base64\"\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Close\")));\n};\nexport default ImageCropper;","map":null,"metadata":{},"sourceType":"module"}