{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../Layout\";\nimport { Card, CardContent, TextField, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport LocalOfferIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { sendFeedbackMessage } from \"./../../../src/apis/global-api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { isEmail, isPhone } from \"./../../../src/Utils/helpers\";\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    section: {\n      padding: \"5rem 0\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    },\n    form: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    pdTitle: {\n      marginBottom: \"2rem\"\n    },\n    card: {\n      boxShadow: \"none\",\n      border: \"#ccc solid 1px\",\n      height: \"100%\",\n      background: \"rgba(255, 255, 255, 0.6)\",\n      \"&::before\": {\n        content: '\"\"',\n        background: \"url(/static/images/circleCenter.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        top: \"55%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        height: \"540px\",\n        width: \"540px\",\n        position: \"absolute\",\n        zIndex: \"-1\"\n      },\n      \"&::after\": {\n        content: '\"\"',\n        background: \"url(/static/images/circleCenter.svg)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        bottom: \"-15rem\",\n        left: \"-25rem\",\n        height: \"50rem\",\n        width: \"50rem\",\n        position: \"absolute\",\n        zIndex: \"-1\"\n      }\n    },\n    cardBody: {\n      padding: \"2rem !important\"\n    },\n    formInput: _defineProperty({\n      marginBottom: \"2rem\",\n      width: \"50%\"\n    }, theme.breakpoints.down(\"sm\"), {\n      width: \"100%\"\n    }),\n    formInputFullWidth: {\n      width: \"100%\"\n    },\n    formInputField: {\n      width: \"80%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      }\n    },\n    formInputFieldFull: _defineProperty({}, theme.breakpoints.up(\"sm\"), {\n      width: \"90%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      },\n      \"& textarea\": {\n        width: \"100%\",\n        border: \"none\",\n        borderBottom: \"solid 1px #ccc\",\n        height: \"100px\"\n      },\n      \"& textarea:focus\": {\n        outline: \"none\",\n        borderBottom: \"solid 1px #FD8118\"\n      }\n    }),\n    formControl: {\n      width: \"100%\"\n    },\n    Button: {\n      width: \"80%\",\n      height: \"50px\",\n      marginTop: \"1rem\",\n      backgroundColor: \"#FD8118\",\n      color: \"#fff\",\n      fontSize: \"1rem\",\n      boxShadow: \"none\",\n      maxWidth: \"200px\"\n    },\n    Images: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      \"& img\": {\n        width: \"125px\",\n        height: \"125px\",\n        objectFit: \"contain\",\n        marginRight: \"10px\",\n        marginBottom: \"10px\",\n        border: \"solid 1px #333 \"\n      },\n      \"& video\": {\n        width: \"125px\",\n        height: \"125px\",\n        objectFit: \"contain\",\n        marginRight: \"10px\",\n        marginBottom: \"10px\",\n        border: \"solid 1px #333 \"\n      }\n    },\n    AddBtn: {\n      border: \"solid 1px #333\",\n      width: \"125px\",\n      height: \"125px\",\n      display: \"grid\"\n    },\n    dialogeCustom: {\n      \"& .MuiGrid-spacing-xs-8\": {\n        width: \"100%\",\n        margin: \"0\"\n      }\n    }\n  };\n});\nexport default function FeedbackForm(_ref) {\n  var user = _ref.user,\n      _ref$formtype = _ref.formtype,\n      formtype = _ref$formtype === void 0 ? \"add\" : _ref$formtype,\n      _ref$product = _ref.product,\n      product = _ref$product === void 0 ? {} : _ref$product;\n  var classes = useStyles();\n\n  var _useState = useState(),\n      name = _useState[0],\n      setname = _useState[1];\n\n  var _useState2 = useState(),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(),\n      phone = _useState3[0],\n      setphone = _useState3[1];\n\n  var _useState4 = useState(),\n      message = _useState4[0],\n      setmessage = _useState4[1];\n\n  var _useState5 = useState({}),\n      errs = _useState5[0],\n      seterrs = _useState5[1];\n\n  var _useState6 = useState(false),\n      backdrop = _useState6[0],\n      setbackdrop = _useState6[1];\n\n  var _useState7 = useState([]),\n      formerrs = _useState7[0],\n      setformerrs = _useState7[1];\n\n  var _useState8 = useState(false),\n      snackbar = _useState8[0],\n      setsnackbar = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      snackbarMsg = _useState9[0],\n      setsnackbarMsg = _useState9[1];\n\n  var _useState10 = useState(\"success\"),\n      snackbarType = _useState10[0],\n      setsnackbarType = _useState10[1];\n\n  useEffect(function () {\n    if (product.images) {\n      var updatedImages = [];\n      var updatedImagesInfo = [];\n      product.images.map(function (fileData, index) {\n        updatedImages = updatedImages.concat(fileData.base64_data);\n        updatedImagesInfo = updatedImagesInfo.concat({\n          type: fileData.type,\n          data: fileData.link\n        });\n\n        if (index + 1 == product.images.length) {\n          setfiles(updatedImages);\n          setfilesInfo(updatedImagesInfo);\n        }\n      });\n    }\n  }, [product]);\n\n  var updateformData = function updateformData(e, type) {\n    e.preventDefault();\n    eval(\"set\" + type + \"('\" + e.target.value + \"')\");\n  };\n\n  var checkValidation = function checkValidation() {\n    setformerrs(\"\");\n\n    if (!name || !email || !message) {\n      setformerrs([\"All fields are required\"]);\n      return false;\n    }\n\n    if (!isEmail(email)) {\n      setformerrs([\"Email not valid\"]);\n      return false;\n    }\n\n    if (!isPhone(phone)) {\n      setformerrs([\"Phone not valid\"]);\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e && e.preventDefault();\n    var is_valid = checkValidation();\n\n    if (!is_valid) {\n      return;\n    }\n\n    setbackdrop(true);\n    var data = {\n      name: name,\n      email: email,\n      message: message,\n      phone: phone\n    };\n    sendFeedbackMessage(data).then(function (response) {\n      setbackdrop(false); //   if (response.error) {\n      //     setformerrs(response.msg);\n      //     setsnackbar(true);\n      //     setsnackbarMsg(\"Form not submitted.Try again later\");\n      //     setsnackbarType(\"error\");\n      //   } else {\n\n      setsnackbar(true);\n      setsnackbarMsg(\"Feedback sent successfully\");\n      setsnackbarType(\"success\"); //   setname(\"\");\n      //   setemail(\"\");\n      //   setmessage(\"\");\n      //   window.location.replace(\"/\");\n      //   }\n    });\n  };\n\n  var handlesnackbar = function handlesnackbar() {\n    setsnackbar(!snackbar);\n  };\n\n  return __jsx(Layout, null, __jsx(Snackbar, {\n    open: snackbar,\n    autoHideDuration: 6000,\n    onClose: handlesnackbar\n  }, __jsx(Alert, {\n    onClose: handlesnackbar,\n    severity: snackbarType\n  }, snackbarMsg)), __jsx(\"section\", {\n    className: classes.section\n  }, backdrop && __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: backdrop // onClick={handleClose}\n\n  }, __jsx(CircularProgress, {\n    color: \"inherit\"\n  })), __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 8,\n    xs: 12,\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginBottom: \"1rem\"\n    }\n  }, \"Your Feedback\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(SubtitlesIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"name\",\n    label: \"Name\",\n    value: name,\n    onChange: function onChange(e) {\n      return updateformData(e, \"name\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(LocalOfferIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"email\",\n    label: \"Email\",\n    value: email,\n    type: \"email\",\n    onChange: function onChange(e) {\n      return updateformData(e, \"email\");\n    }\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(PhoneIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"phone\",\n    label: \"Phone\",\n    value: phone,\n    type: \"phone\",\n    onChange: function onChange(e) {\n      return updateformData(e, \"phone\");\n    }\n  })))), __jsx(\"div\", {\n    className: \"\".concat(classes.formInput, \" \").concat(classes.formInputFullWidth)\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: \"\".concat(classes.formInputField, \" \").concat(classes.formInputFieldFull)\n  }, __jsx(\"textarea\", {\n    id: \"message\",\n    label: \"Message\",\n    value: message,\n    placeholder: \"Message\",\n    onChange: function onChange(e) {\n      return updateformData(e, \"message\");\n    }\n  })))), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.Button\n  }, \"Submit\")), formerrs.length > 0 && formerrs.map(function (msg, index) {\n    return __jsx(Typography, {\n      color: \"error\",\n      key: \"error\".concat(index)\n    }, msg);\n  }))))))));\n}","map":null,"metadata":{},"sourceType":"module"}