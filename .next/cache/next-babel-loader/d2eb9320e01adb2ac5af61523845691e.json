{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../src/Layout\";\nimport { Card, CardContent, TextField, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport LocalOfferIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { sendFeedbackMessage } from \"../../src/apis/global-api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { isEmail, isPhone } from \"../../src/Utils/helpers\";\n\nfunction Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n}\n\nconst useStyles = makeStyles(theme => ({\n  section: {\n    padding: \"5rem 0\",\n    position: \"relative\",\n    overflow: \"hidden\"\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  pdTitle: {\n    marginBottom: \"2rem\"\n  },\n  card: {\n    boxShadow: \"none\",\n    border: \"#ccc solid 1px\",\n    height: \"100%\",\n    background: \"rgba(255, 255, 255, 0.6)\",\n    \"&::before\": {\n      content: '\"\"',\n      background: \"url(/static/images/circleCenter.svg)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      top: \"55%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      height: \"540px\",\n      width: \"540px\",\n      position: \"absolute\",\n      zIndex: \"-1\"\n    },\n    \"&::after\": {\n      content: '\"\"',\n      background: \"url(/static/images/circleCenter.svg)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      bottom: \"-15rem\",\n      left: \"-25rem\",\n      height: \"50rem\",\n      width: \"50rem\",\n      position: \"absolute\",\n      zIndex: \"-1\"\n    }\n  },\n  cardBody: {\n    padding: \"2rem !important\"\n  },\n  formInput: {\n    marginBottom: \"2rem\",\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n  formInputFullWidth: {\n    width: \"100%\"\n  },\n  formInputField: {\n    width: \"80%\",\n    \"& .MuiTextField-root\": {\n      width: \"100%\"\n    }\n  },\n  formInputFieldFull: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"90%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      },\n      \"& textarea\": {\n        width: \"100%\",\n        border: \"none\",\n        borderBottom: \"solid 1px #ccc\",\n        height: \"100px\"\n      },\n      \"& textarea:focus\": {\n        outline: \"none\",\n        borderBottom: \"solid 1px #FD8118\"\n      }\n    }\n  },\n  formControl: {\n    width: \"100%\"\n  },\n  Button: {\n    width: \"80%\",\n    height: \"50px\",\n    marginTop: \"1rem\",\n    backgroundColor: \"#FD8118\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    boxShadow: \"none\",\n    maxWidth: \"200px\"\n  },\n  Images: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& img\": {\n      width: \"125px\",\n      height: \"125px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      border: \"solid 1px #333 \"\n    },\n    \"& video\": {\n      width: \"125px\",\n      height: \"125px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      border: \"solid 1px #333 \"\n    }\n  },\n  AddBtn: {\n    border: \"solid 1px #333\",\n    width: \"125px\",\n    height: \"125px\",\n    display: \"grid\"\n  },\n  dialogeCustom: {\n    \"& .MuiGrid-spacing-xs-8\": {\n      width: \"100%\",\n      margin: \"0\"\n    }\n  }\n}));\nexport default function FeedbackForm({\n  user,\n  formtype = \"add\",\n  product = {}\n}) {\n  const classes = useStyles();\n  const {\n    0: name,\n    1: setname\n  } = useState();\n  const {\n    0: email,\n    1: setemail\n  } = useState();\n  const {\n    0: phone,\n    1: setphone\n  } = useState();\n  const {\n    0: message,\n    1: setmessage\n  } = useState();\n  const {\n    0: errs,\n    1: seterrs\n  } = useState({});\n  const {\n    0: backdrop,\n    1: setbackdrop\n  } = useState(false);\n  const {\n    0: formerrs,\n    1: setformerrs\n  } = useState([]);\n  const {\n    0: snackbar,\n    1: setsnackbar\n  } = useState(false);\n  const {\n    0: snackbarMsg,\n    1: setsnackbarMsg\n  } = useState(\"\");\n  const {\n    0: snackbarType,\n    1: setsnackbarType\n  } = useState(\"success\");\n  useEffect(() => {\n    if (product.images) {\n      let updatedImages = [];\n      let updatedImagesInfo = [];\n      product.images.map((fileData, index) => {\n        updatedImages = updatedImages.concat(fileData.base64_data);\n        updatedImagesInfo = updatedImagesInfo.concat({\n          type: fileData.type,\n          data: fileData.link\n        });\n\n        if (index + 1 == product.images.length) {\n          setfiles(updatedImages);\n          setfilesInfo(updatedImagesInfo);\n        }\n      });\n    }\n  }, [product]);\n\n  const updateformData = (e, type) => {\n    e.preventDefault();\n    eval(\"set\" + type + \"('\" + e.target.value + \"')\");\n  };\n\n  const checkValidation = () => {\n    setformerrs(\"\");\n\n    if (!name || !email || !message) {\n      setformerrs([\"All fields are required\"]);\n      return false;\n    }\n\n    if (!isEmail(email)) {\n      setformerrs([\"Email not valid\"]);\n      return false;\n    }\n\n    if (!isPhone(phone)) {\n      setformerrs([\"Phone not valid\"]);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = e => {\n    e && e.preventDefault();\n    let is_valid = checkValidation();\n\n    if (!is_valid) {\n      return;\n    }\n\n    setbackdrop(true);\n    let data = {\n      name: name,\n      email: email,\n      message: message,\n      phone: phone\n    };\n    sendFeedbackMessage(data).then(response => {\n      setbackdrop(false); //   if (response.error) {\n      //     setformerrs(response.msg);\n      //     setsnackbar(true);\n      //     setsnackbarMsg(\"Form not submitted.Try again later\");\n      //     setsnackbarType(\"error\");\n      //   } else {\n\n      setsnackbar(true);\n      setsnackbarMsg(\"Feedback sent successfully\");\n      setsnackbarType(\"success\"); //   setname(\"\");\n      //   setemail(\"\");\n      //   setmessage(\"\");\n      //   window.location.replace(\"/\");\n      //   }\n    });\n  };\n\n  const handlesnackbar = () => {\n    setsnackbar(!snackbar);\n  };\n\n  return __jsx(Layout, null, __jsx(Snackbar, {\n    open: snackbar,\n    autoHideDuration: 6000,\n    onClose: handlesnackbar\n  }, __jsx(Alert, {\n    onClose: handlesnackbar,\n    severity: snackbarType\n  }, snackbarMsg)), __jsx(\"section\", {\n    className: classes.section\n  }, backdrop && __jsx(Backdrop, {\n    className: classes.backdrop,\n    open: backdrop // onClick={handleClose}\n\n  }, __jsx(CircularProgress, {\n    color: \"inherit\"\n  })), __jsx(Container, {\n    maxWidth: \"xl\"\n  }, __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    lg: 9,\n    md: 9,\n    sm: 8,\n    xs: 12,\n    style: {\n      margin: \"auto\"\n    }\n  }, __jsx(Card, {\n    className: classes.card\n  }, __jsx(CardContent, {\n    className: classes.cardBody\n  }, __jsx(Typography, {\n    variant: \"h4\",\n    style: {\n      marginBottom: \"1rem\"\n    }\n  }, \"Your Feedback\"), __jsx(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(SubtitlesIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"name\",\n    label: \"Name\",\n    value: name,\n    onChange: e => updateformData(e, \"name\")\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(LocalOfferIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"email\",\n    label: \"Email\",\n    value: email,\n    type: \"email\",\n    onChange: e => updateformData(e, \"email\")\n  })))), __jsx(\"div\", {\n    className: classes.formInput\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(PhoneIcon, null)), __jsx(Grid, {\n    item: true,\n    className: classes.formInputField\n  }, __jsx(TextField, {\n    id: \"phone\",\n    label: \"Phone\",\n    value: phone,\n    type: \"phone\",\n    onChange: e => updateformData(e, \"phone\")\n  })))), __jsx(\"div\", {\n    className: `${classes.formInput} ${classes.formInputFullWidth}`\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    alignItems: \"flex-end\"\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(DetailsIcon, null)), __jsx(Grid, {\n    item: true,\n    className: `${classes.formInputField} ${classes.formInputFieldFull}`\n  }, __jsx(\"textarea\", {\n    id: \"message\",\n    label: \"Message\",\n    value: message,\n    placeholder: \"Message\",\n    onChange: e => updateformData(e, \"message\")\n  })))), __jsx(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    className: classes.Button\n  }, \"Submit\")), formerrs.length > 0 && formerrs.map((msg, index) => __jsx(Typography, {\n    color: \"error\",\n    key: `error${index}`\n  }, msg)))))))));\n}","map":{"version":3,"sources":["E:/jay/frontend/src/pages/post/feedback.js"],"names":["React","useState","useEffect","makeStyles","Layout","Card","CardContent","TextField","Button","Container","Grid","Typography","LocalOfferIcon","PhoneIcon","SubtitlesIcon","DetailsIcon","Backdrop","CircularProgress","sendFeedbackMessage","Snackbar","MuiAlert","isEmail","isPhone","Alert","props","useStyles","theme","section","padding","position","overflow","form","display","flexWrap","pdTitle","marginBottom","card","boxShadow","border","height","background","content","backgroundRepeat","backgroundSize","top","left","transform","width","zIndex","bottom","cardBody","formInput","breakpoints","down","formInputFullWidth","formInputField","formInputFieldFull","up","borderBottom","outline","formControl","marginTop","backgroundColor","color","fontSize","maxWidth","Images","objectFit","marginRight","AddBtn","dialogeCustom","margin","FeedbackForm","user","formtype","product","classes","name","setname","email","setemail","phone","setphone","message","setmessage","errs","seterrs","backdrop","setbackdrop","formerrs","setformerrs","snackbar","setsnackbar","snackbarMsg","setsnackbarMsg","snackbarType","setsnackbarType","images","updatedImages","updatedImagesInfo","map","fileData","index","concat","base64_data","type","data","link","length","setfiles","setfilesInfo","updateformData","e","preventDefault","eval","target","value","checkValidation","handleSubmit","is_valid","then","response","handlesnackbar","msg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../src/Layout\";\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Container,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport LocalOfferIcon from \"@material-ui/icons/Email\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport SubtitlesIcon from \"@material-ui/icons/Subtitles\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { sendFeedbackMessage } from \"../../src/apis/global-api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { isEmail, isPhone } from \"../../src/Utils/helpers\";\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst useStyles = makeStyles((theme) => ({\n  section: {\n    padding: \"5rem 0\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  pdTitle: {\n    marginBottom: \"2rem\",\n  },\n  card: {\n    boxShadow: \"none\",\n    border: \"#ccc solid 1px\",\n    height: \"100%\",\n    background: \"rgba(255, 255, 255, 0.6)\",\n    \"&::before\": {\n      content: '\"\"',\n      background: \"url(/static/images/circleCenter.svg)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      top: \"55%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      height: \"540px\",\n      width: \"540px\",\n      position: \"absolute\",\n      zIndex: \"-1\",\n    },\n    \"&::after\": {\n      content: '\"\"',\n      background: \"url(/static/images/circleCenter.svg)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n      bottom: \"-15rem\",\n      left: \"-25rem\",\n      height: \"50rem\",\n      width: \"50rem\",\n      position: \"absolute\",\n      zIndex: \"-1\",\n    },\n  },\n  cardBody: {\n    padding: \"2rem !important\",\n  },\n  formInput: {\n    marginBottom: \"2rem\",\n    width: \"50%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  formInputFullWidth: {\n    width: \"100%\",\n  },\n  formInputField: {\n    width: \"80%\",\n    \"& .MuiTextField-root\": {\n      width: \"100%\",\n    },\n  },\n  formInputFieldFull: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"90%\",\n      \"& .MuiTextField-root\": {\n        width: \"100%\",\n      },\n      \"& textarea\": {\n        width: \"100%\",\n        border: \"none\",\n        borderBottom: \"solid 1px #ccc\",\n        height: \"100px\",\n      },\n      \"& textarea:focus\": {\n        outline: \"none\",\n        borderBottom: \"solid 1px #FD8118\",\n      },\n    },\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  Button: {\n    width: \"80%\",\n    height: \"50px\",\n    marginTop: \"1rem\",\n    backgroundColor: \"#FD8118\",\n    color: \"#fff\",\n    fontSize: \"1rem\",\n    boxShadow: \"none\",\n    maxWidth: \"200px\",\n  },\n  Images: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& img\": {\n      width: \"125px\",\n      height: \"125px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      border: \"solid 1px #333 \",\n    },\n    \"& video\": {\n      width: \"125px\",\n      height: \"125px\",\n      objectFit: \"contain\",\n      marginRight: \"10px\",\n      marginBottom: \"10px\",\n      border: \"solid 1px #333 \",\n    },\n  },\n  AddBtn: {\n    border: \"solid 1px #333\",\n    width: \"125px\",\n    height: \"125px\",\n    display: \"grid\",\n  },\n  dialogeCustom: {\n    \"& .MuiGrid-spacing-xs-8\": {\n      width: \"100%\",\n      margin: \"0\",\n    },\n  },\n}));\n\nexport default function FeedbackForm({ user, formtype = \"add\", product = {} }) {\n  const classes = useStyles();\n  const [name, setname] = useState();\n  const [email, setemail] = useState();\n  const [phone, setphone] = useState();\n  const [message, setmessage] = useState();\n\n  const [errs, seterrs] = useState({});\n\n  const [backdrop, setbackdrop] = useState(false);\n  const [formerrs, setformerrs] = useState([]);\n  const [snackbar, setsnackbar] = useState(false);\n  const [snackbarMsg, setsnackbarMsg] = useState(\"\");\n  const [snackbarType, setsnackbarType] = useState(\"success\");\n\n  useEffect(() => {\n    if (product.images) {\n      let updatedImages = [];\n      let updatedImagesInfo = [];\n      product.images.map((fileData, index) => {\n        updatedImages = updatedImages.concat(fileData.base64_data);\n        updatedImagesInfo = updatedImagesInfo.concat({\n          type: fileData.type,\n          data: fileData.link,\n        });\n\n        if (index + 1 == product.images.length) {\n          setfiles(updatedImages);\n          setfilesInfo(updatedImagesInfo);\n        }\n      });\n    }\n  }, [product]);\n\n  const updateformData = (e, type) => {\n    e.preventDefault();\n    eval(\"set\" + type + \"('\" + e.target.value + \"')\");\n  };\n\n  const checkValidation = () => {\n    setformerrs(\"\");\n    if (!name || !email || !message) {\n      setformerrs([\"All fields are required\"]);\n      return false;\n    }\n    if (!isEmail(email)) {\n      setformerrs([\"Email not valid\"]);\n      return false;\n    }\n    if (!isPhone(phone)) {\n      setformerrs([\"Phone not valid\"]);\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e && e.preventDefault();\n    let is_valid = checkValidation();\n\n    if (!is_valid) {\n      return;\n    }\n    setbackdrop(true);\n\n    let data = {\n      name: name,\n      email: email,\n      message: message,\n      phone: phone,\n    };\n\n    sendFeedbackMessage(data).then((response) => {\n      setbackdrop(false);\n      //   if (response.error) {\n      //     setformerrs(response.msg);\n\n      //     setsnackbar(true);\n      //     setsnackbarMsg(\"Form not submitted.Try again later\");\n      //     setsnackbarType(\"error\");\n      //   } else {\n      setsnackbar(true);\n      setsnackbarMsg(\"Feedback sent successfully\");\n      setsnackbarType(\"success\");\n    //   setname(\"\");\n    //   setemail(\"\");\n    //   setmessage(\"\");\n    //   window.location.replace(\"/\");\n      //   }\n    });\n  };\n  const handlesnackbar = () => {\n    setsnackbar(!snackbar);\n  };\n\n  return (\n    <Layout>\n      <Snackbar\n        open={snackbar}\n        autoHideDuration={6000}\n        onClose={handlesnackbar}\n      >\n        <Alert onClose={handlesnackbar} severity={snackbarType}>\n          {snackbarMsg}\n        </Alert>\n      </Snackbar>\n      <section className={classes.section}>\n        {backdrop && (\n          <Backdrop\n            className={classes.backdrop}\n            open={backdrop}\n            // onClick={handleClose}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        )}\n        <Container maxWidth=\"xl\">\n          <Grid container>\n            <Grid item lg={9} md={9} sm={8} xs={12} style={{ margin: \"auto\" }}>\n              <Card className={classes.card}>\n                <CardContent className={classes.cardBody}>\n                  <Typography variant=\"h4\" style={{ marginBottom: \"1rem\" }}>\n                    Your Feedback\n                  </Typography>\n                  <form\n                    className={classes.form}\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={handleSubmit}\n                  >\n                    <div className={classes.formInput}>\n                      <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                          <SubtitlesIcon />\n                        </Grid>\n                        <Grid item className={classes.formInputField}>\n                          <TextField\n                            id=\"name\"\n                            label=\"Name\"\n                            value={name}\n                            onChange={(e) => updateformData(e, \"name\")}\n                          />\n                        </Grid>\n                      </Grid>\n                    </div>\n                    <div className={classes.formInput}>\n                      <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                          <LocalOfferIcon />\n                        </Grid>\n                        <Grid item className={classes.formInputField}>\n                          <TextField\n                            id=\"email\"\n                            label=\"Email\"\n                            value={email}\n                            type=\"email\"\n                            onChange={(e) => updateformData(e, \"email\")}\n                          />\n                        </Grid>\n                      </Grid>\n                      {/* <Typography color=\"error\">Email not valid</Typography> */}\n                    </div>\n                    <div className={classes.formInput}>\n                      <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                          <PhoneIcon />\n                        </Grid>\n                        <Grid item className={classes.formInputField}>\n                          <TextField\n                            id=\"phone\"\n                            label=\"Phone\"\n                            value={phone}\n                            type=\"phone\"\n                            onChange={(e) => updateformData(e, \"phone\")}\n                          />\n                        </Grid>\n                      </Grid>\n                      {/* <Typography color=\"error\">Email not valid</Typography> */}\n                    </div>\n\n                    <div\n                      className={`${classes.formInput} ${classes.formInputFullWidth}`}\n                    >\n                      <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                          <DetailsIcon />\n                        </Grid>\n                        <Grid\n                          item\n                          className={`${classes.formInputField} ${classes.formInputFieldFull}`}\n                        >\n                          <textarea\n                            id=\"message\"\n                            label=\"Message\"\n                            value={message}\n                            placeholder=\"Message\"\n                            onChange={(e) => updateformData(e, \"message\")}\n                          />\n                        </Grid>\n                      </Grid>\n                    </div>\n\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      className={classes.Button}\n                    >\n                      Submit\n                    </Button>\n                  </form>\n                  {formerrs.length > 0 &&\n                    formerrs.map((msg, index) => (\n                      <Typography color=\"error\" key={`error${index}`}>\n                        {msg}\n                      </Typography>\n                    ))}\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </section>\n    </Layout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}